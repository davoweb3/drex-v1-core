{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "nft_address",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20_address",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkFulfilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "ChainlinkRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transferd_amout",
          "type": "uint256"
        }
      ],
      "name": "TOKEN_TRANSFER",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "curr_volume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "drex_token_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_volume",
          "type": "uint256"
        }
      ],
      "name": "fulfill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nft_contract",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "request_sensor_data",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "volume",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "14": "C:/Users/shobh/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/Chainlink.sol",
    "15": "C:/Users/shobh/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/ChainlinkClient.sol",
    "22": "C:/Users/shobh/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/vendor/BufferChainlink.sol",
    "23": "C:/Users/shobh/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/vendor/CBORChainlink.sol",
    "25": "contracts/AdvancedCollectible.sol",
    "26": "contracts/DrexApi.sol",
    "27": "contracts/Our_ERC20.sol"
  },
  "ast": {
    "absolutePath": "contracts/DrexApi.sol",
    "exportedSymbols": {
      "Address": [
        4134
      ],
      "AdvancedCollectible": [
        480
      ],
      "BufferChainlink": [
        4902
      ],
      "CBORChainlink": [
        5349
      ],
      "Chainlink": [
        3337
      ],
      "ChainlinkClient": [
        1536
      ],
      "ChainlinkRequestInterface": [
        3370
      ],
      "Client": [
        668
      ],
      "Context": [
        4156
      ],
      "DRExToken": [
        943
      ],
      "ENSInterface": [
        3450
      ],
      "ENSResolver_Chainlink": [
        3643
      ],
      "ERC165": [
        4355
      ],
      "ERC20": [
        3068
      ],
      "ERC721": [
        2481
      ],
      "ERC721URIStorage": [
        871
      ],
      "IERC165": [
        5400
      ],
      "IERC20": [
        746
      ],
      "IERC20Metadata": [
        4380
      ],
      "IERC721": [
        3759
      ],
      "IERC721Metadata": [
        3804
      ],
      "IERC721Receiver": [
        3777
      ],
      "LinkTokenInterface": [
        3545
      ],
      "Math": [
        6265
      ],
      "Nft_interface": [
        10
      ],
      "OperatorInterface": [
        3625
      ],
      "OracleInterface": [
        5388
      ],
      "PointerInterface": [
        3633
      ],
      "Strings": [
        4331
      ],
      "drex_token_interface": [
        883
      ]
    },
    "id": 669,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 482,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:26"
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.5.1/contracts/src/v0.8/ChainlinkClient.sol",
        "file": "@chainlink/contracts/src/v0.8/ChainlinkClient.sol",
        "id": 483,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 669,
        "sourceUnit": 1537,
        "src": "62:59:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/AdvancedCollectible.sol",
        "file": "./AdvancedCollectible.sol",
        "id": 484,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 669,
        "sourceUnit": 481,
        "src": "122:35:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Our_ERC20.sol",
        "file": "./Our_ERC20.sol",
        "id": 485,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 669,
        "sourceUnit": 944,
        "src": "158:25:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 486,
              "name": "ChainlinkClient",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1536,
              "src": "204:15:26"
            },
            "id": 487,
            "nodeType": "InheritanceSpecifier",
            "src": "204:15:26"
          }
        ],
        "canonicalName": "Client",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 668,
        "linearizedBaseContracts": [
          668,
          1536
        ],
        "name": "Client",
        "nameLocation": "194:6:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 491,
            "libraryName": {
              "id": 488,
              "name": "Chainlink",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3337,
              "src": "232:9:26"
            },
            "nodeType": "UsingForDirective",
            "src": "226:38:26",
            "typeName": {
              "id": 490,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 489,
                "name": "Chainlink.Request",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3094,
                "src": "246:17:26"
              },
              "referencedDeclaration": 3094,
              "src": "246:17:26",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Request_$3094_storage_ptr",
                "typeString": "struct Chainlink.Request"
              }
            }
          },
          {
            "constant": false,
            "id": 493,
            "mutability": "mutable",
            "name": "oracle",
            "nameLocation": "286:6:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "270:22:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 492,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "270:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 495,
            "mutability": "mutable",
            "name": "jobId",
            "nameLocation": "314:5:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "298:21:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 494,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "298:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 497,
            "mutability": "mutable",
            "name": "fee",
            "nameLocation": "341:3:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "325:19:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 496,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "325:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c618a1e4",
            "id": 499,
            "mutability": "mutable",
            "name": "volume",
            "nameLocation": "365:6:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "350:21:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 498,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "350:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fcdcdeee",
            "id": 501,
            "mutability": "mutable",
            "name": "nft_contract",
            "nameLocation": "400:12:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "377:35:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 500,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "377:15:26",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8c92ea6",
            "id": 503,
            "mutability": "mutable",
            "name": "drex_token_contract",
            "nameLocation": "433:19:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "418:34:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 502,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "418:7:26",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a14aa511",
            "id": 505,
            "mutability": "mutable",
            "name": "curr_volume",
            "nameLocation": "473:11:26",
            "nodeType": "VariableDeclaration",
            "scope": 668,
            "src": "458:26:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 504,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "458:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "d54fe17376faee64eeced9c450072891fba80c4f6a94ae654f0634600f82f54e",
            "id": 509,
            "name": "TOKEN_TRANSFER",
            "nameLocation": "510:14:26",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 507,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "transferd_amout",
                  "nameLocation": "533:15:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 509,
                  "src": "525:23:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "525:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "524:25:26"
            },
            "src": "504:46:26"
          },
          {
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "745:323:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "307861333630383546363965323838396332323432313046363033443833363734386537644330303838",
                            "id": 520,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "781:42:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xa36085F69e2889c224210F603D836748e7dC0088"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "773:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 518,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "773:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "773:51:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 517,
                      "name": "setChainlinkToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1344,
                      "src": "755:17:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "755:70:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 523,
                  "nodeType": "ExpressionStatement",
                  "src": "755:70:26"
                },
                {
                  "expression": {
                    "id": 526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 524,
                      "name": "oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 493,
                      "src": "835:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307844344439616334656346356444663138303536636536413931643061384537423063393130636345",
                      "id": 525,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "844:42:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0xD4D9ac4ecF5dDf18056ce6A91d0a8E7B0c910ccE"
                    },
                    "src": "835:51:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 527,
                  "nodeType": "ExpressionStatement",
                  "src": "835:51:26"
                },
                {
                  "expression": {
                    "id": 530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 528,
                      "name": "jobId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 495,
                      "src": "896:5:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3739616263316533366265333430613639376532623439646432643836373938",
                      "id": 529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "904:34:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_82b3ec8b94ef1af1cedba62572a13ba62cde828027a075bceb87f4156d980aca",
                        "typeString": "literal_string \"79abc1e36be340a697e2b49dd2d86798\""
                      },
                      "value": "79abc1e36be340a697e2b49dd2d86798"
                    },
                    "src": "896:42:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 531,
                  "nodeType": "ExpressionStatement",
                  "src": "896:42:26"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 532,
                      "name": "fee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 497,
                      "src": "948:3:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "954:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "948:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "948:7:26"
                },
                {
                  "expression": {
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 536,
                      "name": "nft_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 501,
                      "src": "965:12:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 537,
                      "name": "nft_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 512,
                      "src": "980:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "965:26:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "965:26:26"
                },
                {
                  "expression": {
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 540,
                      "name": "drex_token_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "1001:19:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 541,
                      "name": "erc20_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "1023:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1001:35:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:35:26"
                },
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "curr_volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "1046:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1060:1:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1046:15:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1046:15:26"
                }
              ]
            },
            "documentation": {
              "id": 510,
              "nodeType": "StructuredDocumentation",
              "src": "556:120:26",
              "text": "This example uses the LINK token address on Moonbase Alpha.\nMake sure to update the oracle and jobId."
            },
            "id": 549,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 512,
                  "mutability": "mutable",
                  "name": "nft_address",
                  "nameLocation": "709:11:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "693:27:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 511,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:15:26",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 514,
                  "mutability": "mutable",
                  "name": "erc20_address",
                  "nameLocation": "730:13:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "722:21:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:26",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "692:52:26"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "745:0:26"
            },
            "scope": 668,
            "src": "681:387:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 604,
              "nodeType": "Block",
              "src": "1462:773:26",
              "statements": [
                {
                  "assignments": [
                    559
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 559,
                      "mutability": "mutable",
                      "name": "request",
                      "nameLocation": "1497:7:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 604,
                      "src": "1472:32:26",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                        "typeString": "struct Chainlink.Request"
                      },
                      "typeName": {
                        "id": 558,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 557,
                          "name": "Chainlink.Request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3094,
                          "src": "1472:17:26"
                        },
                        "referencedDeclaration": 3094,
                        "src": "1472:17:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$3094_storage_ptr",
                          "typeString": "struct Chainlink.Request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 570,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 561,
                        "name": "jobId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 495,
                        "src": "1542:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 564,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1569:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Client_$668",
                              "typeString": "contract Client"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Client_$668",
                              "typeString": "contract Client"
                            }
                          ],
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1561:7:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 562,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1561:7:26",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1561:13:26",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 566,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1588:4:26",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Client_$668",
                              "typeString": "contract Client"
                            }
                          },
                          "id": 567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "fulfill",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 621,
                          "src": "1588:12:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
                            "typeString": "function (bytes32,uint256) external"
                          }
                        },
                        "id": 568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1588:21:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 560,
                      "name": "buildChainlinkRequest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "1507:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_address_$_t_bytes4_$returns$_t_struct$_Request_$3094_memory_ptr_$",
                        "typeString": "function (bytes32,address,bytes4) pure returns (struct Chainlink.Request memory)"
                      }
                    },
                    "id": 569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:112:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                      "typeString": "struct Chainlink.Request memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1472:147:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "676574",
                        "id": 574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1708:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        "value": "get"
                      },
                      {
                        "hexValue": "687474703a2f2f64726578616c6c2d656e762e6562612d65336d6e6e6d36392e75732d656173742d312e656c61737469636265616e7374616c6b2e636f6d2f677269642f6c6173743f636f64653d647265785f70696c6f74",
                        "id": 575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1727:90:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa7c68434423e9a8933894acce88c77b1000c9f3ac5c222c88044e23f2680ac9",
                          "typeString": "literal_string \"http://drexall-env.eba-e3mnnm69.us-east-1.elasticbeanstalk.com/grid/last?code=drex_pilot\""
                        },
                        "value": "http://drexall-env.eba-e3mnnm69.us-east-1.elasticbeanstalk.com/grid/last?code=drex_pilot"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6817c00f03de8b5bd58d2016b59d251c13056b989171c5852949903bc043bc27",
                          "typeString": "literal_string \"get\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa7c68434423e9a8933894acce88c77b1000c9f3ac5c222c88044e23f2680ac9",
                          "typeString": "literal_string \"http://drexall-env.eba-e3mnnm69.us-east-1.elasticbeanstalk.com/grid/last?code=drex_pilot\""
                        }
                      ],
                      "expression": {
                        "id": 571,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "1683:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 573,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3194,
                      "src": "1683:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$3094_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$3094_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1683:144:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 577,
                  "nodeType": "ExpressionStatement",
                  "src": "1683:144:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "70617468",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1951:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        "value": "path"
                      },
                      {
                        "hexValue": "656e657267792d616363756d756c61746564",
                        "id": 582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1959:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54aa8f7359e6b922af10debaa408ce59adbd93858ff7a913c58c1741993c7f01",
                          "typeString": "literal_string \"energy-accumulated\""
                        },
                        "value": "energy-accumulated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_46f9db2921f88204395f1f47d741736216b2218e88e47f50e1f1b56261f0d0cd",
                          "typeString": "literal_string \"path\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54aa8f7359e6b922af10debaa408ce59adbd93858ff7a913c58c1741993c7f01",
                          "typeString": "literal_string \"energy-accumulated\""
                        }
                      ],
                      "expression": {
                        "id": 578,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "1939:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 580,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "add",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3194,
                      "src": "1939:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$3094_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_Request_$3094_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,string memory) pure"
                      }
                    },
                    "id": 583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:41:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 584,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:41:26"
                },
                {
                  "assignments": [
                    586
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 586,
                      "mutability": "mutable",
                      "name": "timesAmount",
                      "nameLocation": "2071:11:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 604,
                      "src": "2064:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 585,
                        "name": "int256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 590,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2085:2:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 588,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2089:2:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2085:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2064:27:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74696d6573",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2116:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        "value": "times"
                      },
                      {
                        "id": 595,
                        "name": "timesAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 586,
                        "src": "2125:11:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0bfab8028df7ddaceaf0a173b093c1269c5dd964bbe8cc0c6b210e554970802b",
                          "typeString": "literal_string \"times\""
                        },
                        {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      ],
                      "expression": {
                        "id": 591,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "2101:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      "id": 593,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addInt",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3250,
                      "src": "2101:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Request_$3094_memory_ptr_$_t_string_memory_ptr_$_t_int256_$returns$__$bound_to$_t_struct$_Request_$3094_memory_ptr_$",
                        "typeString": "function (struct Chainlink.Request memory,string memory,int256) pure"
                      }
                    },
                    "id": 596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2101:36:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 597,
                  "nodeType": "ExpressionStatement",
                  "src": "2101:36:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 599,
                        "name": "oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 493,
                        "src": "2207:6:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 600,
                        "name": "request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 559,
                        "src": "2215:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        }
                      },
                      {
                        "id": 601,
                        "name": "fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 497,
                        "src": "2224:3:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_Request_$3094_memory_ptr",
                          "typeString": "struct Chainlink.Request memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 598,
                      "name": "sendChainlinkRequestTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1152,
                      "src": "2184:22:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_struct$_Request_$3094_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,struct Chainlink.Request memory,uint256) returns (bytes32)"
                      }
                    },
                    "id": 602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2184:44:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 554,
                  "id": 603,
                  "nodeType": "Return",
                  "src": "2177:51:26"
                }
              ]
            },
            "documentation": {
              "id": 550,
              "nodeType": "StructuredDocumentation",
              "src": "1255:136:26",
              "text": "@notice This functions sends requests on the end point and calls the fulfill function to update the volume\n @return requestId"
            },
            "functionSelector": "48356631",
            "id": 605,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "request_sensor_data",
            "nameLocation": "1405:19:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1424:2:26"
            },
            "returnParameters": {
              "id": 554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 553,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1451:9:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 605,
                  "src": "1443:17:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 552,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1443:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1442:19:26"
            },
            "scope": 668,
            "src": "1396:839:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 620,
              "nodeType": "Block",
              "src": "2428:33:26",
              "statements": [
                {
                  "expression": {
                    "id": 618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 616,
                      "name": "volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "2438:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 617,
                      "name": "_volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 610,
                      "src": "2447:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2438:16:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 619,
                  "nodeType": "ExpressionStatement",
                  "src": "2438:16:26"
                }
              ]
            },
            "documentation": {
              "id": 606,
              "nodeType": "StructuredDocumentation",
              "src": "2241:62:26",
              "text": " Receive the response in the form of uint256"
            },
            "functionSelector": "4357855e",
            "id": 621,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 613,
                    "name": "_requestId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 608,
                    "src": "2412:10:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 612,
                  "name": "recordChainlinkFulfillment",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1516,
                  "src": "2385:26:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "2385:38:26"
              }
            ],
            "name": "fulfill",
            "nameLocation": "2317:7:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 611,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 608,
                  "mutability": "mutable",
                  "name": "_requestId",
                  "nameLocation": "2333:10:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "2325:18:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 607,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2325:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 610,
                  "mutability": "mutable",
                  "name": "_volume",
                  "nameLocation": "2353:7:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 621,
                  "src": "2345:15:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 609,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2345:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2324:37:26"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2428:0:26"
            },
            "scope": 668,
            "src": "2308:153:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "2647:381:26",
              "statements": [
                {
                  "assignments": [
                    626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 626,
                      "mutability": "mutable",
                      "name": "amt_generated",
                      "nameLocation": "2665:13:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 666,
                      "src": "2657:21:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2657:7:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 630,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 627,
                      "name": "volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "2681:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 628,
                      "name": "curr_volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "2690:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2681:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2657:44:26"
                },
                {
                  "expression": {
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 631,
                      "name": "curr_volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 505,
                      "src": "2711:11:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 632,
                      "name": "volume",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 499,
                      "src": "2725:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2711:20:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 634,
                  "nodeType": "ExpressionStatement",
                  "src": "2711:20:26"
                },
                {
                  "assignments": [
                    637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 637,
                      "mutability": "mutable",
                      "name": "nfti",
                      "nameLocation": "2755:4:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 666,
                      "src": "2741:18:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Nft_interface_$10",
                        "typeString": "contract Nft_interface"
                      },
                      "typeName": {
                        "id": 636,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 635,
                          "name": "Nft_interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10,
                          "src": "2741:13:26"
                        },
                        "referencedDeclaration": 10,
                        "src": "2741:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Nft_interface_$10",
                          "typeString": "contract Nft_interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 641,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 639,
                        "name": "nft_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "2776:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 638,
                      "name": "Nft_interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "2762:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Nft_interface_$10_$",
                        "typeString": "type(contract Nft_interface)"
                      }
                    },
                    "id": 640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2762:27:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Nft_interface_$10",
                      "typeString": "contract Nft_interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2741:48:26"
                },
                {
                  "assignments": [
                    644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 644,
                      "mutability": "mutable",
                      "name": "erc20",
                      "nameLocation": "2820:5:26",
                      "nodeType": "VariableDeclaration",
                      "scope": 666,
                      "src": "2799:26:26",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_drex_token_interface_$883",
                        "typeString": "contract drex_token_interface"
                      },
                      "typeName": {
                        "id": 643,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 642,
                          "name": "drex_token_interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 883,
                          "src": "2799:20:26"
                        },
                        "referencedDeclaration": 883,
                        "src": "2799:20:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_drex_token_interface_$883",
                          "typeString": "contract drex_token_interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 648,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 646,
                        "name": "drex_token_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 503,
                        "src": "2849:19:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 645,
                      "name": "drex_token_interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 883,
                      "src": "2828:20:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_drex_token_interface_$883_$",
                        "typeString": "type(contract drex_token_interface)"
                      }
                    },
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2828:41:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_drex_token_interface_$883",
                      "typeString": "contract drex_token_interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2799:70:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 652,
                        "name": "nft_contract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "2901:12:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 653,
                        "name": "amt_generated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2915:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 649,
                        "name": "erc20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 644,
                        "src": "2879:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_drex_token_interface_$883",
                          "typeString": "contract drex_token_interface"
                        }
                      },
                      "id": 651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "tranferingfunds",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 882,
                      "src": "2879:21:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2879:50:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 655,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:50:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 659,
                        "name": "amt_generated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "2963:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 656,
                        "name": "nfti",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 637,
                        "src": "2939:4:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Nft_interface_$10",
                          "typeString": "contract Nft_interface"
                        }
                      },
                      "id": 658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "update_nft_balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "2939:23:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2939:38:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 661,
                  "nodeType": "ExpressionStatement",
                  "src": "2939:38:26"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 663,
                        "name": "amt_generated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 626,
                        "src": "3007:13:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 662,
                      "name": "TOKEN_TRANSFER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 509,
                      "src": "2992:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2992:29:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 665,
                  "nodeType": "EmitStatement",
                  "src": "2987:34:26"
                }
              ]
            },
            "documentation": {
              "id": 622,
              "nodeType": "StructuredDocumentation",
              "src": "2467:142:26",
              "text": "@notice This function makes intercontract calls and transfers the erc20 tokens to nft contract and updates the balance for each nft holder"
            },
            "functionSelector": "23a98bd7",
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "token_transfer",
            "nameLocation": "2623:14:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 623,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2637:2:26"
            },
            "returnParameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2647:0:26"
            },
            "scope": 668,
            "src": "2614:414:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 669,
        "src": "185:2845:26",
        "usedErrors": []
      }
    ],
    "src": "37:2994:26"
  },
  "bytecode": "",
  "bytecodeSha1": "dc9ffb96bc15ac7d97fcab51afcff2e8a104b92d",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "Client",
  "coverageMap": {
    "branches": {
      "14": {},
      "15": {
        "ChainlinkClient._rawRequest": {
          "76": [
            6952,
            7014,
            true
          ]
        }
      },
      "22": {
        "BufferChainlink.init": {
          "63": [
            1100,
            1118,
            false
          ]
        },
        "BufferChainlink.max": {
          "68": [
            2037,
            2042,
            false
          ]
        },
        "BufferChainlink.write": {
          "64": [
            2896,
            2914,
            true
          ],
          "65": [
            2926,
            2950,
            false
          ]
        },
        "BufferChainlink.writeInt": {
          "67": [
            9118,
            9142,
            false
          ]
        },
        "BufferChainlink.writeUint8": {
          "66": [
            5276,
            5295,
            false
          ]
        }
      },
      "23": {
        "CBORChainlink.encodeFixedNumeric": {
          "72": [
            794,
            805,
            false
          ],
          "73": [
            876,
            889,
            false
          ],
          "74": [
            988,
            1003,
            false
          ],
          "75": [
            1102,
            1121,
            false
          ]
        },
        "CBORChainlink.encodeInt": {
          "69": [
            1792,
            1820,
            false
          ],
          "70": [
            1876,
            1902,
            false
          ],
          "71": [
            1958,
            1968,
            false
          ]
        }
      },
      "25": {},
      "26": {},
      "27": {}
    },
    "statements": {
      "14": {
        "Chainlink.add": {
          "10": [
            2061,
            2087
          ],
          "11": [
            2093,
            2121
          ]
        },
        "Chainlink.addInt": {
          "12": [
            2818,
            2844
          ],
          "13": [
            2850,
            2875
          ]
        },
        "Chainlink.initialize": {
          "16": [
            1161,
            1210
          ],
          "17": [
            1216,
            1231
          ],
          "18": [
            1237,
            1272
          ],
          "19": [
            1278,
            1316
          ]
        }
      },
      "15": {
        "ChainlinkClient._rawRequest": {
          "26": [
            6796,
            6848
          ],
          "27": [
            6854,
            6898
          ],
          "28": [
            6904,
            6938
          ],
          "29": [
            6944,
            7054
          ]
        },
        "ChainlinkClient.buildChainlinkRequest": {
          "9": [
            2058,
            2128
          ]
        },
        "ChainlinkClient.sendChainlinkRequestTo": {
          "14": [
            3884,
            3910
          ],
          "15": [
            4373,
            4438
          ]
        }
      },
      "22": {
        "BufferChainlink.append": {
          "41": [
            4790,
            4842
          ]
        },
        "BufferChainlink.appendInt": {
          "47": [
            10019,
            10066
          ]
        },
        "BufferChainlink.appendUint8": {
          "46": [
            6136,
            6180
          ]
        },
        "BufferChainlink.init": {
          "30": [
            1128,
            1160
          ],
          "31": [
            1214,
            1237
          ]
        },
        "BufferChainlink.max": {
          "59": [
            2052,
            2060
          ],
          "60": [
            2072,
            2080
          ]
        },
        "BufferChainlink.resize": {
          "61": [
            1908,
            1927
          ],
          "62": [
            1933,
            1952
          ]
        },
        "BufferChainlink.write": {
          "48": [
            2888,
            2915
          ],
          "49": [
            2960,
            3005
          ],
          "50": [
            3639,
            3649
          ],
          "51": [
            3657,
            3666
          ],
          "52": [
            3562,
            3571
          ],
          "53": [
            3940,
            3950
          ]
        },
        "BufferChainlink.writeInt": {
          "57": [
            9152,
            9180
          ],
          "58": [
            9634,
            9644
          ]
        },
        "BufferChainlink.writeUint8": {
          "55": [
            5305,
            5334
          ],
          "56": [
            5772,
            5782
          ]
        }
      },
      "23": {
        "CBORChainlink.encodeBigNum": {
          "44": [
            2434,
            2497
          ],
          "45": [
            2503,
            2538
          ]
        },
        "CBORChainlink.encodeBytes": {
          "54": [
            2250,
            2313
          ]
        },
        "CBORChainlink.encodeFixedNumeric": {
          "32": [
            815,
            859
          ],
          "33": [
            899,
            940
          ],
          "34": [
            948,
            971
          ],
          "35": [
            1013,
            1054
          ],
          "36": [
            1062,
            1085
          ],
          "37": [
            1131,
            1172
          ],
          "38": [
            1180,
            1203
          ],
          "39": [
            1224,
            1265
          ],
          "40": [
            1273,
            1296
          ]
        },
        "CBORChainlink.encodeInt": {
          "22": [
            1830,
            1860
          ],
          "23": [
            1912,
            1942
          ],
          "24": [
            1978,
            2041
          ],
          "25": [
            2062,
            2139
          ]
        },
        "CBORChainlink.encodeSignedBigNum": {
          "42": [
            2641,
            2713
          ],
          "43": [
            2719,
            2768
          ]
        },
        "CBORChainlink.encodeString": {
          "20": [
            2875,
            2946
          ],
          "21": [
            2952,
            2976
          ]
        }
      },
      "25": {},
      "26": {
        "Client.fulfill": {
          "4": [
            2438,
            2454
          ]
        },
        "Client.request_sensor_data": {
          "5": [
            1683,
            1827
          ],
          "6": [
            1939,
            1980
          ],
          "7": [
            2101,
            2137
          ],
          "8": [
            2177,
            2228
          ]
        },
        "Client.token_transfer": {
          "0": [
            2711,
            2731
          ],
          "1": [
            2879,
            2929
          ],
          "2": [
            2939,
            2977
          ],
          "3": [
            2987,
            3021
          ]
        }
      },
      "27": {}
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.5.1/BufferChainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.5.1/CBORChainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.5.1/Chainlink",
    "smartcontractkit/chainlink-brownie-contracts@0.5.1/ChainlinkClient",
    "Nft_interface",
    "drex_token_interface"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a14aa5111161005b578063a14aa511146100ba578063c618a1e4146100c3578063c8c92ea6146100cc578063fcdcdeee146100f757600080fd5b806323a98bd7146100825780634357855e1461008c578063483566311461009f575b600080fd5b61008a61010a565b005b61008a61009a366004610bab565b610229565b6100a76102f1565b6040519081526020015b60405180910390f35b6100a7600c5481565b6100a760095481565b600b546100df906001600160a01b031681565b6040516001600160a01b0390911681526020016100b1565b600a546100df906001600160a01b031681565b6000600c5460095461011c9190610be3565b600954600c55600a54600b54604051635bf6fa8960e01b81526001600160a01b0392831660048201819052602482018590529394509116908190635bf6fa8990604401600060405180830381600087803b15801561017957600080fd5b505af115801561018d573d6000803e3d6000fd5b5050604051638a77409160e01b8152600481018690526001600160a01b0385169250638a7740919150602401600060405180830381600087803b1580156101d357600080fd5b505af11580156101e7573d6000803e3d6000fd5b505050507fd54fe17376faee64eeced9c450072891fba80c4f6a94ae654f0634600f82f54e8360405161021c91815260200190565b60405180910390a1505050565b60008281526005602052604090205482906001600160a01b031633146102a75760405162461bcd60e51b815260206004820152602860248201527f536f75726365206d75737420626520746865206f7261636c65206f6620746865604482015267081c995c5d595cdd60c21b60648201526084015b60405180910390fd5b60008181526005602052604080822080546001600160a01b03191690555182917f7cc135e0cebb02c3480ae5d74d377283180a2601f8f644edf7987b009316c63a91a25060095550565b60008061030860075430634357855e60e01b6103f9565b905061034a6040518060400160405280600381526020016219d95d60ea1b815250604051806080016040528060588152602001610e816058913983919061041e565b6103a5604051806040016040528060048152602001630e0c2e8d60e31b81525060405180604001604052806012815260200171195b995c99de4b5858d8dd5b5d5b185d195960721b8152508361041e9092919063ffffffff16565b60408051808201909152600581526474696d657360d81b6020820152670de0b6b3a7640000906103d790839083610441565b6006546008546103f2916001600160a01b031690849061045f565b9250505090565b610401610b70565b610409610b70565b610415818686866104f2565b95945050505050565b608083015161042d9083610538565b608083015161043c9082610538565b505050565b60808301516104509083610538565b608083015161043c908261054f565b600454600090610470816001610bfa565b600455835160408086015160808701515191516000936320214ca360e11b936104a89386938493923092918a91600191602401610c5f565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915290506104e8868386846105b3565b9695505050505050565b6104fa610b70565b61050a8560800151610100610711565b50508284526001600160a01b03821660208501526001600160e01b031981166040850152835b949350505050565b610545826003835161077c565b61043c8282610891565b67ffffffffffffffff1981121561056e5761056a82826108bf565b5050565b67ffffffffffffffff8113156105885761056a8282610901565b6000811261059c5761056a8260008361077c565b61056a8260016105ae84600019610cc7565b61077c565b6040516bffffffffffffffffffffffff193060601b1660208201526034810184905260009060540160408051808303601f1901815282825280516020918201206000818152600590925291812080546001600160a01b0319166001600160a01b038a1617905590925082917fb5e6e01e79f91267dc17b4e6314d5d4d03593d2ceee0fbb452b750bd70ea5af99190a2600254604051630200057560e51b81526001600160a01b0390911690634000aea09061067690889087908790600401610d06565b6020604051808303816000875af1158015610695573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b99190610d2d565b6105305760405162461bcd60e51b815260206004820152602360248201527f756e61626c6520746f207472616e73666572416e6443616c6c20746f206f7261604482015262636c6560e81b606482015260840161029e565b604080518082019091526060815260006020820152610731602083610d4f565b1561075957610741602083610d4f565b61074c906020610be3565b6107569083610bfa565b91505b506020808301829052604080518085526000815283019091019052815b92915050565b60178167ffffffffffffffff16116107a7576107a18360e0600585901b168317610924565b50505050565b60ff8167ffffffffffffffff16116107e5576107ce836018611fe0600586901b1617610924565b506107a18367ffffffffffffffff83166001610949565b61ffff8167ffffffffffffffff16116108245761080d836019611fe0600586901b1617610924565b506107a18367ffffffffffffffff83166002610949565b63ffffffff8167ffffffffffffffff16116108655761084e83601a611fe0600586901b1617610924565b506107a18367ffffffffffffffff83166004610949565b61087a83601b611fe0600586901b1617610924565b506107a18367ffffffffffffffff83166008610949565b6040805180820190915260608152600060208201526108b88384600001515184855161096f565b9392505050565b6108ca8260c3610924565b5061056a826108db83600019610cc7565b6040516020016108ed91815260200190565b604051602081830303815290604052610a59565b61090c8260c2610924565b5061056a82826040516020016108ed91815260200190565b6040805180820190915260608152600060208201526108b88384600001515184610a66565b604080518082019091526060815260006020820152610530848560000151518585610ac1565b604080518082019091526060815260006020820152825182111561099257600080fd5b60208501516109a18386610bfa565b11156109d4576109d4856109c4876020015187866109bf9190610bfa565b610b42565b6109cf906002610d71565b610b59565b6000808651805187602083010193508088870111156109f35787860182525b505050602084015b60208410610a335780518252610a12602083610bfa565b9150610a1f602082610bfa565b9050610a2c602085610be3565b93506109fb565b51815160001960208690036101000a019081169019919091161790525083949350505050565b610545826002835161077c565b60408051808201909152606081526000602082015283602001518310610a9b57610a9b84856020015160026109cf9190610d71565b8351805160208583010184815350808503610ab7576001810182525b5093949350505050565b6040805180820190915260608152600060208201526020850151610ae58584610bfa565b1115610af957610af9856109c48685610bfa565b60006001610b0984610100610e74565b610b139190610be3565b9050855183868201018583198251161781525080518487011115610b375783860181525b509495945050505050565b600081831115610b53575081610776565b50919050565b8151610b658383610711565b506107a18382610891565b6040805160a0810182526000808252602080830182905282840182905260608084018390528451808601909552845283015290608082015290565b60008060408385031215610bbe57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082821015610bf557610bf5610bcd565b500390565b60008219821115610c0d57610c0d610bcd565b500190565b6000815180845260005b81811015610c3857602081850181015186830182015201610c1c565b81811115610c4a576000602083870101525b50601f01601f19169290920160200192915050565b6001600160a01b0389811682526020820189905260408201889052861660608201526001600160e01b03198516608082015260a0810184905260c0810183905261010060e08201819052600090610cb883820185610c12565b9b9a5050505050505050505050565b60008083128015600160ff1b850184121615610ce557610ce5610bcd565b6001600160ff1b0384018313811615610d0057610d00610bcd565b50500390565b60018060a01b03841681528260208201526060604082015260006104156060830184610c12565b600060208284031215610d3f57600080fd5b815180151581146108b857600080fd5b600082610d6c57634e487b7160e01b600052601260045260246000fd5b500690565b6000816000190483118215151615610d8b57610d8b610bcd565b500290565b600181815b80851115610dcb578160001904821115610db157610db1610bcd565b80851615610dbe57918102915b93841c9390800290610d95565b509250929050565b600082610de257506001610776565b81610def57506000610776565b8160018114610e055760028114610e0f57610e2b565b6001915050610776565b60ff841115610e2057610e20610bcd565b50506001821b610776565b5060208310610133831016604e8410600b8410161715610e4e575081810a610776565b610e588383610d90565b8060001904821115610e6c57610e6c610bcd565b029392505050565b60006108b88383610dd356fe687474703a2f2f64726578616c6c2d656e762e6562612d65336d6e6e6d36392e75732d656173742d312e656c61737469636265616e7374616c6b2e636f6d2f677269642f6c6173743f636f64653d647265785f70696c6f74a2646970667358221220fbe5b0c32249f744bbf7cafe7c344ffcf4174f38c64aa73ba041e9260265812b64736f6c634300080e0033",
  "deployedSourceMap": "185:2845:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2614:414;;;:::i;:::-;;2308:153;;;;;;:::i;:::-;;:::i;1396:839::-;;;:::i;:::-;;;413:25:28;;;401:2;386:18;1396:839:26;;;;;;;;458:26;;;;;;350:21;;;;;;418:34;;;;;-1:-1:-1;;;;;418:34:26;;;;;;-1:-1:-1;;;;;795:32:28;;;777:51;;765:2;750:18;418:34:26;631:203:28;377:35:26;;;;;-1:-1:-1;;;;;377:35:26;;;2614:414;2657:21;2690:11;;2681:6;;:20;;;;:::i;:::-;2725:6;;2711:11;:20;2776:12;;2849:19;;2879:50;;-1:-1:-1;;;2879:50:26;;-1:-1:-1;;;;;2776:12:26;;;2879:50;;;1515:51:28;;;1582:18;;;1575:34;;;2657:44:26;;-1:-1:-1;2849:19:26;;;;;2879:21;;1488:18:28;;2879:50:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2939:38:26;;-1:-1:-1;;;2939:38:26;;;;;413:25:28;;;-1:-1:-1;;;;;2939:23:26;;;-1:-1:-1;2939:23:26;;-1:-1:-1;386:18:28;;2939:38:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2992:29;3007:13;2992:29;;;;413:25:28;;401:2;386:18;;267:177;2992:29:26;;;;;;;;2647:381;;;2614:414::o;2308:153::-;11663:28:15;;;;:17;:28;;;;;;;;-1:-1:-1;;;;;11663:28:15;11649:10;:42;11641:95;;;;-1:-1:-1;;;11641:95:15;;1822:2:28;11641:95:15;;;1804:21:28;1861:2;1841:18;;;1834:30;1900:34;1880:18;;;1873:62;-1:-1:-1;;;1951:18:28;;;1944:38;1999:19;;11641:95:15;;;;;;;;;11749:28;;;;:17;:28;;;;;;11742:35;;-1:-1:-1;;;;;;11742:35:15;;;11788:29;11767:9;;11788:29;;;-1:-1:-1;2438:6:26::1;:16:::0;-1:-1:-1;2308:153:26:o;1396:839::-;1443:17;1472:32;1507:112;1542:5;;1569:4;1588:21;;;1507;:112::i;:::-;1472:147;;1683:144;;;;;;;;;;;;;;-1:-1:-1;;;1683:144:26;;;;;;;;;;;;;;;;;;;;:7;;:144;:11;:144::i;:::-;1939:41;;;;;;;;;;;;;;-1:-1:-1;;;1939:41:26;;;;;;;;;;;;;;;;-1:-1:-1;;;1939:41:26;;;:7;:11;;:41;;;;;:::i;:::-;2101:36;;;;;;;;;;;;-1:-1:-1;;;2101:36:26;;;;2085:6;;2101:36;;:7;;2085:6;2101:14;:36::i;:::-;2207:6;;2224:3;;2184:44;;-1:-1:-1;;;;;2207:6:26;;2215:7;;2184:22;:44::i;:::-;2177:51;;;;1396:839;:::o;1850:283:15:-;1992:24;;:::i;:::-;2024:28;;:::i;:::-;2065:63;:3;2080:6;2088:12;2102:25;2065:14;:63::i;:::-;2058:70;1850:283;-1:-1:-1;;;;;1850:283:15:o;1951:175:14:-;2061:8;;;;:26;;2083:3;2061:21;:26::i;:::-;2093:8;;;;:28;;2115:5;2093:21;:28::i;:::-;1951:175;;;:::o;2712:168::-;2818:8;;;;:26;;2840:3;2818:21;:26::i;:::-;2850:8;;;;:25;;2869:5;2850:18;:25::i;3687:756:15:-;3864:14;;3823:17;;3901:9;3864:14;3909:1;3901:9;:::i;:::-;3884:14;:26;4245:6;;4280:22;;;;;4350:7;;;;:11;3946:421;;3916:27;;-1:-1:-1;;;3976:48:15;3946:421;;3916:27;;;;4245:6;4267:4;;4280:22;4310:5;;837:1;;3946:421;;;:::i;:::-;;;;-1:-1:-1;;3946:421:15;;;;;;;;;;;;;;-1:-1:-1;;;;;3946:421:15;-1:-1:-1;;;;;;3946:421:15;;;;;;;;;;;-1:-1:-1;4380:58:15;4392:13;4407:5;4414:7;3946:421;4380:11;:58::i;:::-;4373:65;3687:756;-1:-1:-1;;;;;;3687:756:15:o;987:351:14:-;1129:24;;:::i;:::-;1161:49;1182:4;:8;;;361:3;1161:20;:49::i;:::-;-1:-1:-1;;1216:15:14;;;-1:-1:-1;;;;;1237:35:14;;:20;;;:35;-1:-1:-1;;;;;;1278:38:14;;:23;;;:38;1216:4;987:351;;;;;;;:::o;2777:204:23:-;2875:71;2894:3;383:1;2931:5;2925:19;2875:18;:71::i;:::-;2952:24;:3;2969:5;2952:10;:24::i;1704:446::-;-1:-1:-1;;1792:5:23;:28;1789:357;;;1830:30;1849:3;1854:5;1830:18;:30::i;:::-;1704:446;;:::o;1789:357::-;1884:18;1876:5;:26;1873:273;;;1912:30;1925:3;1935:5;1912:12;:30::i;1873:273::-;1967:1;1958:5;:10;1955:191;;1978:63;1997:3;234:1;2033:5;1978:18;:63::i;1955:191::-;2062:77;2081:3;288:1;2126:10;2131:5;-1:-1:-1;;2126:10:23;:::i;:::-;2062:18;:77::i;6629:430:15:-;6818:29;;-1:-1:-1;;6835:4:15;3937:2:28;3933:15;3929:53;6818:29:15;;;3917:66:28;3999:12;;;3992:28;;;6771:17:15;;4036:12:28;;6818:29:15;;;;;;-1:-1:-1;;6818:29:15;;;;;;6808:40;;6818:29;6808:40;;;;6854:28;;;;:17;:28;;;;;;:44;;-1:-1:-1;;;;;;6854:44:15;-1:-1:-1;;;;;6854:44:15;;;;;6808:40;;-1:-1:-1;6808:40:15;;6909:29;;6854:28;6909:29;6952:6;;:62;;-1:-1:-1;;;6952:62:15;;-1:-1:-1;;;;;6952:6:15;;;;:22;;:62;;6975:13;;6990:7;;6999:14;;6952:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6944:110;;;;-1:-1:-1;;;6944:110:15;;4933:2:28;6944:110:15;;;4915:21:28;4972:2;4952:18;;;4945:30;5011:34;4991:18;;;4984:62;-1:-1:-1;;;5062:18:28;;;5055:33;5105:19;;6944:110:15;4731:399:28;1001::22;-1:-1:-1;;;;;;;;;;;;;;;;;1100:13:22;1111:2;1100:8;:13;:::i;:::-;:18;1096:71;;1146:13;1157:2;1146:8;:13;:::i;:::-;1140:20;;:2;:20;:::i;:::-;1128:32;;;;:::i;:::-;;;1096:71;-1:-1:-1;1214:12:22;;;;:23;;;1277:4;1271:11;;1289:16;;;-1:-1:-1;1312:14:22;;1354:18;;1346:27;;;1333:41;;1214:3;1001:399;;;;;:::o;682:625:23:-;803:2;794:5;:11;;;791:512;;815:44;:3;837:20;847:1;838:10;;;837:20;;;815:15;:44::i;:::-;;1951:175:14;;;:::o;791:512:23:-;885:4;876:5;:13;;;872:431;;899:41;:3;936:2;922:10;931:1;922:10;;;;921:17;899:15;:41::i;:::-;-1:-1:-1;948:23:23;:3;:23;;;969:1;948:13;:23::i;872:431::-;997:6;988:5;:15;;;984:319;;1013:41;:3;1050:2;1036:10;1045:1;1036:10;;;;1035:17;1013:15;:41::i;:::-;-1:-1:-1;1062:23:23;:3;:23;;;1083:1;1062:13;:23::i;984:319::-;1111:10;1102:5;:19;;;1098:205;;1131:41;:3;1168:2;1154:10;1163:1;1154:10;;;;1153:17;1131:15;:41::i;:::-;-1:-1:-1;1180:23:23;:3;:23;;;1201:1;1180:13;:23::i;1098:205::-;1224:41;:3;1261:2;1247:10;1256:1;1247:10;;;;1246:17;1224:15;:41::i;:::-;-1:-1:-1;1273:23:23;:3;:23;;;1294:1;1273:13;:23::i;4692:155:22:-;-1:-1:-1;;;;;;;;;;;;;;;;;4797:45:22;4803:3;4808;:7;;;:14;4824:4;4830;:11;4797:5;:45::i;:::-;4790:52;4692:155;-1:-1:-1;;;4692:155:22:o;2547:226:23:-;2641:72;:3;2663:48;2641:15;:72::i;:::-;-1:-1:-1;2719:49:23;2731:3;2755:10;2760:5;-1:-1:-1;;2755:10:23;:::i;:::-;2736:31;;;;;;413:25:28;;401:2;386:18;;267:177;2736:31:23;;;;;;;;;;;;;2719:11;:49::i;2345:198::-;2434:63;:3;2456:39;2434:15;:63::i;:::-;;2503:35;2515:3;2531:5;2520:17;;;;;;413:25:28;;401:2;386:18;;267:177;6040:145:22;-1:-1:-1;;;;;;;;;;;;;;;;;6143:37:22;6154:3;6159;:7;;;:14;6175:4;6143:10;:37::i;9894:177::-;-1:-1:-1;;;;;;;;;;;;;;;;;10026:40:22;10035:3;10040;:7;;;:14;10056:4;10062:3;10026:8;:40::i;2745:1210::-;-1:-1:-1;;;;;;;;;;;;;;;;;2903:4:22;:11;2896:3;:18;;2888:27;;;;;;2938:12;;;;2926:9;2932:3;2926;:9;:::i;:::-;:24;2922:90;;;2960:45;2967:3;2972:28;2976:3;:12;;;2996:3;2990;:9;;;;:::i;:::-;2972:3;:28::i;:::-;:32;;3003:1;2972:32;:::i;:::-;2960:6;:45::i;:::-;3018:12;3036:11;3133:3;3127:10;3204:6;3198:13;3320:3;3315:2;3307:6;3303:15;3299:25;3291:33;;3404:6;3398:3;3393;3389:13;3386:25;3383:76;;;3446:3;3441;3437:13;3429:6;3422:29;3383:76;-1:-1:-1;;;3483:2:22;3473:13;;3544:129;3558:2;3551:3;:9;3544:129;;3613:10;;3600:24;;3639:10;3647:2;3607:4;3639:10;:::i;:::-;;-1:-1:-1;3657:9:22;3664:2;3657:9;;:::i;:::-;;-1:-1:-1;3562:9:22;3569:2;3562:9;;:::i;:::-;;;3544:129;;;3807:10;3858:11;;-1:-1:-1;;3747:2:22;:8;;;3741:3;:15;3740:21;3854:22;;;3819:9;;3803:26;;;;3898:21;3885:35;;-1:-1:-1;3947:3:22;2745:1210;;;;;;:::o;2154:187:23:-;2250:63;2269:3;335:1;2299:5;:12;2250:18;:63::i;5148:639:22:-;-1:-1:-1;;;;;;;;;;;;;;;;;5283:3:22;:12;;;5276:3;:19;5272:69;;5305:29;5312:3;5317;:12;;;5332:1;5317:16;;;;:::i;5305:29::-;5427:3;5421:10;5498:6;5492:13;5610:2;5604:3;5596:6;5592:16;5588:25;5634:4;5628;5620:19;;5705:6;5700:3;5697:15;5694:67;;5750:1;5742:6;5738:14;5730:6;5723:30;5694:67;-1:-1:-1;5779:3:22;;5148:639;-1:-1:-1;;;;5148:639:22:o;8974:675::-;-1:-1:-1;;;;;;;;;;;;;;;;;9130:12:22;;;;9118:9;9124:3;9118;:9;:::i;:::-;:24;9114:73;;;9152:28;9159:3;9165:9;9171:3;9165;:9;:::i;9152:28::-;9193:12;9221:1;9209:8;9214:3;9209;:8;:::i;:::-;9208:14;;;;:::i;:::-;9193:29;;9308:3;9302:10;9423:3;9417;9409:6;9405:16;9401:26;9479:4;9471;9467:9;9460:4;9454:11;9450:27;9447:37;9441:4;9434:51;;9567:6;9561:13;9555:3;9550;9546:13;9543:32;9540:83;;;9610:3;9605;9601:13;9593:6;9586:29;9540:83;-1:-1:-1;9641:3:22;;8974:675;-1:-1:-1;;;;;8974:675:22:o;1961:124::-;2018:7;2041:1;2037;:5;2033:34;;;-1:-1:-1;2059:1:22;2052:8;;2033:34;-1:-1:-1;2079:1:22;1961:124;-1:-1:-1;1961:124:22:o;1801:156::-;1895:7;;1908:19;1895:3;1918:8;1908:4;:19::i;:::-;;1933;1940:3;1945:6;1933;:19::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:248:28:-;82:6;90;143:2;131:9;122:7;118:23;114:32;111:52;;;159:1;156;149:12;111:52;-1:-1:-1;;182:23:28;;;252:2;237:18;;;224:32;;-1:-1:-1;14:248:28:o;1063:127::-;1124:10;1119:3;1115:20;1112:1;1105:31;1155:4;1152:1;1145:15;1179:4;1176:1;1169:15;1195:125;1235:4;1263:1;1260;1257:8;1254:34;;;1268:18;;:::i;:::-;-1:-1:-1;1305:9:28;;1195:125::o;2029:128::-;2069:3;2100:1;2096:6;2093:1;2090:13;2087:39;;;2106:18;;:::i;:::-;-1:-1:-1;2142:9:28;;2029:128::o;2162:471::-;2203:3;2241:5;2235:12;2268:6;2263:3;2256:19;2293:1;2303:162;2317:6;2314:1;2311:13;2303:162;;;2379:4;2435:13;;;2431:22;;2425:29;2407:11;;;2403:20;;2396:59;2332:12;2303:162;;;2483:6;2480:1;2477:13;2474:87;;;2549:1;2542:4;2533:6;2528:3;2524:16;2520:27;2513:38;2474:87;-1:-1:-1;2615:2:28;2594:15;-1:-1:-1;;2590:29:28;2581:39;;;;2622:4;2577:50;;2162:471;-1:-1:-1;;2162:471:28:o;2638:821::-;-1:-1:-1;;;;;3039:15:28;;;3021:34;;3086:2;3071:18;;3064:34;;;3129:2;3114:18;;3107:34;;;3177:15;;3172:2;3157:18;;3150:43;-1:-1:-1;;;;;;3230:33:28;;3224:3;3209:19;;3202:62;3001:3;3280:19;;3273:35;;;3339:3;3324:19;;3317:35;;;2971:3;3246;3368:19;;3361:31;;;2942:4;;3409:44;3434:18;;;3426:6;3409:44;:::i;:::-;3401:52;2638:821;-1:-1:-1;;;;;;;;;;;2638:821:28:o;3464:267::-;3503:4;3532:9;;;3557:10;;-1:-1:-1;;;3576:19:28;;3569:27;;3553:44;3550:70;;;3600:18;;:::i;:::-;-1:-1:-1;;;;;3647:27:28;;3640:35;;3632:44;;3629:70;;;3679:18;;:::i;:::-;-1:-1:-1;;3716:9:28;;3464:267::o;4059:385::-;4291:1;4287;4282:3;4278:11;4274:19;4266:6;4262:32;4251:9;4244:51;4331:6;4326:2;4315:9;4311:18;4304:34;4374:2;4369;4358:9;4354:18;4347:30;4225:4;4394:44;4434:2;4423:9;4419:18;4411:6;4394:44;:::i;4449:277::-;4516:6;4569:2;4557:9;4548:7;4544:23;4540:32;4537:52;;;4585:1;4582;4575:12;4537:52;4617:9;4611:16;4670:5;4663:13;4656:21;4649:5;4646:32;4636:60;;4692:1;4689;4682:12;5135:209;5167:1;5193;5183:132;;5237:10;5232:3;5228:20;5225:1;5218:31;5272:4;5269:1;5262:15;5300:4;5297:1;5290:15;5183:132;-1:-1:-1;5329:9:28;;5135:209::o;5349:168::-;5389:7;5455:1;5451;5447:6;5443:14;5440:1;5437:21;5432:1;5425:9;5418:17;5414:45;5411:71;;;5462:18;;:::i;:::-;-1:-1:-1;5502:9:28;;5349:168::o;5522:422::-;5611:1;5654:5;5611:1;5668:270;5689:7;5679:8;5676:21;5668:270;;;5748:4;5744:1;5740:6;5736:17;5730:4;5727:27;5724:53;;;5757:18;;:::i;:::-;5807:7;5797:8;5793:22;5790:55;;;5827:16;;;;5790:55;5906:22;;;;5866:15;;;;5668:270;;;5672:3;5522:422;;;;;:::o;5949:806::-;5998:5;6028:8;6018:80;;-1:-1:-1;6069:1:28;6083:5;;6018:80;6117:4;6107:76;;-1:-1:-1;6154:1:28;6168:5;;6107:76;6199:4;6217:1;6212:59;;;;6285:1;6280:130;;;;6192:218;;6212:59;6242:1;6233:10;;6256:5;;;6280:130;6317:3;6307:8;6304:17;6301:43;;;6324:18;;:::i;:::-;-1:-1:-1;;6380:1:28;6366:16;;6395:5;;6192:218;;6494:2;6484:8;6481:16;6475:3;6469:4;6466:13;6462:36;6456:2;6446:8;6443:16;6438:2;6432:4;6429:12;6425:35;6422:77;6419:159;;;-1:-1:-1;6531:19:28;;;6563:5;;6419:159;6610:34;6635:8;6629:4;6610:34;:::i;:::-;6680:6;6676:1;6672:6;6668:19;6659:7;6656:32;6653:58;;;6691:18;;:::i;:::-;6729:20;;5949:806;-1:-1:-1;;;5949:806:28:o;6760:131::-;6820:5;6849:36;6876:8;6870:4;6849:36;:::i",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "notice": "This example uses the LINK token address on Moonbase Alpha. Make sure to update the oracle and jobId."
      },
      "fulfill(bytes32,uint256)": {
        "notice": "Receive the response in the form of uint256"
      },
      "request_sensor_data()": {
        "notice": "This functions sends requests on the end point and calls the fulfill function to update the volume",
        "returns": {
          "requestId": "requestId"
        }
      },
      "token_transfer()": {
        "notice": "This function makes intercontract calls and transfers the erc20 tokens to nft contract and updates the balance for each nft holder"
      }
    },
    "version": 1
  },
  "offset": [
    185,
    3030
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA14AA511 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xA14AA511 EQ PUSH2 0xBA JUMPI DUP1 PUSH4 0xC618A1E4 EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0xC8C92EA6 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0xFCDCDEEE EQ PUSH2 0xF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23A98BD7 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4357855E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x48356631 EQ PUSH2 0x9F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8A PUSH2 0x10A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x8A PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xBAB JUMP JUMPDEST PUSH2 0x229 JUMP JUMPDEST PUSH2 0xA7 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA7 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0xA7 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0xDF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB1 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH2 0xDF SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD PUSH1 0x9 SLOAD PUSH2 0x11C SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0xC SSTORE PUSH1 0xA SLOAD PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH4 0x5BF6FA89 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP4 SWAP5 POP SWAP2 AND SWAP1 DUP2 SWAP1 PUSH4 0x5BF6FA89 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x18D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x8A774091 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP PUSH4 0x8A774091 SWAP2 POP PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH32 0xD54FE17376FAEE64EECED9C450072891FBA80C4F6A94AE654F0634600F82F54E DUP4 PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536F75726365206D75737420626520746865206F7261636C65206F6620746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x81C995C5D595CDD PUSH1 0xC2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP3 SWAP2 PUSH32 0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A SWAP2 LOG2 POP PUSH1 0x9 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x308 PUSH1 0x7 SLOAD ADDRESS PUSH4 0x4357855E PUSH1 0xE0 SHL PUSH2 0x3F9 JUMP JUMPDEST SWAP1 POP PUSH2 0x34A PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x19D95D PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x58 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xE81 PUSH1 0x58 SWAP2 CODECOPY DUP4 SWAP2 SWAP1 PUSH2 0x41E JUMP JUMPDEST PUSH2 0x3A5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0xE0C2E8D PUSH1 0xE3 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH18 0x195B995C99DE4B5858D8DD5B5D5B185D1959 PUSH1 0x72 SHL DUP2 MSTORE POP DUP4 PUSH2 0x41E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP2 MSTORE PUSH5 0x74696D6573 PUSH1 0xD8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x3D7 SWAP1 DUP4 SWAP1 DUP4 PUSH2 0x441 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x8 SLOAD PUSH2 0x3F2 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP5 SWAP1 PUSH2 0x45F JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x401 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x409 PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x415 DUP2 DUP7 DUP7 DUP7 PUSH2 0x4F2 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x42D SWAP1 DUP4 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x43C SWAP1 DUP3 PUSH2 0x538 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x450 SWAP1 DUP4 PUSH2 0x538 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x43C SWAP1 DUP3 PUSH2 0x54F JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x470 DUP2 PUSH1 0x1 PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x4 SSTORE DUP4 MLOAD PUSH1 0x40 DUP1 DUP7 ADD MLOAD PUSH1 0x80 DUP8 ADD MLOAD MLOAD SWAP2 MLOAD PUSH1 0x0 SWAP4 PUSH4 0x20214CA3 PUSH1 0xE1 SHL SWAP4 PUSH2 0x4A8 SWAP4 DUP7 SWAP4 DUP5 SWAP4 SWAP3 ADDRESS SWAP3 SWAP2 DUP11 SWAP2 PUSH1 0x1 SWAP2 PUSH1 0x24 ADD PUSH2 0xC5F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 MSTORE SWAP1 POP PUSH2 0x4E8 DUP7 DUP4 DUP7 DUP5 PUSH2 0x5B3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4FA PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x50A DUP6 PUSH1 0x80 ADD MLOAD PUSH2 0x100 PUSH2 0x711 JUMP JUMPDEST POP POP DUP3 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH1 0x40 DUP6 ADD MSTORE DUP4 JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x545 DUP3 PUSH1 0x3 DUP4 MLOAD PUSH2 0x77C JUMP JUMPDEST PUSH2 0x43C DUP3 DUP3 PUSH2 0x891 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF NOT DUP2 SLT ISZERO PUSH2 0x56E JUMPI PUSH2 0x56A DUP3 DUP3 PUSH2 0x8BF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 SGT ISZERO PUSH2 0x588 JUMPI PUSH2 0x56A DUP3 DUP3 PUSH2 0x901 JUMP JUMPDEST PUSH1 0x0 DUP2 SLT PUSH2 0x59C JUMPI PUSH2 0x56A DUP3 PUSH1 0x0 DUP4 PUSH2 0x77C JUMP JUMPDEST PUSH2 0x56A DUP3 PUSH1 0x1 PUSH2 0x5AE DUP5 PUSH1 0x0 NOT PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT ADDRESS PUSH1 0x60 SHL AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x34 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x54 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB PUSH1 0x1F NOT ADD DUP2 MSTORE DUP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP3 MSTORE SWAP2 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND OR SWAP1 SSTORE SWAP1 SWAP3 POP DUP3 SWAP2 PUSH32 0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9 SWAP2 SWAP1 LOG2 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x2000575 PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x4000AEA0 SWAP1 PUSH2 0x676 SWAP1 DUP9 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0xD06 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x695 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B9 SWAP2 SWAP1 PUSH2 0xD2D JUMP JUMPDEST PUSH2 0x530 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x636C65 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x29E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x731 PUSH1 0x20 DUP4 PUSH2 0xD4F JUMP JUMPDEST ISZERO PUSH2 0x759 JUMPI PUSH2 0x741 PUSH1 0x20 DUP4 PUSH2 0xD4F JUMP JUMPDEST PUSH2 0x74C SWAP1 PUSH1 0x20 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x756 SWAP1 DUP4 PUSH2 0xBFA JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP6 MSTORE PUSH1 0x0 DUP2 MSTORE DUP4 ADD SWAP1 SWAP2 ADD SWAP1 MSTORE DUP2 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x17 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x7A7 JUMPI PUSH2 0x7A1 DUP4 PUSH1 0xE0 PUSH1 0x5 DUP6 SWAP1 SHL AND DUP4 OR PUSH2 0x924 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x7E5 JUMPI PUSH2 0x7CE DUP4 PUSH1 0x18 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x7A1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x1 PUSH2 0x949 JUMP JUMPDEST PUSH2 0xFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x824 JUMPI PUSH2 0x80D DUP4 PUSH1 0x19 PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x7A1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x2 PUSH2 0x949 JUMP JUMPDEST PUSH4 0xFFFFFFFF DUP2 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x865 JUMPI PUSH2 0x84E DUP4 PUSH1 0x1A PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x7A1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x4 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x87A DUP4 PUSH1 0x1B PUSH2 0x1FE0 PUSH1 0x5 DUP7 SWAP1 SHL AND OR PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x7A1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 AND PUSH1 0x8 PUSH2 0x949 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x8B8 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 DUP6 MLOAD PUSH2 0x96F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x8CA DUP3 PUSH1 0xC3 PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x56A DUP3 PUSH2 0x8DB DUP4 PUSH1 0x0 NOT PUSH2 0xCC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8ED SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH2 0xA59 JUMP JUMPDEST PUSH2 0x90C DUP3 PUSH1 0xC2 PUSH2 0x924 JUMP JUMPDEST POP PUSH2 0x56A DUP3 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8ED SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x8B8 DUP4 DUP5 PUSH1 0x0 ADD MLOAD MLOAD DUP5 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x530 DUP5 DUP6 PUSH1 0x0 ADD MLOAD MLOAD DUP6 DUP6 PUSH2 0xAC1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 MLOAD DUP3 GT ISZERO PUSH2 0x992 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0x9A1 DUP4 DUP7 PUSH2 0xBFA JUMP JUMPDEST GT ISZERO PUSH2 0x9D4 JUMPI PUSH2 0x9D4 DUP6 PUSH2 0x9C4 DUP8 PUSH1 0x20 ADD MLOAD DUP8 DUP7 PUSH2 0x9BF SWAP2 SWAP1 PUSH2 0xBFA JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x9CF SWAP1 PUSH1 0x2 PUSH2 0xD71 JUMP JUMPDEST PUSH2 0xB59 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 MLOAD DUP1 MLOAD DUP8 PUSH1 0x20 DUP4 ADD ADD SWAP4 POP DUP1 DUP9 DUP8 ADD GT ISZERO PUSH2 0x9F3 JUMPI DUP8 DUP7 ADD DUP3 MSTORE JUMPDEST POP POP POP PUSH1 0x20 DUP5 ADD JUMPDEST PUSH1 0x20 DUP5 LT PUSH2 0xA33 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH2 0xA12 PUSH1 0x20 DUP4 PUSH2 0xBFA JUMP JUMPDEST SWAP2 POP PUSH2 0xA1F PUSH1 0x20 DUP3 PUSH2 0xBFA JUMP JUMPDEST SWAP1 POP PUSH2 0xA2C PUSH1 0x20 DUP6 PUSH2 0xBE3 JUMP JUMPDEST SWAP4 POP PUSH2 0x9FB JUMP JUMPDEST MLOAD DUP2 MLOAD PUSH1 0x0 NOT PUSH1 0x20 DUP7 SWAP1 SUB PUSH2 0x100 EXP ADD SWAP1 DUP2 AND SWAP1 NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 MSTORE POP DUP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x545 DUP3 PUSH1 0x2 DUP4 MLOAD PUSH2 0x77C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP4 PUSH1 0x20 ADD MLOAD DUP4 LT PUSH2 0xA9B JUMPI PUSH2 0xA9B DUP5 DUP6 PUSH1 0x20 ADD MLOAD PUSH1 0x2 PUSH2 0x9CF SWAP2 SWAP1 PUSH2 0xD71 JUMP JUMPDEST DUP4 MLOAD DUP1 MLOAD PUSH1 0x20 DUP6 DUP4 ADD ADD DUP5 DUP2 MSTORE8 POP DUP1 DUP6 SUB PUSH2 0xAB7 JUMPI PUSH1 0x1 DUP2 ADD DUP3 MSTORE JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP6 ADD MLOAD PUSH2 0xAE5 DUP6 DUP5 PUSH2 0xBFA JUMP JUMPDEST GT ISZERO PUSH2 0xAF9 JUMPI PUSH2 0xAF9 DUP6 PUSH2 0x9C4 DUP7 DUP6 PUSH2 0xBFA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xB09 DUP5 PUSH2 0x100 PUSH2 0xE74 JUMP JUMPDEST PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST SWAP1 POP DUP6 MLOAD DUP4 DUP7 DUP3 ADD ADD DUP6 DUP4 NOT DUP3 MLOAD AND OR DUP2 MSTORE POP DUP1 MLOAD DUP5 DUP8 ADD GT ISZERO PUSH2 0xB37 JUMPI DUP4 DUP7 ADD DUP2 MSTORE JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT ISZERO PUSH2 0xB53 JUMPI POP DUP2 PUSH2 0x776 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 MLOAD PUSH2 0xB65 DUP4 DUP4 PUSH2 0x711 JUMP JUMPDEST POP PUSH2 0x7A1 DUP4 DUP3 PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP1 DUP5 ADD DUP4 SWAP1 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE DUP5 MSTORE DUP4 ADD MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBBE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBF5 JUMPI PUSH2 0xBF5 PUSH2 0xBCD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC0D JUMPI PUSH2 0xC0D PUSH2 0xBCD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC38 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xC1C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP10 SWAP1 MSTORE PUSH1 0x40 DUP3 ADD DUP9 SWAP1 MSTORE DUP7 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP6 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE PUSH2 0x100 PUSH1 0xE0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCB8 DUP4 DUP3 ADD DUP6 PUSH2 0xC12 JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0xCE5 JUMPI PUSH2 0xCE5 PUSH2 0xBCD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0xD00 JUMPI PUSH2 0xD00 PUSH2 0xBCD JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x415 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x8B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xD6C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xD8B JUMPI PUSH2 0xD8B PUSH2 0xBCD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0xDCB JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH2 0xDB1 PUSH2 0xBCD JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0xDBE JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0xD95 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xDE2 JUMPI POP PUSH1 0x1 PUSH2 0x776 JUMP JUMPDEST DUP2 PUSH2 0xDEF JUMPI POP PUSH1 0x0 PUSH2 0x776 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xE05 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xE0F JUMPI PUSH2 0xE2B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x776 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xE20 JUMPI PUSH2 0xE20 PUSH2 0xBCD JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x776 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xE4E JUMPI POP DUP2 DUP2 EXP PUSH2 0x776 JUMP JUMPDEST PUSH2 0xE58 DUP4 DUP4 PUSH2 0xD90 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0xE6C JUMPI PUSH2 0xE6C PUSH2 0xBCD JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8B8 DUP4 DUP4 PUSH2 0xDD3 JUMP INVALID PUSH9 0x7474703A2F2F647265 PUSH25 0x616C6C2D656E762E6562612D65336D6E6E6D36392E75732D65 PUSH2 0x7374 0x2D BALANCE 0x2E PUSH6 0x6C6173746963 PUSH3 0x65616E PUSH20 0x74616C6B2E636F6D2F677269642F6C6173743F63 PUSH16 0x64653D647265785F70696C6F74A26469 PUSH17 0x667358221220FBE5B0C32249F744BBF7CA INVALID PUSH29 0x344FFCF4174F38C64AA73BA041E9260265812B64736F6C634300080E00 CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "5": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "CALLVALUE",
      "path": "26"
    },
    "6": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "7": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "8": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "12": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "REVERT",
      "path": "26"
    },
    "16": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "17": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "POP",
      "path": "26"
    },
    "18": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "21": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "LT",
      "path": "26"
    },
    "22": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x7D"
    },
    "25": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "26": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "CALLDATALOAD",
      "path": "26"
    },
    "29": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "SHR",
      "path": "26"
    },
    "32": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "33": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA14AA511"
    },
    "38": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "GT",
      "path": "26"
    },
    "39": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x5B"
    },
    "42": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "43": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "44": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xA14AA511"
    },
    "49": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "50": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBA"
    },
    "53": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "54": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "55": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC618A1E4"
    },
    "60": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "61": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xC3"
    },
    "64": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "65": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "66": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xC8C92EA6"
    },
    "71": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "72": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xCC"
    },
    "75": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "76": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "77": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFCDCDEEE"
    },
    "82": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "83": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xF7"
    },
    "86": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "87": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "89": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "90": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "REVERT",
      "path": "26"
    },
    "91": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "92": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "93": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x23A98BD7"
    },
    "98": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "99": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x82"
    },
    "102": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "103": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "104": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4357855E"
    },
    "109": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "110": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8C"
    },
    "113": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "114": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "115": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x48356631"
    },
    "120": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "EQ",
      "path": "26"
    },
    "121": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9F"
    },
    "124": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "125": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "126": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "128": {
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "DUP1",
      "path": "26"
    },
    "129": {
      "first_revert": true,
      "fn": null,
      "offset": [
        185,
        3030
      ],
      "op": "REVERT",
      "path": "26"
    },
    "130": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "131": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8A"
    },
    "134": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x10A"
    },
    "137": {
      "fn": "Client.token_transfer",
      "jump": "i",
      "offset": [
        2614,
        3028
      ],
      "op": "JUMP",
      "path": "26"
    },
    "138": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "139": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "STOP",
      "path": "26"
    },
    "140": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "141": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x8A"
    },
    "144": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x9A"
    },
    "147": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "CALLDATASIZE",
      "path": "26"
    },
    "148": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "150": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBAB"
    },
    "153": {
      "fn": "Client.fulfill",
      "jump": "i",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMP",
      "path": "26"
    },
    "154": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "155": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x229"
    },
    "158": {
      "fn": "Client.fulfill",
      "jump": "i",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMP",
      "path": "26"
    },
    "159": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "160": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA7"
    },
    "163": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x2F1"
    },
    "166": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMP",
      "path": "26"
    },
    "167": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "168": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "170": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "171": {
      "op": "SWAP1"
    },
    "172": {
      "op": "DUP2"
    },
    "173": {
      "op": "MSTORE"
    },
    "174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "176": {
      "op": "ADD"
    },
    "177": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "178": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "180": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "181": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "DUP1",
      "path": "26"
    },
    "182": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "183": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "SUB",
      "path": "26"
    },
    "184": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "185": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "RETURN",
      "path": "26"
    },
    "186": {
      "offset": [
        458,
        484
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "187": {
      "fn": "Client.request_sensor_data",
      "offset": [
        458,
        484
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA7"
    },
    "190": {
      "fn": "Client.request_sensor_data",
      "offset": [
        458,
        484
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "192": {
      "fn": "Client.request_sensor_data",
      "offset": [
        458,
        484
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "193": {
      "fn": "Client.request_sensor_data",
      "offset": [
        458,
        484
      ],
      "op": "DUP2",
      "path": "26"
    },
    "194": {
      "fn": "Client.request_sensor_data",
      "offset": [
        458,
        484
      ],
      "op": "JUMP",
      "path": "26"
    },
    "195": {
      "offset": [
        350,
        371
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "196": {
      "fn": "Client.request_sensor_data",
      "offset": [
        350,
        371
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xA7"
    },
    "199": {
      "fn": "Client.request_sensor_data",
      "offset": [
        350,
        371
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "201": {
      "fn": "Client.request_sensor_data",
      "offset": [
        350,
        371
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "202": {
      "fn": "Client.request_sensor_data",
      "offset": [
        350,
        371
      ],
      "op": "DUP2",
      "path": "26"
    },
    "203": {
      "fn": "Client.request_sensor_data",
      "offset": [
        350,
        371
      ],
      "op": "JUMP",
      "path": "26"
    },
    "204": {
      "offset": [
        418,
        452
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "205": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "207": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "208": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF"
    },
    "211": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "212": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "216": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "218": {
      "op": "SHL"
    },
    "219": {
      "op": "SUB"
    },
    "220": {
      "offset": [
        418,
        452
      ],
      "op": "AND",
      "path": "26"
    },
    "221": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "DUP2",
      "path": "26"
    },
    "222": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "JUMP",
      "path": "26"
    },
    "223": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "224": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "226": {
      "fn": "Client.request_sensor_data",
      "offset": [
        418,
        452
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "227": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "229": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "231": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "233": {
      "op": "SHL"
    },
    "234": {
      "op": "SUB"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "SWAP2"
    },
    "237": {
      "op": "AND"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "offset": [
        418,
        452
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xB1"
    },
    "246": {
      "op": "JUMP"
    },
    "247": {
      "offset": [
        377,
        412
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "248": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "250": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "251": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xDF"
    },
    "254": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "255": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "259": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "261": {
      "op": "SHL"
    },
    "262": {
      "op": "SUB"
    },
    "263": {
      "offset": [
        377,
        412
      ],
      "op": "AND",
      "path": "26"
    },
    "264": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "DUP2",
      "path": "26"
    },
    "265": {
      "fn": "Client.request_sensor_data",
      "offset": [
        377,
        412
      ],
      "op": "JUMP",
      "path": "26"
    },
    "266": {
      "fn": "Client.token_transfer",
      "offset": [
        2614,
        3028
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "267": {
      "fn": "Client.token_transfer",
      "offset": [
        2657,
        2678
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "269": {
      "fn": "Client.token_transfer",
      "offset": [
        2690,
        2701
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "271": {
      "fn": "Client.token_transfer",
      "offset": [
        2690,
        2701
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "272": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2687
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x9"
    },
    "274": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2687
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "275": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2701
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x11C"
    },
    "278": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2701
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "279": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2701
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "280": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2701
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xBE3"
    },
    "283": {
      "fn": "Client.token_transfer",
      "jump": "i",
      "offset": [
        2681,
        2701
      ],
      "op": "JUMP",
      "path": "26"
    },
    "284": {
      "fn": "Client.token_transfer",
      "offset": [
        2681,
        2701
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "285": {
      "fn": "Client.token_transfer",
      "offset": [
        2725,
        2731
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 0,
      "value": "0x9"
    },
    "287": {
      "fn": "Client.token_transfer",
      "offset": [
        2725,
        2731
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "288": {
      "fn": "Client.token_transfer",
      "offset": [
        2711,
        2722
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xC"
    },
    "290": {
      "fn": "Client.token_transfer",
      "offset": [
        2711,
        2731
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "291": {
      "fn": "Client.token_transfer",
      "offset": [
        2776,
        2788
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xA"
    },
    "293": {
      "fn": "Client.token_transfer",
      "offset": [
        2776,
        2788
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "294": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xB"
    },
    "296": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "297": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 1,
      "value": "0x40"
    },
    "299": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "300": {
      "op": "PUSH4",
      "value": "0x5BF6FA89"
    },
    "305": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "307": {
      "op": "SHL"
    },
    "308": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP2",
      "path": "26"
    },
    "309": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "312": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "314": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "316": {
      "op": "SHL"
    },
    "317": {
      "op": "SUB"
    },
    "318": {
      "fn": "Client.token_transfer",
      "offset": [
        2776,
        2788
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "319": {
      "fn": "Client.token_transfer",
      "offset": [
        2776,
        2788
      ],
      "op": "DUP4",
      "path": "26"
    },
    "320": {
      "fn": "Client.token_transfer",
      "offset": [
        2776,
        2788
      ],
      "op": "AND",
      "path": "26"
    },
    "321": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "323": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP3",
      "path": "26"
    },
    "324": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "ADD",
      "path": "26"
    },
    "325": {
      "op": "DUP2"
    },
    "326": {
      "op": "SWAP1"
    },
    "327": {
      "op": "MSTORE"
    },
    "328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "330": {
      "op": "DUP3"
    },
    "331": {
      "op": "ADD"
    },
    "332": {
      "op": "DUP6"
    },
    "333": {
      "op": "SWAP1"
    },
    "334": {
      "op": "MSTORE"
    },
    "335": {
      "fn": "Client.token_transfer",
      "offset": [
        2657,
        2701
      ],
      "op": "SWAP4",
      "path": "26"
    },
    "336": {
      "fn": "Client.token_transfer",
      "offset": [
        2657,
        2701
      ],
      "op": "SWAP5",
      "path": "26"
    },
    "337": {
      "op": "POP"
    },
    "338": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "339": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "AND",
      "path": "26"
    },
    "340": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "341": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "DUP2",
      "path": "26"
    },
    "342": {
      "fn": "Client.token_transfer",
      "offset": [
        2849,
        2868
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "343": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2900
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x5BF6FA89"
    },
    "348": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2900
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "351": {
      "op": "ADD"
    },
    "352": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "354": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "356": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "357": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "358": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP4",
      "path": "26"
    },
    "359": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "SUB",
      "path": "26"
    },
    "360": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP2",
      "path": "26"
    },
    "361": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "363": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP8",
      "path": "26"
    },
    "364": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "365": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "EXTCODESIZE",
      "path": "26"
    },
    "366": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "367": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "368": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "369": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x179"
    },
    "372": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "373": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "375": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "376": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "REVERT",
      "path": "26"
    },
    "377": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "378": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "POP",
      "path": "26"
    },
    "379": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "GAS",
      "path": "26"
    },
    "380": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "CALL",
      "path": "26"
    },
    "381": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "382": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "383": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "384": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x18D"
    },
    "387": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "388": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "389": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "391": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "DUP1",
      "path": "26"
    },
    "392": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "393": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "394": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "396": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "REVERT",
      "path": "26"
    },
    "397": {
      "fn": "Client.token_transfer",
      "offset": [
        2879,
        2929
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "398": {
      "op": "POP"
    },
    "399": {
      "op": "POP"
    },
    "400": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 2,
      "value": "0x40"
    },
    "402": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "403": {
      "op": "PUSH4",
      "value": "0x8A774091"
    },
    "408": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "410": {
      "op": "SHL"
    },
    "411": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP2",
      "path": "26"
    },
    "412": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "413": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "415": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP2",
      "path": "26"
    },
    "416": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "ADD",
      "path": "26"
    },
    "417": {
      "op": "DUP7"
    },
    "418": {
      "op": "SWAP1"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "426": {
      "op": "SHL"
    },
    "427": {
      "op": "SUB"
    },
    "428": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2962
      ],
      "op": "DUP6",
      "path": "26"
    },
    "429": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2962
      ],
      "op": "AND",
      "path": "26"
    },
    "430": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2962
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2962
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x8A774091"
    },
    "437": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2962
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "441": {
      "op": "ADD"
    },
    "442": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "444": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "446": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "447": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "448": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP4",
      "path": "26"
    },
    "449": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "SUB",
      "path": "26"
    },
    "450": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP2",
      "path": "26"
    },
    "451": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "453": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP8",
      "path": "26"
    },
    "454": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "455": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "EXTCODESIZE",
      "path": "26"
    },
    "456": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "457": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "458": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "459": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1D3"
    },
    "462": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "463": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "465": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "466": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "REVERT",
      "path": "26"
    },
    "467": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "468": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "POP",
      "path": "26"
    },
    "469": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "GAS",
      "path": "26"
    },
    "470": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "CALL",
      "path": "26"
    },
    "471": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "472": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "473": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "ISZERO",
      "path": "26"
    },
    "474": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x1E7"
    },
    "477": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "JUMPI",
      "path": "26"
    },
    "478": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "479": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "481": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "DUP1",
      "path": "26"
    },
    "482": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "RETURNDATACOPY",
      "path": "26"
    },
    "483": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "RETURNDATASIZE",
      "path": "26"
    },
    "484": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "486": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "REVERT",
      "path": "26"
    },
    "487": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "488": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "POP",
      "path": "26"
    },
    "489": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "POP",
      "path": "26"
    },
    "490": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "POP",
      "path": "26"
    },
    "491": {
      "fn": "Client.token_transfer",
      "offset": [
        2939,
        2977
      ],
      "op": "POP",
      "path": "26"
    },
    "492": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "PUSH32",
      "path": "26",
      "statement": 3,
      "value": "0xD54FE17376FAEE64EECED9C450072891FBA80C4F6A94AE654F0634600F82F54E"
    },
    "525": {
      "fn": "Client.token_transfer",
      "offset": [
        3007,
        3020
      ],
      "op": "DUP4",
      "path": "26"
    },
    "526": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "528": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "529": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x21C"
    },
    "532": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "533": {
      "op": "DUP2"
    },
    "534": {
      "op": "MSTORE"
    },
    "535": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "537": {
      "op": "ADD"
    },
    "538": {
      "op": "SWAP1"
    },
    "539": {
      "op": "JUMP"
    },
    "540": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "541": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "543": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "544": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "DUP1",
      "path": "26"
    },
    "545": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "546": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "SUB",
      "path": "26"
    },
    "547": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "548": {
      "fn": "Client.token_transfer",
      "offset": [
        2992,
        3021
      ],
      "op": "LOG1",
      "path": "26"
    },
    "549": {
      "fn": "Client.token_transfer",
      "offset": [
        2647,
        3028
      ],
      "op": "POP",
      "path": "26"
    },
    "550": {
      "fn": "Client.token_transfer",
      "offset": [
        2647,
        3028
      ],
      "op": "POP",
      "path": "26"
    },
    "551": {
      "fn": "Client.token_transfer",
      "offset": [
        2647,
        3028
      ],
      "op": "POP",
      "path": "26"
    },
    "552": {
      "fn": "Client.token_transfer",
      "jump": "o",
      "offset": [
        2614,
        3028
      ],
      "op": "JUMP",
      "path": "26"
    },
    "553": {
      "fn": "Client.fulfill",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "554": {
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "556": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "557": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP2",
      "path": "15"
    },
    "558": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "559": {
      "offset": [
        11663,
        11680
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "561": {
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "563": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "564": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "566": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "567": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "568": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "569": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "DUP3",
      "path": "15"
    },
    "570": {
      "fn": "Client.fulfill",
      "offset": [
        11663,
        11691
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "offset": [
        11663,
        11691
      ],
      "op": "AND",
      "path": "15"
    },
    "580": {
      "offset": [
        11649,
        11659
      ],
      "op": "CALLER",
      "path": "15"
    },
    "581": {
      "offset": [
        11649,
        11691
      ],
      "op": "EQ",
      "path": "15"
    },
    "582": {
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x2A7"
    },
    "585": {
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "586": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "588": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "offset": [
        11641,
        11736
      ],
      "op": "DUP2",
      "path": "15"
    },
    "597": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "598": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "600": {
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "602": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "DUP3",
      "path": "15"
    },
    "603": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "ADD",
      "path": "15"
    },
    "604": {
      "op": "MSTORE"
    },
    "605": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "607": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "609": {
      "op": "DUP3"
    },
    "610": {
      "op": "ADD"
    },
    "611": {
      "op": "MSTORE"
    },
    "612": {
      "op": "PUSH32",
      "value": "0x536F75726365206D75737420626520746865206F7261636C65206F6620746865"
    },
    "645": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "647": {
      "op": "DUP3"
    },
    "648": {
      "op": "ADD"
    },
    "649": {
      "op": "MSTORE"
    },
    "650": {
      "op": "PUSH8",
      "value": "0x81C995C5D595CDD"
    },
    "659": {
      "op": "PUSH1",
      "value": "0xC2"
    },
    "661": {
      "op": "SHL"
    },
    "662": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "664": {
      "op": "DUP3"
    },
    "665": {
      "op": "ADD"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "669": {
      "op": "ADD"
    },
    "670": {
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "671": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "673": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "674": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "DUP1",
      "path": "15"
    },
    "675": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "676": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SUB",
      "path": "15"
    },
    "677": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "678": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "15"
    },
    "679": {
      "fn": "Client.fulfill",
      "offset": [
        11641,
        11736
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "680": {
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "682": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP2",
      "path": "15"
    },
    "683": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP2",
      "path": "15"
    },
    "684": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "685": {
      "offset": [
        11749,
        11766
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "687": {
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "689": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "690": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "692": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP1",
      "path": "15"
    },
    "693": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "DUP3",
      "path": "15"
    },
    "694": {
      "fn": "Client.fulfill",
      "offset": [
        11749,
        11777
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "695": {
      "offset": [
        11742,
        11777
      ],
      "op": "DUP1",
      "path": "15"
    },
    "696": {
      "fn": "Client.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "703": {
      "op": "SHL"
    },
    "704": {
      "op": "SUB"
    },
    "705": {
      "op": "NOT"
    },
    "706": {
      "offset": [
        11742,
        11777
      ],
      "op": "AND",
      "path": "15"
    },
    "707": {
      "fn": "Client.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "708": {
      "fn": "Client.fulfill",
      "offset": [
        11742,
        11777
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "709": {
      "offset": [
        11788,
        11817
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "710": {
      "offset": [
        11767,
        11776
      ],
      "op": "DUP3",
      "path": "15"
    },
    "711": {
      "fn": "Client.fulfill",
      "offset": [
        11767,
        11776
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "712": {
      "offset": [
        11788,
        11817
      ],
      "op": "PUSH32",
      "path": "15",
      "value": "0x7CC135E0CEBB02C3480AE5D74D377283180A2601F8F644EDF7987B009316C63A"
    },
    "745": {
      "fn": "Client.fulfill",
      "offset": [
        11788,
        11817
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "746": {
      "fn": "Client.fulfill",
      "offset": [
        11788,
        11817
      ],
      "op": "LOG2",
      "path": "15"
    },
    "747": {
      "op": "POP"
    },
    "748": {
      "fn": "Client.fulfill",
      "offset": [
        2438,
        2444
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 4,
      "value": "0x9"
    },
    "750": {
      "fn": "Client.fulfill",
      "offset": [
        2438,
        2454
      ],
      "op": "SSTORE",
      "path": "26"
    },
    "751": {
      "op": "POP"
    },
    "752": {
      "fn": "Client.fulfill",
      "jump": "o",
      "offset": [
        2308,
        2461
      ],
      "op": "JUMP",
      "path": "26"
    },
    "753": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "754": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1443,
        1460
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x0"
    },
    "756": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1472,
        1504
      ],
      "op": "DUP1",
      "path": "26"
    },
    "757": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1507,
        1619
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x308"
    },
    "760": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1542,
        1547
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x7"
    },
    "762": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1542,
        1547
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "763": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1569,
        1573
      ],
      "op": "ADDRESS",
      "path": "26"
    },
    "764": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1588,
        1609
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0x4357855E"
    },
    "769": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1588,
        1609
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0xE0"
    },
    "771": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1588,
        1609
      ],
      "op": "SHL",
      "path": "26"
    },
    "772": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1507,
        1528
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3F9"
    },
    "775": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        1507,
        1619
      ],
      "op": "JUMP",
      "path": "26"
    },
    "776": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1507,
        1619
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "777": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1472,
        1619
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "778": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1472,
        1619
      ],
      "op": "POP",
      "path": "26"
    },
    "779": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 5,
      "value": "0x34A"
    },
    "782": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "784": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "785": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP1",
      "path": "26"
    },
    "786": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "788": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "ADD",
      "path": "26"
    },
    "789": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "791": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "792": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP1",
      "path": "26"
    },
    "793": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x3"
    },
    "795": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP2",
      "path": "26"
    },
    "796": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "797": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "799": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "ADD",
      "path": "26"
    },
    "800": {
      "op": "PUSH3",
      "value": "0x19D95D"
    },
    "804": {
      "op": "PUSH1",
      "value": "0xEA"
    },
    "806": {
      "op": "SHL"
    },
    "807": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP2",
      "path": "26"
    },
    "808": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "809": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "POP",
      "path": "26"
    },
    "810": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "812": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "813": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP1",
      "path": "26"
    },
    "814": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x80"
    },
    "816": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "ADD",
      "path": "26"
    },
    "817": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "819": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "820": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP1",
      "path": "26"
    },
    "821": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x58"
    },
    "823": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "DUP2",
      "path": "26"
    },
    "824": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "825": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "827": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "ADD",
      "path": "26"
    },
    "828": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0xE81"
    },
    "831": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x58"
    },
    "833": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "834": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "CODECOPY",
      "path": "26"
    },
    "835": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1690
      ],
      "op": "DUP4",
      "path": "26"
    },
    "836": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1690
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "837": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "838": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1694
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x41E"
    },
    "841": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        1683,
        1827
      ],
      "op": "JUMP",
      "path": "26"
    },
    "842": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1683,
        1827
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "843": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH2",
      "path": "26",
      "statement": 6,
      "value": "0x3A5"
    },
    "846": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "848": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "849": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP1",
      "path": "26"
    },
    "850": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "852": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "ADD",
      "path": "26"
    },
    "853": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "855": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "856": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP1",
      "path": "26"
    },
    "857": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x4"
    },
    "859": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "860": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "861": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "863": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "ADD",
      "path": "26"
    },
    "864": {
      "op": "PUSH4",
      "value": "0xE0C2E8D"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xE3"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "873": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "874": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "POP",
      "path": "26"
    },
    "875": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "877": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "878": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP1",
      "path": "26"
    },
    "879": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "881": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "ADD",
      "path": "26"
    },
    "882": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x40"
    },
    "884": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "885": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP1",
      "path": "26"
    },
    "886": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x12"
    },
    "888": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "889": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "890": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "892": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "ADD",
      "path": "26"
    },
    "893": {
      "op": "PUSH18",
      "value": "0x195B995C99DE4B5858D8DD5B5D5B185D1959"
    },
    "912": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "914": {
      "op": "SHL"
    },
    "915": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "DUP2",
      "path": "26"
    },
    "916": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "917": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "POP",
      "path": "26"
    },
    "918": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1946
      ],
      "op": "DUP4",
      "path": "26"
    },
    "919": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1950
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x41E"
    },
    "922": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1950
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "923": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "924": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "925": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "926": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "PUSH4",
      "path": "26",
      "value": "0xFFFFFFFF"
    },
    "931": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "AND",
      "path": "26"
    },
    "932": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        1939,
        1980
      ],
      "op": "JUMP",
      "path": "26"
    },
    "933": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1939,
        1980
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "934": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 7,
      "value": "0x40"
    },
    "936": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "DUP1",
      "path": "26"
    },
    "937": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "MLOAD",
      "path": "26"
    },
    "938": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "DUP1",
      "path": "26"
    },
    "939": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "DUP3",
      "path": "26"
    },
    "940": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "ADD",
      "path": "26"
    },
    "941": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "942": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "943": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "944": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x5"
    },
    "946": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "DUP2",
      "path": "26"
    },
    "947": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "948": {
      "op": "PUSH5",
      "value": "0x74696D6573"
    },
    "954": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "956": {
      "op": "SHL"
    },
    "957": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x20"
    },
    "959": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "DUP3",
      "path": "26"
    },
    "960": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "ADD",
      "path": "26"
    },
    "961": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "MSTORE",
      "path": "26"
    },
    "962": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2085,
        2091
      ],
      "op": "PUSH8",
      "path": "26",
      "value": "0xDE0B6B3A7640000"
    },
    "971": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2085,
        2091
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "972": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3D7"
    },
    "975": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "976": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2108
      ],
      "op": "DUP4",
      "path": "26"
    },
    "977": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2108
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "978": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2085,
        2091
      ],
      "op": "DUP4",
      "path": "26"
    },
    "979": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2115
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x441"
    },
    "982": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        2101,
        2137
      ],
      "op": "JUMP",
      "path": "26"
    },
    "983": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2101,
        2137
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "984": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2207,
        2213
      ],
      "op": "PUSH1",
      "path": "26",
      "statement": 8,
      "value": "0x6"
    },
    "986": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2207,
        2213
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "987": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2224,
        2227
      ],
      "op": "PUSH1",
      "path": "26",
      "value": "0x8"
    },
    "989": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2224,
        2227
      ],
      "op": "SLOAD",
      "path": "26"
    },
    "990": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2184,
        2228
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x3F2"
    },
    "993": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2184,
        2228
      ],
      "op": "SWAP2",
      "path": "26"
    },
    "994": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "op": "SUB"
    },
    "1002": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2207,
        2213
      ],
      "op": "AND",
      "path": "26"
    },
    "1003": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2207,
        2213
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1004": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2215,
        2222
      ],
      "op": "DUP5",
      "path": "26"
    },
    "1005": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2215,
        2222
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1006": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2184,
        2206
      ],
      "op": "PUSH2",
      "path": "26",
      "value": "0x45F"
    },
    "1009": {
      "fn": "Client.request_sensor_data",
      "jump": "i",
      "offset": [
        2184,
        2228
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1010": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2184,
        2228
      ],
      "op": "JUMPDEST",
      "path": "26"
    },
    "1011": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2177,
        2228
      ],
      "op": "SWAP3",
      "path": "26"
    },
    "1012": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2177,
        2228
      ],
      "op": "POP",
      "path": "26"
    },
    "1013": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2177,
        2228
      ],
      "op": "POP",
      "path": "26"
    },
    "1014": {
      "fn": "Client.request_sensor_data",
      "offset": [
        2177,
        2228
      ],
      "op": "POP",
      "path": "26"
    },
    "1015": {
      "fn": "Client.request_sensor_data",
      "offset": [
        1396,
        2235
      ],
      "op": "SWAP1",
      "path": "26"
    },
    "1016": {
      "fn": "Client.request_sensor_data",
      "jump": "o",
      "offset": [
        1396,
        2235
      ],
      "op": "JUMP",
      "path": "26"
    },
    "1017": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1850,
        2133
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1018": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x401"
    },
    "1021": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB70"
    },
    "1024": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        1992,
        2016
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1025": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1992,
        2016
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1026": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x409"
    },
    "1029": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xB70"
    },
    "1032": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        2024,
        2052
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1033": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2024,
        2052
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1034": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2128
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 9,
      "value": "0x415"
    },
    "1037": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2068
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1038": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2080,
        2086
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1039": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2088,
        2100
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1040": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2102,
        2127
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1041": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2079
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4F2"
    },
    "1044": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "i",
      "offset": [
        2065,
        2128
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1045": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2065,
        2128
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1046": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        2058,
        2128
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1047": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "offset": [
        1850,
        2133
      ],
      "op": "SWAP5",
      "path": "15"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "op": "POP"
    },
    "1050": {
      "op": "POP"
    },
    "1051": {
      "op": "POP"
    },
    "1052": {
      "op": "POP"
    },
    "1053": {
      "fn": "ChainlinkClient.buildChainlinkRequest",
      "jump": "o",
      "offset": [
        1850,
        2133
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1054": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1055": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 10,
      "value": "0x80"
    },
    "1057": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1058": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "ADD",
      "path": "14"
    },
    "1059": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2069
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1060": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x42D"
    },
    "1063": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1064": {
      "fn": "Chainlink.add",
      "offset": [
        2083,
        2086
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1065": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2082
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x538"
    },
    "1068": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2061,
        2087
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1069": {
      "fn": "Chainlink.add",
      "offset": [
        2061,
        2087
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1070": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 11,
      "value": "0x80"
    },
    "1072": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1073": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "ADD",
      "path": "14"
    },
    "1074": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2101
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1075": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43C"
    },
    "1078": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1079": {
      "fn": "Chainlink.add",
      "offset": [
        2115,
        2120
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1080": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2114
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x538"
    },
    "1083": {
      "fn": "Chainlink.add",
      "jump": "i",
      "offset": [
        2093,
        2121
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1084": {
      "fn": "Chainlink.add",
      "offset": [
        2093,
        2121
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1085": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1086": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1087": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1088": {
      "fn": "Chainlink.add",
      "jump": "o",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1089": {
      "fn": "Chainlink.addInt",
      "offset": [
        2712,
        2880
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1090": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2826
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 12,
      "value": "0x80"
    },
    "1092": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1093": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2826
      ],
      "op": "ADD",
      "path": "14"
    },
    "1094": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2826
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1095": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2844
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x450"
    },
    "1098": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2844
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1099": {
      "fn": "Chainlink.addInt",
      "offset": [
        2840,
        2843
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1100": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2839
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x538"
    },
    "1103": {
      "fn": "Chainlink.addInt",
      "jump": "i",
      "offset": [
        2818,
        2844
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1104": {
      "fn": "Chainlink.addInt",
      "offset": [
        2818,
        2844
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1105": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2858
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 13,
      "value": "0x80"
    },
    "1107": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2858
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1108": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2858
      ],
      "op": "ADD",
      "path": "14"
    },
    "1109": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2858
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1110": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2875
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x43C"
    },
    "1113": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2875
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1114": {
      "fn": "Chainlink.addInt",
      "offset": [
        2869,
        2874
      ],
      "op": "DUP3",
      "path": "14"
    },
    "1115": {
      "fn": "Chainlink.addInt",
      "offset": [
        2850,
        2868
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x54F"
    },
    "1118": {
      "fn": "Chainlink.addInt",
      "jump": "i",
      "offset": [
        2850,
        2875
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1119": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3687,
        4443
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1120": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1122": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1123": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3823,
        3840
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1125": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3823,
        3840
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1126": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 14,
      "value": "0x470"
    },
    "1129": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3864,
        3878
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1130": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3909,
        3910
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1132": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xBFA"
    },
    "1135": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        3901,
        3910
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1136": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3901,
        3910
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1137": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3884,
        3898
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1139": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3884,
        3910
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1140": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1141": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1142": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1144": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1145": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1146": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "ADD",
      "path": "15"
    },
    "1147": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1148": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x80"
    },
    "1150": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1151": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "ADD",
      "path": "15"
    },
    "1152": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4357
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1153": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4350,
        4361
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1154": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1155": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1156": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1158": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1159": {
      "op": "PUSH4",
      "value": "0x20214CA3"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1166": {
      "op": "SHL"
    },
    "1167": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3976,
        4024
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1168": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x4A8"
    },
    "1171": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1172": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1173": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1174": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1175": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3916,
        3943
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1176": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4245,
        4251
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1177": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4267,
        4271
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "1178": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4267,
        4271
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1179": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4280,
        4302
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1180": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4310,
        4315
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1181": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4310,
        4315
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1182": {
      "offset": [
        837,
        838
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1"
    },
    "1184": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        837,
        838
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1185": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x24"
    },
    "1187": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "15"
    },
    "1188": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xC5F"
    },
    "1191": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        3946,
        4367
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1192": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1193": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1195": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1196": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1199": {
      "op": "NOT"
    },
    "1200": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1201": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1202": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SUB",
      "path": "15"
    },
    "1203": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "15"
    },
    "1204": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1205": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1206": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1207": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1208": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1209": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1211": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1212": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "ADD",
      "path": "15"
    },
    "1213": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1214": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1221": {
      "op": "SHL"
    },
    "1222": {
      "op": "SUB"
    },
    "1223": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "AND",
      "path": "15"
    },
    "1224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1230": {
      "op": "SHL"
    },
    "1231": {
      "op": "SUB"
    },
    "1232": {
      "op": "NOT"
    },
    "1233": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1234": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP4",
      "path": "15"
    },
    "1235": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "AND",
      "path": "15"
    },
    "1236": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1237": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1238": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1239": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "OR",
      "path": "15"
    },
    "1240": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1241": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1242": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1243": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4438
      ],
      "op": "PUSH2",
      "path": "15",
      "statement": 15,
      "value": "0x4E8"
    },
    "1248": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4392,
        4405
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1249": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4407,
        4412
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1250": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4414,
        4421
      ],
      "op": "DUP7",
      "path": "15"
    },
    "1251": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3946,
        4367
      ],
      "op": "DUP5",
      "path": "15"
    },
    "1252": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4391
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x5B3"
    },
    "1255": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "i",
      "offset": [
        4380,
        4438
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1256": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4380,
        4438
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1257": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        4373,
        4438
      ],
      "op": "SWAP7",
      "path": "15"
    },
    "1258": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "offset": [
        3687,
        4443
      ],
      "op": "SWAP6",
      "path": "15"
    },
    "1259": {
      "op": "POP"
    },
    "1260": {
      "op": "POP"
    },
    "1261": {
      "op": "POP"
    },
    "1262": {
      "op": "POP"
    },
    "1263": {
      "op": "POP"
    },
    "1264": {
      "op": "POP"
    },
    "1265": {
      "fn": "ChainlinkClient.sendChainlinkRequestTo",
      "jump": "o",
      "offset": [
        3687,
        4443
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1266": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1267": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x4FA"
    },
    "1270": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xB70"
    },
    "1273": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1129,
        1153
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1274": {
      "fn": "Chainlink.initialize",
      "offset": [
        1129,
        1153
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1275": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1210
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 16,
      "value": "0x50A"
    },
    "1278": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1186
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1279": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x80"
    },
    "1281": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "ADD",
      "path": "14"
    },
    "1282": {
      "fn": "Chainlink.initialize",
      "offset": [
        1182,
        1190
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "1283": {
      "offset": [
        361,
        364
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x100"
    },
    "1286": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1181
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x711"
    },
    "1289": {
      "fn": "Chainlink.initialize",
      "jump": "i",
      "offset": [
        1161,
        1210
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1290": {
      "fn": "Chainlink.initialize",
      "offset": [
        1161,
        1210
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1291": {
      "op": "POP"
    },
    "1292": {
      "op": "POP"
    },
    "1293": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 17
    },
    "1294": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "DUP5",
      "path": "14"
    },
    "1295": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1231
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1302": {
      "op": "SHL"
    },
    "1303": {
      "op": "SUB"
    },
    "1304": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "DUP3",
      "path": "14",
      "statement": 18
    },
    "1305": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "AND",
      "path": "14"
    },
    "1306": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "1308": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1309": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1257
      ],
      "op": "ADD",
      "path": "14"
    },
    "1310": {
      "fn": "Chainlink.initialize",
      "offset": [
        1237,
        1272
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "op": "SUB"
    },
    "1319": {
      "op": "NOT"
    },
    "1320": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 19
    },
    "1321": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "AND",
      "path": "14"
    },
    "1322": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "1324": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "DUP6",
      "path": "14"
    },
    "1325": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1301
      ],
      "op": "ADD",
      "path": "14"
    },
    "1326": {
      "fn": "Chainlink.initialize",
      "offset": [
        1278,
        1316
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "1327": {
      "fn": "Chainlink.initialize",
      "offset": [
        1216,
        1220
      ],
      "op": "DUP4",
      "path": "14"
    },
    "1328": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1329": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "SWAP5",
      "path": "14"
    },
    "1330": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "1331": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "14"
    },
    "1332": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "14"
    },
    "1333": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "14"
    },
    "1334": {
      "fn": "Chainlink.initialize",
      "offset": [
        987,
        1338
      ],
      "op": "POP",
      "path": "14"
    },
    "1335": {
      "fn": "Chainlink.initialize",
      "jump": "o",
      "offset": [
        987,
        1338
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1336": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2777,
        2981
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1337": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2946
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 20,
      "value": "0x545"
    },
    "1340": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2894,
        2897
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1341": {
      "offset": [
        383,
        384
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x3"
    },
    "1343": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2931,
        2936
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1344": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2925,
        2944
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "1345": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2893
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77C"
    },
    "1348": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        2875,
        2946
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1349": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2875,
        2946
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1350": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2976
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 21,
      "value": "0x43C"
    },
    "1353": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2955
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1354": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2969,
        2974
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1355": {
      "fn": "CBORChainlink.encodeString",
      "offset": [
        2952,
        2962
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x891"
    },
    "1358": {
      "fn": "CBORChainlink.encodeString",
      "jump": "i",
      "offset": [
        2952,
        2976
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1359": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1704,
        2150
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1360": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1369": {
      "op": "NOT"
    },
    "1370": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1792,
        1797
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1371": {
      "branch": 69,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1792,
        1820
      ],
      "op": "SLT",
      "path": "23"
    },
    "1372": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1789,
        2146
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1373": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1789,
        2146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x56E"
    },
    "1376": {
      "branch": 69,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1789,
        2146
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1377": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1830,
        1860
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 22,
      "value": "0x56A"
    },
    "1380": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1849,
        1852
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1381": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1854,
        1859
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1382": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1830,
        1848
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8BF"
    },
    "1385": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        1830,
        1860
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1386": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1830,
        1860
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1387": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1704,
        2150
      ],
      "op": "POP",
      "path": "23"
    },
    "1388": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1704,
        2150
      ],
      "op": "POP",
      "path": "23"
    },
    "1389": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "o",
      "offset": [
        1704,
        2150
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1390": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1789,
        2146
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1391": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1884,
        1902
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1400": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1876,
        1881
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1401": {
      "branch": 70,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1876,
        1902
      ],
      "op": "SGT",
      "path": "23"
    },
    "1402": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1873,
        2146
      ],
      "op": "ISZERO",
      "path": "23"
    },
    "1403": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1873,
        2146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x588"
    },
    "1406": {
      "branch": 70,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1873,
        2146
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1407": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1912,
        1942
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 23,
      "value": "0x56A"
    },
    "1410": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1925,
        1928
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1411": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1935,
        1940
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1412": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1912,
        1924
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x901"
    },
    "1415": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        1912,
        1942
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1416": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1873,
        2146
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1417": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1967,
        1968
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1419": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1958,
        1963
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1420": {
      "branch": 71,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1958,
        1968
      ],
      "op": "SLT",
      "path": "23"
    },
    "1421": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1955,
        2146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x59C"
    },
    "1424": {
      "branch": 71,
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1955,
        2146
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1425": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1978,
        2041
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 24,
      "value": "0x56A"
    },
    "1428": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1997,
        2000
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1429": {
      "offset": [
        234,
        235
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x0"
    },
    "1431": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2033,
        2038
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1432": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1978,
        1996
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77C"
    },
    "1435": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        1978,
        2041
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1436": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        1955,
        2146
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1437": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2062,
        2139
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 25,
      "value": "0x56A"
    },
    "1440": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2081,
        2084
      ],
      "op": "DUP3",
      "path": "23"
    },
    "1441": {
      "offset": [
        288,
        289
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "1443": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2126,
        2136
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x5AE"
    },
    "1446": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2131,
        2136
      ],
      "op": "DUP5",
      "path": "23"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1449": {
      "op": "NOT"
    },
    "1450": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2126,
        2136
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCC7"
    },
    "1453": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        2126,
        2136
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1454": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2126,
        2136
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1455": {
      "fn": "CBORChainlink.encodeInt",
      "offset": [
        2062,
        2080
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77C"
    },
    "1458": {
      "fn": "CBORChainlink.encodeInt",
      "jump": "i",
      "offset": [
        2062,
        2139
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1459": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6629,
        7059
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1460": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 26,
      "value": "0x40"
    },
    "1462": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1463": {
      "op": "PUSH12",
      "value": "0xFFFFFFFFFFFFFFFFFFFFFFFF"
    },
    "1476": {
      "op": "NOT"
    },
    "1477": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6835,
        6839
      ],
      "op": "ADDRESS",
      "path": "15"
    },
    "1478": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1480": {
      "op": "SHL"
    },
    "1481": {
      "op": "AND"
    },
    "1482": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1484": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1485": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "ADD",
      "path": "15"
    },
    "1486": {
      "op": "MSTORE"
    },
    "1487": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "1489": {
      "op": "DUP2"
    },
    "1490": {
      "op": "ADD"
    },
    "1491": {
      "op": "DUP5"
    },
    "1492": {
      "op": "SWAP1"
    },
    "1493": {
      "op": "MSTORE"
    },
    "1494": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6771,
        6788
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1496": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6771,
        6788
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1497": {
      "op": "PUSH1",
      "value": "0x54"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1502": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1503": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1504": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1505": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1506": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "SUB",
      "path": "15"
    },
    "1507": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "1509": {
      "op": "NOT"
    },
    "1510": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "ADD",
      "path": "15"
    },
    "1511": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1512": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1513": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1514": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1515": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1516": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1517": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1518": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6818,
        6847
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1520": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1521": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1522": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "ADD",
      "path": "15"
    },
    "1523": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1524": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 27,
      "value": "0x0"
    },
    "1526": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1527": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1528": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1529": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6871
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x5"
    },
    "1531": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1532": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1533": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1534": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1535": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1536": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "KECCAK256",
      "path": "15"
    },
    "1537": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1538": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1539": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1543": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1545": {
      "op": "SHL"
    },
    "1546": {
      "op": "SUB"
    },
    "1547": {
      "op": "NOT"
    },
    "1548": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "AND",
      "path": "15"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1555": {
      "op": "SHL"
    },
    "1556": {
      "op": "SUB"
    },
    "1557": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "DUP11",
      "path": "15"
    },
    "1558": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "AND",
      "path": "15"
    },
    "1559": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "OR",
      "path": "15"
    },
    "1560": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1561": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6898
      ],
      "op": "SSTORE",
      "path": "15"
    },
    "1562": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1563": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP3",
      "path": "15"
    },
    "1564": {
      "op": "POP"
    },
    "1565": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1566": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6808,
        6848
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1567": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "PUSH32",
      "path": "15",
      "statement": 28,
      "value": "0xB5E6E01E79F91267DC17B4E6314D5D4D03593D2CEEE0FBB452B750BD70EA5AF9"
    },
    "1600": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1601": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6854,
        6882
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1602": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6909,
        6938
      ],
      "op": "LOG2",
      "path": "15"
    },
    "1603": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "PUSH1",
      "path": "15",
      "statement": 29,
      "value": "0x2"
    },
    "1605": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SLOAD",
      "path": "15"
    },
    "1606": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1608": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1609": {
      "op": "PUSH4",
      "value": "0x2000575"
    },
    "1614": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1616": {
      "op": "SHL"
    },
    "1617": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1618": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1623": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1625": {
      "op": "SHL"
    },
    "1626": {
      "op": "SUB"
    },
    "1627": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1628": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1629": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "AND",
      "path": "15"
    },
    "1630": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6958
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1631": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6974
      ],
      "op": "PUSH4",
      "path": "15",
      "value": "0x4000AEA0"
    },
    "1636": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        6974
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1637": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x676"
    },
    "1640": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1641": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6975,
        6988
      ],
      "op": "DUP9",
      "path": "15"
    },
    "1642": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6975,
        6988
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1643": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6990,
        6997
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1644": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6990,
        6997
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1645": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6999,
        7013
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1646": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6999,
        7013
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1647": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1649": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "15"
    },
    "1650": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD06"
    },
    "1653": {
      "fn": "ChainlinkClient._rawRequest",
      "jump": "i",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1654": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1655": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x20"
    },
    "1657": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1659": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1660": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1661": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP4",
      "path": "15"
    },
    "1662": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SUB",
      "path": "15"
    },
    "1663": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1664": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1666": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP8",
      "path": "15"
    },
    "1667": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "GAS",
      "path": "15"
    },
    "1668": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "CALL",
      "path": "15"
    },
    "1669": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1670": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1671": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ISZERO",
      "path": "15"
    },
    "1672": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x695"
    },
    "1675": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1676": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1677": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1679": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1680": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATACOPY",
      "path": "15"
    },
    "1681": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1682": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x0"
    },
    "1684": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "REVERT",
      "path": "15"
    },
    "1685": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1686": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "15"
    },
    "1687": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "15"
    },
    "1688": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "15"
    },
    "1689": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "15"
    },
    "1690": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1692": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1693": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "RETURNDATASIZE",
      "path": "15"
    },
    "1694": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "1696": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "NOT",
      "path": "15"
    },
    "1697": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x1F"
    },
    "1699": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1700": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "15"
    },
    "1701": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "AND",
      "path": "15"
    },
    "1702": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1703": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "15"
    },
    "1704": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP1",
      "path": "15"
    },
    "1705": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1707": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1708": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "POP",
      "path": "15"
    },
    "1709": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1710": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "ADD",
      "path": "15"
    },
    "1711": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1712": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x6B9"
    },
    "1715": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP2",
      "path": "15"
    },
    "1716": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "SWAP1",
      "path": "15"
    },
    "1717": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0xD2D"
    },
    "1720": {
      "fn": "ChainlinkClient._rawRequest",
      "jump": "i",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMP",
      "path": "15"
    },
    "1721": {
      "branch": 76,
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6952,
        7014
      ],
      "op": "JUMPDEST",
      "path": "15"
    },
    "1722": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x530"
    },
    "1725": {
      "branch": 76,
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "JUMPI",
      "path": "15"
    },
    "1726": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x40"
    },
    "1728": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "MLOAD",
      "path": "15"
    },
    "1729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1735": {
      "op": "SHL"
    },
    "1736": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "DUP2",
      "path": "15"
    },
    "1737": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "MSTORE",
      "path": "15"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1740": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH1",
      "path": "15",
      "value": "0x4"
    },
    "1742": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "DUP3",
      "path": "15"
    },
    "1743": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "ADD",
      "path": "15"
    },
    "1744": {
      "op": "MSTORE"
    },
    "1745": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1749": {
      "op": "DUP3"
    },
    "1750": {
      "op": "ADD"
    },
    "1751": {
      "op": "MSTORE"
    },
    "1752": {
      "op": "PUSH32",
      "value": "0x756E61626C6520746F207472616E73666572416E6443616C6C20746F206F7261"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1787": {
      "op": "DUP3"
    },
    "1788": {
      "op": "ADD"
    },
    "1789": {
      "op": "MSTORE"
    },
    "1790": {
      "op": "PUSH3",
      "value": "0x636C65"
    },
    "1794": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "1796": {
      "op": "SHL"
    },
    "1797": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1799": {
      "op": "DUP3"
    },
    "1800": {
      "op": "ADD"
    },
    "1801": {
      "op": "MSTORE"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1804": {
      "op": "ADD"
    },
    "1805": {
      "fn": "ChainlinkClient._rawRequest",
      "offset": [
        6944,
        7054
      ],
      "op": "PUSH2",
      "path": "15",
      "value": "0x29E"
    },
    "1808": {
      "op": "JUMP"
    },
    "1809": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1812": {
      "op": "DUP1"
    },
    "1813": {
      "op": "MLOAD"
    },
    "1814": {
      "op": "DUP1"
    },
    "1815": {
      "op": "DUP3"
    },
    "1816": {
      "op": "ADD"
    },
    "1817": {
      "op": "SWAP1"
    },
    "1818": {
      "op": "SWAP2"
    },
    "1819": {
      "op": "MSTORE"
    },
    "1820": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1822": {
      "op": "DUP2"
    },
    "1823": {
      "op": "MSTORE"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1828": {
      "op": "DUP3"
    },
    "1829": {
      "op": "ADD"
    },
    "1830": {
      "op": "MSTORE"
    },
    "1831": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x731"
    },
    "1834": {
      "fn": "BufferChainlink.init",
      "offset": [
        1111,
        1113
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1836": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1108
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1837": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD4F"
    },
    "1840": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1100,
        1113
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1841": {
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1113
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1842": {
      "branch": 63,
      "fn": "BufferChainlink.init",
      "offset": [
        1100,
        1118
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "1843": {
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x759"
    },
    "1846": {
      "branch": 63,
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "1847": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 30,
      "value": "0x741"
    },
    "1850": {
      "fn": "BufferChainlink.init",
      "offset": [
        1157,
        1159
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1852": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1154
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1853": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD4F"
    },
    "1856": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1146,
        1159
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1857": {
      "fn": "BufferChainlink.init",
      "offset": [
        1146,
        1159
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1858": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x74C"
    },
    "1861": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1862": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1142
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "1864": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE3"
    },
    "1867": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1140,
        1160
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1868": {
      "fn": "BufferChainlink.init",
      "offset": [
        1140,
        1160
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1869": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x756"
    },
    "1872": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1873": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1874": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "1877": {
      "fn": "BufferChainlink.init",
      "jump": "i",
      "offset": [
        1128,
        1160
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1878": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1879": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1880": {
      "fn": "BufferChainlink.init",
      "offset": [
        1128,
        1160
      ],
      "op": "POP",
      "path": "22"
    },
    "1881": {
      "fn": "BufferChainlink.init",
      "offset": [
        1096,
        1167
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "PUSH1",
      "path": "22",
      "statement": 31,
      "value": "0x20"
    },
    "1885": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1886": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1887": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1226
      ],
      "op": "ADD",
      "path": "22"
    },
    "1888": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "DUP3",
      "path": "22"
    },
    "1889": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1890": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1237
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1891": {
      "fn": "BufferChainlink.init",
      "offset": [
        1277,
        1281
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x40"
    },
    "1893": {
      "fn": "BufferChainlink.init",
      "offset": [
        1271,
        1282
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1894": {
      "fn": "BufferChainlink.init",
      "offset": [
        1271,
        1282
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "1895": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "DUP1",
      "path": "22"
    },
    "1896": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "DUP6",
      "path": "22"
    },
    "1897": {
      "fn": "BufferChainlink.init",
      "offset": [
        1289,
        1305
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1898": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1900": {
      "fn": "BufferChainlink.init",
      "offset": [
        1312,
        1326
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1901": {
      "fn": "BufferChainlink.init",
      "offset": [
        1312,
        1326
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1902": {
      "fn": "BufferChainlink.init",
      "offset": [
        1354,
        1372
      ],
      "op": "DUP4",
      "path": "22"
    },
    "1903": {
      "fn": "BufferChainlink.init",
      "offset": [
        1354,
        1372
      ],
      "op": "ADD",
      "path": "22"
    },
    "1904": {
      "fn": "BufferChainlink.init",
      "offset": [
        1346,
        1373
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1905": {
      "fn": "BufferChainlink.init",
      "offset": [
        1346,
        1373
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1906": {
      "fn": "BufferChainlink.init",
      "offset": [
        1346,
        1373
      ],
      "op": "ADD",
      "path": "22"
    },
    "1907": {
      "fn": "BufferChainlink.init",
      "offset": [
        1333,
        1374
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "1908": {
      "fn": "BufferChainlink.init",
      "offset": [
        1333,
        1374
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "1909": {
      "fn": "BufferChainlink.init",
      "offset": [
        1214,
        1217
      ],
      "op": "DUP2",
      "path": "22"
    },
    "1910": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "1911": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "1912": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "1913": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "POP",
      "path": "22"
    },
    "1914": {
      "fn": "BufferChainlink.init",
      "offset": [
        1001,
        1400
      ],
      "op": "POP",
      "path": "22"
    },
    "1915": {
      "fn": "BufferChainlink.init",
      "jump": "o",
      "offset": [
        1001,
        1400
      ],
      "op": "JUMP",
      "path": "22"
    },
    "1916": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        682,
        1307
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1917": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        803,
        805
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x17"
    },
    "1919": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        799
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1920": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1929": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "AND",
      "path": "23"
    },
    "1930": {
      "branch": 72,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        794,
        805
      ],
      "op": "GT",
      "path": "23"
    },
    "1931": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7A7"
    },
    "1934": {
      "branch": 72,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1935": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 32,
      "value": "0x7A1"
    },
    "1938": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        818
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1939": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xE0"
    },
    "1941": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        847,
        848
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1943": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "DUP6",
      "path": "23"
    },
    "1944": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1945": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        838,
        848
      ],
      "op": "SHL",
      "path": "23"
    },
    "1946": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "AND",
      "path": "23"
    },
    "1947": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1948": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        837,
        857
      ],
      "op": "OR",
      "path": "23"
    },
    "1949": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        830
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "1952": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        815,
        859
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1953": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1954": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        815,
        859
      ],
      "op": "POP",
      "path": "23"
    },
    "1955": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1956": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1957": {
      "fn": "Chainlink.add",
      "offset": [
        1951,
        2126
      ],
      "op": "POP",
      "path": "14"
    },
    "1958": {
      "fn": "Chainlink.add",
      "jump": "o",
      "offset": [
        1951,
        2126
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1959": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        791,
        1303
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1960": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        885,
        889
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xFF"
    },
    "1962": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        881
      ],
      "op": "DUP2",
      "path": "23"
    },
    "1963": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "1972": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "AND",
      "path": "23"
    },
    "1973": {
      "branch": 73,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        876,
        889
      ],
      "op": "GT",
      "path": "23"
    },
    "1974": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x7E5"
    },
    "1977": {
      "branch": 73,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "1978": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        940
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 33,
      "value": "0x7CE"
    },
    "1981": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        902
      ],
      "op": "DUP4",
      "path": "23"
    },
    "1982": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        936,
        938
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x18"
    },
    "1984": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FE0"
    },
    "1987": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        931,
        932
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "1989": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "DUP7",
      "path": "23"
    },
    "1990": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "1991": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "SHL",
      "path": "23"
    },
    "1992": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        922,
        932
      ],
      "op": "AND",
      "path": "23"
    },
    "1993": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        921,
        938
      ],
      "op": "OR",
      "path": "23"
    },
    "1994": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        914
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "1997": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        899,
        940
      ],
      "op": "JUMP",
      "path": "23"
    },
    "1998": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        899,
        940
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "1999": {
      "op": "POP"
    },
    "2000": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 34,
      "value": "0x7A1"
    },
    "2003": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        951
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2004": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2013": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2014": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        971
      ],
      "op": "AND",
      "path": "23"
    },
    "2015": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        969,
        970
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1"
    },
    "2017": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        948,
        961
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x949"
    },
    "2020": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        948,
        971
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2021": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        872,
        1303
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2022": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        997,
        1003
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xFFFF"
    },
    "2025": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        993
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2026": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2035": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "AND",
      "path": "23"
    },
    "2036": {
      "branch": 74,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        988,
        1003
      ],
      "op": "GT",
      "path": "23"
    },
    "2037": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x824"
    },
    "2040": {
      "branch": 74,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2041": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1054
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 35,
      "value": "0x80D"
    },
    "2044": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1016
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2045": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1050,
        1052
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x19"
    },
    "2047": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FE0"
    },
    "2050": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1045,
        1046
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2052": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2053": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2054": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "SHL",
      "path": "23"
    },
    "2055": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1036,
        1046
      ],
      "op": "AND",
      "path": "23"
    },
    "2056": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1035,
        1052
      ],
      "op": "OR",
      "path": "23"
    },
    "2057": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1028
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "2060": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1013,
        1054
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2061": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1013,
        1054
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2062": {
      "op": "POP"
    },
    "2063": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 36,
      "value": "0x7A1"
    },
    "2066": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1065
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2067": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2076": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2077": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1085
      ],
      "op": "AND",
      "path": "23"
    },
    "2078": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1083,
        1084
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2080": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1062,
        1075
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x949"
    },
    "2083": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1062,
        1085
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2084": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        984,
        1303
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2085": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1111,
        1121
      ],
      "op": "PUSH4",
      "path": "23",
      "value": "0xFFFFFFFF"
    },
    "2090": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1107
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2091": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2100": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "AND",
      "path": "23"
    },
    "2101": {
      "branch": 75,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1102,
        1121
      ],
      "op": "GT",
      "path": "23"
    },
    "2102": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x865"
    },
    "2105": {
      "branch": 75,
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "JUMPI",
      "path": "23"
    },
    "2106": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1172
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 37,
      "value": "0x84E"
    },
    "2109": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1134
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2110": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1168,
        1170
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1A"
    },
    "2112": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FE0"
    },
    "2115": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1163,
        1164
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2117": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2118": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2119": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "SHL",
      "path": "23"
    },
    "2120": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1154,
        1164
      ],
      "op": "AND",
      "path": "23"
    },
    "2121": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1153,
        1170
      ],
      "op": "OR",
      "path": "23"
    },
    "2122": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1146
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "2125": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1131,
        1172
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2126": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1131,
        1172
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2127": {
      "op": "POP"
    },
    "2128": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 38,
      "value": "0x7A1"
    },
    "2131": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1183
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2132": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2141": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2142": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1203
      ],
      "op": "AND",
      "path": "23"
    },
    "2143": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1201,
        1202
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x4"
    },
    "2145": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1180,
        1193
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x949"
    },
    "2148": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1180,
        1203
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2149": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1098,
        1303
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2150": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1265
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 39,
      "value": "0x87A"
    },
    "2153": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1227
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2154": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1261,
        1263
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x1B"
    },
    "2156": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x1FE0"
    },
    "2159": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1256,
        1257
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x5"
    },
    "2161": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "DUP7",
      "path": "23"
    },
    "2162": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2163": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "SHL",
      "path": "23"
    },
    "2164": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1247,
        1257
      ],
      "op": "AND",
      "path": "23"
    },
    "2165": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1246,
        1263
      ],
      "op": "OR",
      "path": "23"
    },
    "2166": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1239
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "2169": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1224,
        1265
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2170": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1224,
        1265
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2171": {
      "op": "POP"
    },
    "2172": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 40,
      "value": "0x7A1"
    },
    "2175": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1276
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2176": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "PUSH8",
      "path": "23",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2185": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2186": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1296
      ],
      "op": "AND",
      "path": "23"
    },
    "2187": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1294,
        1295
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x8"
    },
    "2189": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "offset": [
        1273,
        1286
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x949"
    },
    "2192": {
      "fn": "CBORChainlink.encodeFixedNumeric",
      "jump": "i",
      "offset": [
        1273,
        1296
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2193": {
      "fn": "BufferChainlink.append",
      "offset": [
        4692,
        4847
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2194": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2196": {
      "op": "DUP1"
    },
    "2197": {
      "op": "MLOAD"
    },
    "2198": {
      "op": "DUP1"
    },
    "2199": {
      "op": "DUP3"
    },
    "2200": {
      "op": "ADD"
    },
    "2201": {
      "op": "SWAP1"
    },
    "2202": {
      "op": "SWAP2"
    },
    "2203": {
      "op": "MSTORE"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2206": {
      "op": "DUP2"
    },
    "2207": {
      "op": "MSTORE"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2212": {
      "op": "DUP3"
    },
    "2213": {
      "op": "ADD"
    },
    "2214": {
      "op": "MSTORE"
    },
    "2215": {
      "fn": "BufferChainlink.append",
      "offset": [
        4797,
        4842
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 41,
      "value": "0x8B8"
    },
    "2218": {
      "fn": "BufferChainlink.append",
      "offset": [
        4803,
        4806
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2219": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4811
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2220": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2222": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "ADD",
      "path": "22"
    },
    "2223": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4815
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2224": {
      "fn": "BufferChainlink.append",
      "offset": [
        4808,
        4822
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2225": {
      "fn": "BufferChainlink.append",
      "offset": [
        4824,
        4828
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2226": {
      "fn": "BufferChainlink.append",
      "offset": [
        4830,
        4834
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2227": {
      "fn": "BufferChainlink.append",
      "offset": [
        4830,
        4841
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2228": {
      "fn": "BufferChainlink.append",
      "offset": [
        4797,
        4802
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x96F"
    },
    "2231": {
      "fn": "BufferChainlink.append",
      "jump": "i",
      "offset": [
        4797,
        4842
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2232": {
      "fn": "BufferChainlink.append",
      "offset": [
        4797,
        4842
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2233": {
      "fn": "BufferChainlink.append",
      "offset": [
        4790,
        4842
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2234": {
      "fn": "BufferChainlink.append",
      "offset": [
        4692,
        4847
      ],
      "op": "SWAP3",
      "path": "22"
    },
    "2235": {
      "op": "POP"
    },
    "2236": {
      "op": "POP"
    },
    "2237": {
      "op": "POP"
    },
    "2238": {
      "fn": "BufferChainlink.append",
      "jump": "o",
      "offset": [
        4692,
        4847
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2239": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2547,
        2773
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2240": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2641,
        2713
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 42,
      "value": "0x8CA"
    },
    "2243": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2641,
        2644
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2244": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2663,
        2711
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC3"
    },
    "2246": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2641,
        2656
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "2249": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "jump": "i",
      "offset": [
        2641,
        2713
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2250": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2641,
        2713
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2251": {
      "op": "POP"
    },
    "2252": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2719,
        2768
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 43,
      "value": "0x56A"
    },
    "2255": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2731,
        2734
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2256": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2755,
        2765
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8DB"
    },
    "2259": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2760,
        2765
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2262": {
      "op": "NOT"
    },
    "2263": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2755,
        2765
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xCC7"
    },
    "2266": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "jump": "i",
      "offset": [
        2755,
        2765
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2267": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2755,
        2765
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2268": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2270": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2271": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2273": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "ADD",
      "path": "23"
    },
    "2274": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8ED"
    },
    "2277": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2278": {
      "op": "DUP2"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2282": {
      "op": "ADD"
    },
    "2283": {
      "op": "SWAP1"
    },
    "2284": {
      "op": "JUMP"
    },
    "2285": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2286": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2288": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2289": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2291": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2292": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2293": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "SUB",
      "path": "23"
    },
    "2294": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "SUB",
      "path": "23"
    },
    "2295": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "DUP2",
      "path": "23"
    },
    "2296": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2297": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "SWAP1",
      "path": "23"
    },
    "2298": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2300": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2736,
        2767
      ],
      "op": "MSTORE",
      "path": "23"
    },
    "2301": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "offset": [
        2719,
        2730
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0xA59"
    },
    "2304": {
      "fn": "CBORChainlink.encodeSignedBigNum",
      "jump": "i",
      "offset": [
        2719,
        2768
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2305": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2345,
        2543
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2306": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2434,
        2497
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 44,
      "value": "0x90C"
    },
    "2309": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2434,
        2437
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2310": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2456,
        2495
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0xC2"
    },
    "2312": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2434,
        2449
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x924"
    },
    "2315": {
      "fn": "CBORChainlink.encodeBigNum",
      "jump": "i",
      "offset": [
        2434,
        2497
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2316": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2434,
        2497
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2317": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2434,
        2497
      ],
      "op": "POP",
      "path": "23"
    },
    "2318": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2503,
        2538
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 45,
      "value": "0x56A"
    },
    "2321": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2515,
        2518
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2322": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2531,
        2536
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2323": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x40"
    },
    "2325": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2326": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x20"
    },
    "2328": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "ADD",
      "path": "23"
    },
    "2329": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x8ED"
    },
    "2332": {
      "fn": "CBORChainlink.encodeBigNum",
      "offset": [
        2520,
        2537
      ],
      "op": "SWAP2",
      "path": "23"
    },
    "2333": {
      "op": "DUP2"
    },
    "2334": {
      "op": "MSTORE"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2337": {
      "op": "ADD"
    },
    "2338": {
      "op": "SWAP1"
    },
    "2339": {
      "op": "JUMP"
    },
    "2340": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6040,
        6185
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2343": {
      "op": "DUP1"
    },
    "2344": {
      "op": "MLOAD"
    },
    "2345": {
      "op": "DUP1"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "SWAP1"
    },
    "2349": {
      "op": "SWAP2"
    },
    "2350": {
      "op": "MSTORE"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2353": {
      "op": "DUP2"
    },
    "2354": {
      "op": "MSTORE"
    },
    "2355": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2357": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2359": {
      "op": "DUP3"
    },
    "2360": {
      "op": "ADD"
    },
    "2361": {
      "op": "MSTORE"
    },
    "2362": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6143,
        6180
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 46,
      "value": "0x8B8"
    },
    "2365": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6154,
        6157
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2366": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6162
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2367": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2369": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "ADD",
      "path": "22"
    },
    "2370": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6166
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2371": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6159,
        6173
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2372": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6175,
        6179
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2373": {
      "fn": "BufferChainlink.appendUint8",
      "offset": [
        6143,
        6153
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA66"
    },
    "2376": {
      "fn": "BufferChainlink.appendUint8",
      "jump": "i",
      "offset": [
        6143,
        6180
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2377": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        9894,
        10071
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2380": {
      "op": "DUP1"
    },
    "2381": {
      "op": "MLOAD"
    },
    "2382": {
      "op": "DUP1"
    },
    "2383": {
      "op": "DUP3"
    },
    "2384": {
      "op": "ADD"
    },
    "2385": {
      "op": "SWAP1"
    },
    "2386": {
      "op": "SWAP2"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2390": {
      "op": "DUP2"
    },
    "2391": {
      "op": "MSTORE"
    },
    "2392": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2394": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2396": {
      "op": "DUP3"
    },
    "2397": {
      "op": "ADD"
    },
    "2398": {
      "op": "MSTORE"
    },
    "2399": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10026,
        10066
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 47,
      "value": "0x530"
    },
    "2402": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10035,
        10038
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2403": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10043
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2404": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2406": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "ADD",
      "path": "22"
    },
    "2407": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10047
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2408": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10040,
        10054
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2409": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10056,
        10060
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2410": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10062,
        10065
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2411": {
      "fn": "BufferChainlink.appendInt",
      "offset": [
        10026,
        10034
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAC1"
    },
    "2414": {
      "fn": "BufferChainlink.appendInt",
      "jump": "i",
      "offset": [
        10026,
        10066
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2415": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2418": {
      "op": "DUP1"
    },
    "2419": {
      "op": "MLOAD"
    },
    "2420": {
      "op": "DUP1"
    },
    "2421": {
      "op": "DUP3"
    },
    "2422": {
      "op": "ADD"
    },
    "2423": {
      "op": "SWAP1"
    },
    "2424": {
      "op": "SWAP2"
    },
    "2425": {
      "op": "MSTORE"
    },
    "2426": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2428": {
      "op": "DUP2"
    },
    "2429": {
      "op": "MSTORE"
    },
    "2430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2434": {
      "op": "DUP3"
    },
    "2435": {
      "op": "ADD"
    },
    "2436": {
      "op": "MSTORE"
    },
    "2437": {
      "fn": "BufferChainlink.write",
      "offset": [
        2903,
        2907
      ],
      "op": "DUP3",
      "path": "22",
      "statement": 48
    },
    "2438": {
      "fn": "BufferChainlink.write",
      "offset": [
        2903,
        2914
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2439": {
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2899
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2440": {
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2914
      ],
      "op": "GT",
      "path": "22"
    },
    "2441": {
      "branch": 64,
      "fn": "BufferChainlink.write",
      "offset": [
        2896,
        2914
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2442": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x992"
    },
    "2445": {
      "branch": 64,
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2446": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2448": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2449": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "REVERT",
      "path": "22"
    },
    "2450": {
      "fn": "BufferChainlink.write",
      "offset": [
        2888,
        2915
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2451": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2453": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2454": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "ADD",
      "path": "22"
    },
    "2455": {
      "fn": "BufferChainlink.write",
      "offset": [
        2938,
        2950
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2456": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9A1"
    },
    "2459": {
      "fn": "BufferChainlink.write",
      "offset": [
        2932,
        2935
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2460": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2929
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2461": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2464": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2926,
        2935
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2465": {
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2935
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2466": {
      "branch": 65,
      "fn": "BufferChainlink.write",
      "offset": [
        2926,
        2950
      ],
      "op": "GT",
      "path": "22"
    },
    "2467": {
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2468": {
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9D4"
    },
    "2471": {
      "branch": 65,
      "fn": "BufferChainlink.write",
      "offset": [
        2922,
        3012
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2472": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        3005
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 49,
      "value": "0x9D4"
    },
    "2475": {
      "fn": "BufferChainlink.write",
      "offset": [
        2967,
        2970
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2476": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3000
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9C4"
    },
    "2479": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2979
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2480": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2482": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "ADD",
      "path": "22"
    },
    "2483": {
      "fn": "BufferChainlink.write",
      "offset": [
        2976,
        2988
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2484": {
      "fn": "BufferChainlink.write",
      "offset": [
        2996,
        2999
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2485": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2993
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2486": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9BF"
    },
    "2489": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2490": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2491": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2494": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2990,
        2999
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2495": {
      "fn": "BufferChainlink.write",
      "offset": [
        2990,
        2999
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2496": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        2975
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB42"
    },
    "2499": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2972,
        3000
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2500": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3000
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2501": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9CF"
    },
    "2504": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2505": {
      "fn": "BufferChainlink.write",
      "offset": [
        3003,
        3004
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2507": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD71"
    },
    "2510": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2972,
        3004
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2511": {
      "fn": "BufferChainlink.write",
      "offset": [
        2972,
        3004
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2512": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        2966
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB59"
    },
    "2515": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        2960,
        3005
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2516": {
      "fn": "BufferChainlink.write",
      "offset": [
        2960,
        3005
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2517": {
      "fn": "BufferChainlink.write",
      "offset": [
        3018,
        3030
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2519": {
      "fn": "BufferChainlink.write",
      "offset": [
        3036,
        3047
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2520": {
      "fn": "BufferChainlink.write",
      "offset": [
        3133,
        3136
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2521": {
      "fn": "BufferChainlink.write",
      "offset": [
        3127,
        3137
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2522": {
      "fn": "BufferChainlink.write",
      "offset": [
        3204,
        3210
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2523": {
      "fn": "BufferChainlink.write",
      "offset": [
        3198,
        3211
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2524": {
      "fn": "BufferChainlink.write",
      "offset": [
        3320,
        3323
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2525": {
      "fn": "BufferChainlink.write",
      "offset": [
        3315,
        3317
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2527": {
      "fn": "BufferChainlink.write",
      "offset": [
        3307,
        3313
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2528": {
      "fn": "BufferChainlink.write",
      "offset": [
        3303,
        3318
      ],
      "op": "ADD",
      "path": "22"
    },
    "2529": {
      "fn": "BufferChainlink.write",
      "offset": [
        3299,
        3324
      ],
      "op": "ADD",
      "path": "22"
    },
    "2530": {
      "fn": "BufferChainlink.write",
      "offset": [
        3291,
        3324
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2531": {
      "fn": "BufferChainlink.write",
      "offset": [
        3291,
        3324
      ],
      "op": "POP",
      "path": "22"
    },
    "2532": {
      "fn": "BufferChainlink.write",
      "offset": [
        3404,
        3410
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2533": {
      "fn": "BufferChainlink.write",
      "offset": [
        3398,
        3401
      ],
      "op": "DUP9",
      "path": "22"
    },
    "2534": {
      "fn": "BufferChainlink.write",
      "offset": [
        3393,
        3396
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2535": {
      "fn": "BufferChainlink.write",
      "offset": [
        3389,
        3402
      ],
      "op": "ADD",
      "path": "22"
    },
    "2536": {
      "fn": "BufferChainlink.write",
      "offset": [
        3386,
        3411
      ],
      "op": "GT",
      "path": "22"
    },
    "2537": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2538": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9F3"
    },
    "2541": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2542": {
      "fn": "BufferChainlink.write",
      "offset": [
        3446,
        3449
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2543": {
      "fn": "BufferChainlink.write",
      "offset": [
        3441,
        3444
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2544": {
      "fn": "BufferChainlink.write",
      "offset": [
        3437,
        3450
      ],
      "op": "ADD",
      "path": "22"
    },
    "2545": {
      "fn": "BufferChainlink.write",
      "offset": [
        3429,
        3435
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2546": {
      "fn": "BufferChainlink.write",
      "offset": [
        3422,
        3451
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2547": {
      "fn": "BufferChainlink.write",
      "offset": [
        3383,
        3459
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2548": {
      "op": "POP"
    },
    "2549": {
      "op": "POP"
    },
    "2550": {
      "op": "POP"
    },
    "2551": {
      "fn": "BufferChainlink.write",
      "offset": [
        3483,
        3485
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2553": {
      "fn": "BufferChainlink.write",
      "offset": [
        3473,
        3486
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2554": {
      "fn": "BufferChainlink.write",
      "offset": [
        3473,
        3486
      ],
      "op": "ADD",
      "path": "22"
    },
    "2555": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2556": {
      "fn": "BufferChainlink.write",
      "offset": [
        3558,
        3560
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2558": {
      "fn": "BufferChainlink.write",
      "offset": [
        3551,
        3554
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2559": {
      "fn": "BufferChainlink.write",
      "offset": [
        3551,
        3560
      ],
      "op": "LT",
      "path": "22"
    },
    "2560": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA33"
    },
    "2563": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2564": {
      "fn": "BufferChainlink.write",
      "offset": [
        3613,
        3623
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2565": {
      "fn": "BufferChainlink.write",
      "offset": [
        3613,
        3623
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2566": {
      "fn": "BufferChainlink.write",
      "offset": [
        3600,
        3624
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2567": {
      "fn": "BufferChainlink.write",
      "offset": [
        3600,
        3624
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2568": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 50,
      "value": "0xA12"
    },
    "2571": {
      "fn": "BufferChainlink.write",
      "offset": [
        3647,
        3649
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2573": {
      "fn": "BufferChainlink.write",
      "offset": [
        3607,
        3611
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2574": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2577": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3639,
        3649
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2578": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2579": {
      "fn": "BufferChainlink.write",
      "offset": [
        3639,
        3649
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2580": {
      "op": "POP"
    },
    "2581": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 51,
      "value": "0xA1F"
    },
    "2584": {
      "fn": "BufferChainlink.write",
      "offset": [
        3664,
        3666
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2586": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2587": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2590": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3657,
        3666
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2591": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2592": {
      "fn": "BufferChainlink.write",
      "offset": [
        3657,
        3666
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2593": {
      "op": "POP"
    },
    "2594": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 52,
      "value": "0xA2C"
    },
    "2597": {
      "fn": "BufferChainlink.write",
      "offset": [
        3569,
        3571
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2599": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2600": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE3"
    },
    "2603": {
      "fn": "BufferChainlink.write",
      "jump": "i",
      "offset": [
        3562,
        3571
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2604": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2605": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2606": {
      "fn": "BufferChainlink.write",
      "offset": [
        3562,
        3571
      ],
      "op": "POP",
      "path": "22"
    },
    "2607": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9FB"
    },
    "2610": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2611": {
      "fn": "BufferChainlink.write",
      "offset": [
        3544,
        3673
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2612": {
      "fn": "BufferChainlink.write",
      "offset": [
        3807,
        3817
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2613": {
      "fn": "BufferChainlink.write",
      "offset": [
        3858,
        3869
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2614": {
      "fn": "BufferChainlink.write",
      "offset": [
        3858,
        3869
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2615": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2617": {
      "op": "NOT"
    },
    "2618": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3749
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2620": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2621": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2622": {
      "fn": "BufferChainlink.write",
      "offset": [
        3747,
        3755
      ],
      "op": "SUB",
      "path": "22"
    },
    "2623": {
      "fn": "BufferChainlink.write",
      "offset": [
        3741,
        3744
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2626": {
      "fn": "BufferChainlink.write",
      "offset": [
        3741,
        3756
      ],
      "op": "EXP",
      "path": "22"
    },
    "2627": {
      "fn": "BufferChainlink.write",
      "offset": [
        3740,
        3761
      ],
      "op": "ADD",
      "path": "22"
    },
    "2628": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2629": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2630": {
      "fn": "BufferChainlink.write",
      "offset": [
        3854,
        3876
      ],
      "op": "AND",
      "path": "22"
    },
    "2631": {
      "fn": "BufferChainlink.write",
      "offset": [
        3819,
        3828
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2632": {
      "fn": "BufferChainlink.write",
      "offset": [
        3819,
        3828
      ],
      "op": "NOT",
      "path": "22"
    },
    "2633": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2634": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2635": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2636": {
      "fn": "BufferChainlink.write",
      "offset": [
        3803,
        3829
      ],
      "op": "AND",
      "path": "22"
    },
    "2637": {
      "fn": "BufferChainlink.write",
      "offset": [
        3898,
        3919
      ],
      "op": "OR",
      "path": "22"
    },
    "2638": {
      "fn": "BufferChainlink.write",
      "offset": [
        3885,
        3920
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2639": {
      "fn": "BufferChainlink.write",
      "offset": [
        3885,
        3920
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2640": {
      "op": "POP"
    },
    "2641": {
      "fn": "BufferChainlink.write",
      "offset": [
        3947,
        3950
      ],
      "op": "DUP4",
      "path": "22",
      "statement": 53
    },
    "2642": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2643": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2644": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "22"
    },
    "2645": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "22"
    },
    "2646": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "22"
    },
    "2647": {
      "fn": "BufferChainlink.write",
      "offset": [
        2745,
        3955
      ],
      "op": "POP",
      "path": "22"
    },
    "2648": {
      "fn": "BufferChainlink.write",
      "jump": "o",
      "offset": [
        2745,
        3955
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2649": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2154,
        2341
      ],
      "op": "JUMPDEST",
      "path": "23"
    },
    "2650": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2250,
        2313
      ],
      "op": "PUSH2",
      "path": "23",
      "statement": 54,
      "value": "0x545"
    },
    "2653": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2269,
        2272
      ],
      "op": "DUP3",
      "path": "23"
    },
    "2654": {
      "offset": [
        335,
        336
      ],
      "op": "PUSH1",
      "path": "23",
      "value": "0x2"
    },
    "2656": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2299,
        2304
      ],
      "op": "DUP4",
      "path": "23"
    },
    "2657": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2299,
        2311
      ],
      "op": "MLOAD",
      "path": "23"
    },
    "2658": {
      "fn": "CBORChainlink.encodeBytes",
      "offset": [
        2250,
        2268
      ],
      "op": "PUSH2",
      "path": "23",
      "value": "0x77C"
    },
    "2661": {
      "fn": "CBORChainlink.encodeBytes",
      "jump": "i",
      "offset": [
        2250,
        2313
      ],
      "op": "JUMP",
      "path": "23"
    },
    "2662": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5148,
        5787
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2665": {
      "op": "DUP1"
    },
    "2666": {
      "op": "MLOAD"
    },
    "2667": {
      "op": "DUP1"
    },
    "2668": {
      "op": "DUP3"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "op": "SWAP1"
    },
    "2671": {
      "op": "SWAP2"
    },
    "2672": {
      "op": "MSTORE"
    },
    "2673": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2675": {
      "op": "DUP2"
    },
    "2676": {
      "op": "MSTORE"
    },
    "2677": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2681": {
      "op": "DUP3"
    },
    "2682": {
      "op": "ADD"
    },
    "2683": {
      "op": "MSTORE"
    },
    "2684": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5286
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2685": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2687": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "ADD",
      "path": "22"
    },
    "2688": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5283,
        5295
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2689": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5276,
        5279
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2690": {
      "branch": 66,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5276,
        5295
      ],
      "op": "LT",
      "path": "22"
    },
    "2691": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5272,
        5341
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xA9B"
    },
    "2694": {
      "branch": 66,
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5272,
        5341
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2695": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5305,
        5334
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 55,
      "value": "0xA9B"
    },
    "2698": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5312,
        5315
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2699": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5320
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2700": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2702": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "ADD",
      "path": "22"
    },
    "2703": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5329
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2704": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5332,
        5333
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x2"
    },
    "2706": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9CF"
    },
    "2709": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2710": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2711": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5317,
        5333
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xD71"
    },
    "2714": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "i",
      "offset": [
        5317,
        5333
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2715": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5305,
        5334
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2716": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5427,
        5430
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2717": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5421,
        5431
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2718": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5498,
        5504
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2719": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5492,
        5505
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2720": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5610,
        5612
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2722": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5604,
        5607
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2723": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5596,
        5602
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2724": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5592,
        5608
      ],
      "op": "ADD",
      "path": "22"
    },
    "2725": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5588,
        5613
      ],
      "op": "ADD",
      "path": "22"
    },
    "2726": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5634,
        5638
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2727": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5628,
        5632
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2728": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5620,
        5639
      ],
      "op": "MSTORE8",
      "path": "22"
    },
    "2729": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5620,
        5639
      ],
      "op": "POP",
      "path": "22"
    },
    "2730": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5705,
        5711
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2731": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5700,
        5703
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2732": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5697,
        5712
      ],
      "op": "SUB",
      "path": "22"
    },
    "2733": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAB7"
    },
    "2736": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2737": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5750,
        5751
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2739": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5742,
        5748
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2740": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5738,
        5752
      ],
      "op": "ADD",
      "path": "22"
    },
    "2741": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5730,
        5736
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2742": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5723,
        5753
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2743": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5694,
        5761
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2744": {
      "op": "POP"
    },
    "2745": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5779,
        5782
      ],
      "op": "SWAP4",
      "path": "22",
      "statement": 56
    },
    "2746": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5779,
        5782
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2747": {
      "fn": "BufferChainlink.writeUint8",
      "offset": [
        5148,
        5787
      ],
      "op": "SWAP4",
      "path": "22"
    },
    "2748": {
      "op": "POP"
    },
    "2749": {
      "op": "POP"
    },
    "2750": {
      "op": "POP"
    },
    "2751": {
      "op": "POP"
    },
    "2752": {
      "fn": "BufferChainlink.writeUint8",
      "jump": "o",
      "offset": [
        5148,
        5787
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2753": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8974,
        9649
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2756": {
      "op": "DUP1"
    },
    "2757": {
      "op": "MLOAD"
    },
    "2758": {
      "op": "DUP1"
    },
    "2759": {
      "op": "DUP3"
    },
    "2760": {
      "op": "ADD"
    },
    "2761": {
      "op": "SWAP1"
    },
    "2762": {
      "op": "SWAP2"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2766": {
      "op": "DUP2"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2772": {
      "op": "DUP3"
    },
    "2773": {
      "op": "ADD"
    },
    "2774": {
      "op": "MSTORE"
    },
    "2775": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x20"
    },
    "2777": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2778": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "ADD",
      "path": "22"
    },
    "2779": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9130,
        9142
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2780": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAE5"
    },
    "2783": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9124,
        9127
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2784": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9121
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2785": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2788": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9118,
        9127
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2789": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9127
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2790": {
      "branch": 67,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9118,
        9142
      ],
      "op": "GT",
      "path": "22"
    },
    "2791": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2792": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xAF9"
    },
    "2795": {
      "branch": 67,
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9114,
        9187
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2796": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9152,
        9180
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 57,
      "value": "0xAF9"
    },
    "2799": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9159,
        9162
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2800": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9174
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x9C4"
    },
    "2803": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9171,
        9174
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2804": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9168
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2805": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9165,
        9174
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBFA"
    },
    "2808": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9165,
        9174
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2809": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9152,
        9180
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2810": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9205
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2812": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9221,
        9222
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x1"
    },
    "2814": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB09"
    },
    "2817": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9214,
        9217
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2818": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9212
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x100"
    },
    "2821": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xE74"
    },
    "2824": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9209,
        9217
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2825": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9209,
        9217
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2826": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB13"
    },
    "2829": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "SWAP2",
      "path": "22"
    },
    "2830": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2831": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xBE3"
    },
    "2834": {
      "fn": "BufferChainlink.writeInt",
      "jump": "i",
      "offset": [
        9208,
        9222
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2835": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9208,
        9222
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2836": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9222
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2837": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9193,
        9222
      ],
      "op": "POP",
      "path": "22"
    },
    "2838": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9308,
        9311
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2839": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9302,
        9312
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2840": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9423,
        9426
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2841": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9417,
        9420
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2842": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9409,
        9415
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2843": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9405,
        9421
      ],
      "op": "ADD",
      "path": "22"
    },
    "2844": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9401,
        9427
      ],
      "op": "ADD",
      "path": "22"
    },
    "2845": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9479,
        9483
      ],
      "op": "DUP6",
      "path": "22"
    },
    "2846": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9471,
        9475
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2847": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9467,
        9476
      ],
      "op": "NOT",
      "path": "22"
    },
    "2848": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9460,
        9464
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2849": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9454,
        9465
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2850": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9450,
        9477
      ],
      "op": "AND",
      "path": "22"
    },
    "2851": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9447,
        9484
      ],
      "op": "OR",
      "path": "22"
    },
    "2852": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9441,
        9445
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2853": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9434,
        9485
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2854": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9434,
        9485
      ],
      "op": "POP",
      "path": "22"
    },
    "2855": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9567,
        9573
      ],
      "op": "DUP1",
      "path": "22"
    },
    "2856": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9561,
        9574
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2857": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9555,
        9558
      ],
      "op": "DUP5",
      "path": "22"
    },
    "2858": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9550,
        9553
      ],
      "op": "DUP8",
      "path": "22"
    },
    "2859": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9546,
        9559
      ],
      "op": "ADD",
      "path": "22"
    },
    "2860": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9543,
        9575
      ],
      "op": "GT",
      "path": "22"
    },
    "2861": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2862": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB37"
    },
    "2865": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2866": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9610,
        9613
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2867": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9605,
        9608
      ],
      "op": "DUP7",
      "path": "22"
    },
    "2868": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9601,
        9614
      ],
      "op": "ADD",
      "path": "22"
    },
    "2869": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9593,
        9599
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2870": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9586,
        9615
      ],
      "op": "MSTORE",
      "path": "22"
    },
    "2871": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9540,
        9623
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2872": {
      "op": "POP"
    },
    "2873": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9641,
        9644
      ],
      "op": "SWAP5",
      "path": "22",
      "statement": 58
    },
    "2874": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        9641,
        9644
      ],
      "op": "SWAP6",
      "path": "22"
    },
    "2875": {
      "fn": "BufferChainlink.writeInt",
      "offset": [
        8974,
        9649
      ],
      "op": "SWAP5",
      "path": "22"
    },
    "2876": {
      "op": "POP"
    },
    "2877": {
      "op": "POP"
    },
    "2878": {
      "op": "POP"
    },
    "2879": {
      "op": "POP"
    },
    "2880": {
      "op": "POP"
    },
    "2881": {
      "fn": "BufferChainlink.writeInt",
      "jump": "o",
      "offset": [
        8974,
        9649
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2882": {
      "fn": "BufferChainlink.max",
      "offset": [
        1961,
        2085
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2883": {
      "fn": "BufferChainlink.max",
      "offset": [
        2018,
        2025
      ],
      "op": "PUSH1",
      "path": "22",
      "value": "0x0"
    },
    "2885": {
      "fn": "BufferChainlink.max",
      "offset": [
        2041,
        2042
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2886": {
      "fn": "BufferChainlink.max",
      "offset": [
        2037,
        2038
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2887": {
      "branch": 68,
      "fn": "BufferChainlink.max",
      "offset": [
        2037,
        2042
      ],
      "op": "GT",
      "path": "22"
    },
    "2888": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "ISZERO",
      "path": "22"
    },
    "2889": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0xB53"
    },
    "2892": {
      "branch": 68,
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "JUMPI",
      "path": "22"
    },
    "2893": {
      "op": "POP"
    },
    "2894": {
      "fn": "BufferChainlink.max",
      "offset": [
        2059,
        2060
      ],
      "op": "DUP2",
      "path": "22",
      "statement": 59
    },
    "2895": {
      "fn": "BufferChainlink.max",
      "offset": [
        2052,
        2060
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x776"
    },
    "2898": {
      "fn": "BufferChainlink.max",
      "offset": [
        2052,
        2060
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2899": {
      "fn": "BufferChainlink.max",
      "offset": [
        2033,
        2067
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2900": {
      "op": "POP"
    },
    "2901": {
      "fn": "BufferChainlink.max",
      "offset": [
        2079,
        2080
      ],
      "op": "SWAP2",
      "path": "22",
      "statement": 60
    },
    "2902": {
      "fn": "BufferChainlink.max",
      "offset": [
        1961,
        2085
      ],
      "op": "SWAP1",
      "path": "22"
    },
    "2903": {
      "op": "POP"
    },
    "2904": {
      "fn": "BufferChainlink.max",
      "jump": "o",
      "offset": [
        1961,
        2085
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2905": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1801,
        1957
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2906": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1902
      ],
      "op": "DUP2",
      "path": "22"
    },
    "2907": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1902
      ],
      "op": "MLOAD",
      "path": "22"
    },
    "2908": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 61,
      "value": "0xB65"
    },
    "2911": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1895,
        1898
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2912": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1918,
        1926
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2913": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1912
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x711"
    },
    "2916": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2917": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "JUMPDEST",
      "path": "22"
    },
    "2918": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1908,
        1927
      ],
      "op": "POP",
      "path": "22"
    },
    "2919": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1933,
        1952
      ],
      "op": "PUSH2",
      "path": "22",
      "statement": 62,
      "value": "0x7A1"
    },
    "2922": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1940,
        1943
      ],
      "op": "DUP4",
      "path": "22"
    },
    "2923": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1945,
        1951
      ],
      "op": "DUP3",
      "path": "22"
    },
    "2924": {
      "fn": "BufferChainlink.resize",
      "offset": [
        1933,
        1939
      ],
      "op": "PUSH2",
      "path": "22",
      "value": "0x891"
    },
    "2927": {
      "fn": "BufferChainlink.resize",
      "jump": "i",
      "offset": [
        1933,
        1952
      ],
      "op": "JUMP",
      "path": "22"
    },
    "2928": {
      "op": "JUMPDEST"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2931": {
      "op": "DUP1"
    },
    "2932": {
      "op": "MLOAD"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "DUP2"
    },
    "2936": {
      "op": "ADD"
    },
    "2937": {
      "op": "DUP3"
    },
    "2938": {
      "op": "MSTORE"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2941": {
      "op": "DUP1"
    },
    "2942": {
      "op": "DUP3"
    },
    "2943": {
      "op": "MSTORE"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2946": {
      "op": "DUP1"
    },
    "2947": {
      "op": "DUP4"
    },
    "2948": {
      "op": "ADD"
    },
    "2949": {
      "op": "DUP3"
    },
    "2950": {
      "op": "SWAP1"
    },
    "2951": {
      "op": "MSTORE"
    },
    "2952": {
      "op": "DUP3"
    },
    "2953": {
      "op": "DUP5"
    },
    "2954": {
      "op": "ADD"
    },
    "2955": {
      "op": "DUP3"
    },
    "2956": {
      "op": "SWAP1"
    },
    "2957": {
      "op": "MSTORE"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2960": {
      "op": "DUP1"
    },
    "2961": {
      "op": "DUP5"
    },
    "2962": {
      "op": "ADD"
    },
    "2963": {
      "op": "DUP4"
    },
    "2964": {
      "op": "SWAP1"
    },
    "2965": {
      "op": "MSTORE"
    },
    "2966": {
      "op": "DUP5"
    },
    "2967": {
      "op": "MLOAD"
    },
    "2968": {
      "op": "DUP1"
    },
    "2969": {
      "op": "DUP7"
    },
    "2970": {
      "op": "ADD"
    },
    "2971": {
      "op": "SWAP1"
    },
    "2972": {
      "op": "SWAP6"
    },
    "2973": {
      "op": "MSTORE"
    },
    "2974": {
      "op": "DUP5"
    },
    "2975": {
      "op": "MSTORE"
    },
    "2976": {
      "op": "DUP4"
    },
    "2977": {
      "op": "ADD"
    },
    "2978": {
      "op": "MSTORE"
    },
    "2979": {
      "op": "SWAP1"
    },
    "2980": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2982": {
      "op": "DUP3"
    },
    "2983": {
      "op": "ADD"
    },
    "2984": {
      "op": "MSTORE"
    },
    "2985": {
      "op": "SWAP1"
    },
    "2986": {
      "jump": "o",
      "op": "JUMP"
    },
    "2987": {
      "op": "JUMPDEST"
    },
    "2988": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2990": {
      "op": "DUP1"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2993": {
      "op": "DUP4"
    },
    "2994": {
      "op": "DUP6"
    },
    "2995": {
      "op": "SUB"
    },
    "2996": {
      "op": "SLT"
    },
    "2997": {
      "op": "ISZERO"
    },
    "2998": {
      "op": "PUSH2",
      "value": "0xBBE"
    },
    "3001": {
      "op": "JUMPI"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3004": {
      "op": "DUP1"
    },
    "3005": {
      "op": "REVERT"
    },
    "3006": {
      "op": "JUMPDEST"
    },
    "3007": {
      "op": "POP"
    },
    "3008": {
      "op": "POP"
    },
    "3009": {
      "op": "DUP1"
    },
    "3010": {
      "op": "CALLDATALOAD"
    },
    "3011": {
      "op": "SWAP3"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3014": {
      "op": "SWAP1"
    },
    "3015": {
      "op": "SWAP2"
    },
    "3016": {
      "op": "ADD"
    },
    "3017": {
      "op": "CALLDATALOAD"
    },
    "3018": {
      "op": "SWAP2"
    },
    "3019": {
      "op": "POP"
    },
    "3020": {
      "jump": "o",
      "op": "JUMP"
    },
    "3021": {
      "op": "JUMPDEST"
    },
    "3022": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3027": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3029": {
      "op": "SHL"
    },
    "3030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3032": {
      "op": "MSTORE"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3037": {
      "op": "MSTORE"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3042": {
      "op": "REVERT"
    },
    "3043": {
      "op": "JUMPDEST"
    },
    "3044": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3046": {
      "op": "DUP3"
    },
    "3047": {
      "op": "DUP3"
    },
    "3048": {
      "op": "LT"
    },
    "3049": {
      "op": "ISZERO"
    },
    "3050": {
      "op": "PUSH2",
      "value": "0xBF5"
    },
    "3053": {
      "op": "JUMPI"
    },
    "3054": {
      "op": "PUSH2",
      "value": "0xBF5"
    },
    "3057": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3060": {
      "jump": "i",
      "op": "JUMP"
    },
    "3061": {
      "op": "JUMPDEST"
    },
    "3062": {
      "op": "POP"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "op": "SWAP1"
    },
    "3065": {
      "jump": "o",
      "op": "JUMP"
    },
    "3066": {
      "op": "JUMPDEST"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3069": {
      "op": "DUP3"
    },
    "3070": {
      "op": "NOT"
    },
    "3071": {
      "op": "DUP3"
    },
    "3072": {
      "op": "GT"
    },
    "3073": {
      "op": "ISZERO"
    },
    "3074": {
      "op": "PUSH2",
      "value": "0xC0D"
    },
    "3077": {
      "op": "JUMPI"
    },
    "3078": {
      "op": "PUSH2",
      "value": "0xC0D"
    },
    "3081": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3084": {
      "jump": "i",
      "op": "JUMP"
    },
    "3085": {
      "op": "JUMPDEST"
    },
    "3086": {
      "op": "POP"
    },
    "3087": {
      "op": "ADD"
    },
    "3088": {
      "op": "SWAP1"
    },
    "3089": {
      "jump": "o",
      "op": "JUMP"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "DUP2"
    },
    "3094": {
      "op": "MLOAD"
    },
    "3095": {
      "op": "DUP1"
    },
    "3096": {
      "op": "DUP5"
    },
    "3097": {
      "op": "MSTORE"
    },
    "3098": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3100": {
      "op": "JUMPDEST"
    },
    "3101": {
      "op": "DUP2"
    },
    "3102": {
      "op": "DUP2"
    },
    "3103": {
      "op": "LT"
    },
    "3104": {
      "op": "ISZERO"
    },
    "3105": {
      "op": "PUSH2",
      "value": "0xC38"
    },
    "3108": {
      "op": "JUMPI"
    },
    "3109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3111": {
      "op": "DUP2"
    },
    "3112": {
      "op": "DUP6"
    },
    "3113": {
      "op": "ADD"
    },
    "3114": {
      "op": "DUP2"
    },
    "3115": {
      "op": "ADD"
    },
    "3116": {
      "op": "MLOAD"
    },
    "3117": {
      "op": "DUP7"
    },
    "3118": {
      "op": "DUP4"
    },
    "3119": {
      "op": "ADD"
    },
    "3120": {
      "op": "DUP3"
    },
    "3121": {
      "op": "ADD"
    },
    "3122": {
      "op": "MSTORE"
    },
    "3123": {
      "op": "ADD"
    },
    "3124": {
      "op": "PUSH2",
      "value": "0xC1C"
    },
    "3127": {
      "op": "JUMP"
    },
    "3128": {
      "op": "JUMPDEST"
    },
    "3129": {
      "op": "DUP2"
    },
    "3130": {
      "op": "DUP2"
    },
    "3131": {
      "op": "GT"
    },
    "3132": {
      "op": "ISZERO"
    },
    "3133": {
      "op": "PUSH2",
      "value": "0xC4A"
    },
    "3136": {
      "op": "JUMPI"
    },
    "3137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3141": {
      "op": "DUP4"
    },
    "3142": {
      "op": "DUP8"
    },
    "3143": {
      "op": "ADD"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "JUMPDEST"
    },
    "3147": {
      "op": "POP"
    },
    "3148": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3150": {
      "op": "ADD"
    },
    "3151": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3153": {
      "op": "NOT"
    },
    "3154": {
      "op": "AND"
    },
    "3155": {
      "op": "SWAP3"
    },
    "3156": {
      "op": "SWAP1"
    },
    "3157": {
      "op": "SWAP3"
    },
    "3158": {
      "op": "ADD"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3161": {
      "op": "ADD"
    },
    "3162": {
      "op": "SWAP3"
    },
    "3163": {
      "op": "SWAP2"
    },
    "3164": {
      "op": "POP"
    },
    "3165": {
      "op": "POP"
    },
    "3166": {
      "jump": "o",
      "op": "JUMP"
    },
    "3167": {
      "op": "JUMPDEST"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3170": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3172": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3174": {
      "op": "SHL"
    },
    "3175": {
      "op": "SUB"
    },
    "3176": {
      "op": "DUP10"
    },
    "3177": {
      "op": "DUP2"
    },
    "3178": {
      "op": "AND"
    },
    "3179": {
      "op": "DUP3"
    },
    "3180": {
      "op": "MSTORE"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3183": {
      "op": "DUP3"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "DUP10"
    },
    "3186": {
      "op": "SWAP1"
    },
    "3187": {
      "op": "MSTORE"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3190": {
      "op": "DUP3"
    },
    "3191": {
      "op": "ADD"
    },
    "3192": {
      "op": "DUP9"
    },
    "3193": {
      "op": "SWAP1"
    },
    "3194": {
      "op": "MSTORE"
    },
    "3195": {
      "op": "DUP7"
    },
    "3196": {
      "op": "AND"
    },
    "3197": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3199": {
      "op": "DUP3"
    },
    "3200": {
      "op": "ADD"
    },
    "3201": {
      "op": "MSTORE"
    },
    "3202": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "op": "SUB"
    },
    "3210": {
      "op": "NOT"
    },
    "3211": {
      "op": "DUP6"
    },
    "3212": {
      "op": "AND"
    },
    "3213": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3215": {
      "op": "DUP3"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "op": "MSTORE"
    },
    "3218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3220": {
      "op": "DUP2"
    },
    "3221": {
      "op": "ADD"
    },
    "3222": {
      "op": "DUP5"
    },
    "3223": {
      "op": "SWAP1"
    },
    "3224": {
      "op": "MSTORE"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "3227": {
      "op": "DUP2"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "DUP4"
    },
    "3230": {
      "op": "SWAP1"
    },
    "3231": {
      "op": "MSTORE"
    },
    "3232": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3237": {
      "op": "DUP3"
    },
    "3238": {
      "op": "ADD"
    },
    "3239": {
      "op": "DUP2"
    },
    "3240": {
      "op": "SWAP1"
    },
    "3241": {
      "op": "MSTORE"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3244": {
      "op": "SWAP1"
    },
    "3245": {
      "op": "PUSH2",
      "value": "0xCB8"
    },
    "3248": {
      "op": "DUP4"
    },
    "3249": {
      "op": "DUP3"
    },
    "3250": {
      "op": "ADD"
    },
    "3251": {
      "op": "DUP6"
    },
    "3252": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3255": {
      "jump": "i",
      "op": "JUMP"
    },
    "3256": {
      "op": "JUMPDEST"
    },
    "3257": {
      "op": "SWAP12"
    },
    "3258": {
      "op": "SWAP11"
    },
    "3259": {
      "op": "POP"
    },
    "3260": {
      "op": "POP"
    },
    "3261": {
      "op": "POP"
    },
    "3262": {
      "op": "POP"
    },
    "3263": {
      "op": "POP"
    },
    "3264": {
      "op": "POP"
    },
    "3265": {
      "op": "POP"
    },
    "3266": {
      "op": "POP"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "jump": "o",
      "op": "JUMP"
    },
    "3271": {
      "op": "JUMPDEST"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3274": {
      "op": "DUP1"
    },
    "3275": {
      "op": "DUP4"
    },
    "3276": {
      "op": "SLT"
    },
    "3277": {
      "op": "DUP1"
    },
    "3278": {
      "op": "ISZERO"
    },
    "3279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3281": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3283": {
      "op": "SHL"
    },
    "3284": {
      "op": "DUP6"
    },
    "3285": {
      "op": "ADD"
    },
    "3286": {
      "op": "DUP5"
    },
    "3287": {
      "op": "SLT"
    },
    "3288": {
      "op": "AND"
    },
    "3289": {
      "op": "ISZERO"
    },
    "3290": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3293": {
      "op": "JUMPI"
    },
    "3294": {
      "op": "PUSH2",
      "value": "0xCE5"
    },
    "3297": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3300": {
      "jump": "i",
      "op": "JUMP"
    },
    "3301": {
      "op": "JUMPDEST"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3306": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3308": {
      "op": "SHL"
    },
    "3309": {
      "op": "SUB"
    },
    "3310": {
      "op": "DUP5"
    },
    "3311": {
      "op": "ADD"
    },
    "3312": {
      "op": "DUP4"
    },
    "3313": {
      "op": "SGT"
    },
    "3314": {
      "op": "DUP2"
    },
    "3315": {
      "op": "AND"
    },
    "3316": {
      "op": "ISZERO"
    },
    "3317": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3320": {
      "op": "JUMPI"
    },
    "3321": {
      "op": "PUSH2",
      "value": "0xD00"
    },
    "3324": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3327": {
      "jump": "i",
      "op": "JUMP"
    },
    "3328": {
      "op": "JUMPDEST"
    },
    "3329": {
      "op": "POP"
    },
    "3330": {
      "op": "POP"
    },
    "3331": {
      "op": "SUB"
    },
    "3332": {
      "op": "SWAP1"
    },
    "3333": {
      "jump": "o",
      "op": "JUMP"
    },
    "3334": {
      "op": "JUMPDEST"
    },
    "3335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3337": {
      "op": "DUP1"
    },
    "3338": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3340": {
      "op": "SHL"
    },
    "3341": {
      "op": "SUB"
    },
    "3342": {
      "op": "DUP5"
    },
    "3343": {
      "op": "AND"
    },
    "3344": {
      "op": "DUP2"
    },
    "3345": {
      "op": "MSTORE"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "MSTORE"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3354": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3356": {
      "op": "DUP3"
    },
    "3357": {
      "op": "ADD"
    },
    "3358": {
      "op": "MSTORE"
    },
    "3359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3361": {
      "op": "PUSH2",
      "value": "0x415"
    },
    "3364": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3366": {
      "op": "DUP4"
    },
    "3367": {
      "op": "ADD"
    },
    "3368": {
      "op": "DUP5"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0xC12"
    },
    "3372": {
      "jump": "i",
      "op": "JUMP"
    },
    "3373": {
      "op": "JUMPDEST"
    },
    "3374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3378": {
      "op": "DUP3"
    },
    "3379": {
      "op": "DUP5"
    },
    "3380": {
      "op": "SUB"
    },
    "3381": {
      "op": "SLT"
    },
    "3382": {
      "op": "ISZERO"
    },
    "3383": {
      "op": "PUSH2",
      "value": "0xD3F"
    },
    "3386": {
      "op": "JUMPI"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3389": {
      "op": "DUP1"
    },
    "3390": {
      "op": "REVERT"
    },
    "3391": {
      "op": "JUMPDEST"
    },
    "3392": {
      "op": "DUP2"
    },
    "3393": {
      "op": "MLOAD"
    },
    "3394": {
      "op": "DUP1"
    },
    "3395": {
      "op": "ISZERO"
    },
    "3396": {
      "op": "ISZERO"
    },
    "3397": {
      "op": "DUP2"
    },
    "3398": {
      "op": "EQ"
    },
    "3399": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "3402": {
      "op": "JUMPI"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3405": {
      "op": "DUP1"
    },
    "3406": {
      "op": "REVERT"
    },
    "3407": {
      "op": "JUMPDEST"
    },
    "3408": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3410": {
      "op": "DUP3"
    },
    "3411": {
      "op": "PUSH2",
      "value": "0xD6C"
    },
    "3414": {
      "op": "JUMPI"
    },
    "3415": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3420": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3422": {
      "op": "SHL"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3425": {
      "op": "MSTORE"
    },
    "3426": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "3428": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3430": {
      "op": "MSTORE"
    },
    "3431": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3435": {
      "op": "REVERT"
    },
    "3436": {
      "op": "JUMPDEST"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "op": "MOD"
    },
    "3439": {
      "op": "SWAP1"
    },
    "3440": {
      "jump": "o",
      "op": "JUMP"
    },
    "3441": {
      "op": "JUMPDEST"
    },
    "3442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3444": {
      "op": "DUP2"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3447": {
      "op": "NOT"
    },
    "3448": {
      "op": "DIV"
    },
    "3449": {
      "op": "DUP4"
    },
    "3450": {
      "op": "GT"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "ISZERO"
    },
    "3453": {
      "op": "ISZERO"
    },
    "3454": {
      "op": "AND"
    },
    "3455": {
      "op": "ISZERO"
    },
    "3456": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3459": {
      "op": "JUMPI"
    },
    "3460": {
      "op": "PUSH2",
      "value": "0xD8B"
    },
    "3463": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3466": {
      "jump": "i",
      "op": "JUMP"
    },
    "3467": {
      "op": "JUMPDEST"
    },
    "3468": {
      "op": "POP"
    },
    "3469": {
      "op": "MUL"
    },
    "3470": {
      "op": "SWAP1"
    },
    "3471": {
      "jump": "o",
      "op": "JUMP"
    },
    "3472": {
      "op": "JUMPDEST"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "DUP2"
    },
    "3476": {
      "op": "DUP2"
    },
    "3477": {
      "op": "JUMPDEST"
    },
    "3478": {
      "op": "DUP1"
    },
    "3479": {
      "op": "DUP6"
    },
    "3480": {
      "op": "GT"
    },
    "3481": {
      "op": "ISZERO"
    },
    "3482": {
      "op": "PUSH2",
      "value": "0xDCB"
    },
    "3485": {
      "op": "JUMPI"
    },
    "3486": {
      "op": "DUP2"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3489": {
      "op": "NOT"
    },
    "3490": {
      "op": "DIV"
    },
    "3491": {
      "op": "DUP3"
    },
    "3492": {
      "op": "GT"
    },
    "3493": {
      "op": "ISZERO"
    },
    "3494": {
      "op": "PUSH2",
      "value": "0xDB1"
    },
    "3497": {
      "op": "JUMPI"
    },
    "3498": {
      "op": "PUSH2",
      "value": "0xDB1"
    },
    "3501": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3504": {
      "jump": "i",
      "op": "JUMP"
    },
    "3505": {
      "op": "JUMPDEST"
    },
    "3506": {
      "op": "DUP1"
    },
    "3507": {
      "op": "DUP6"
    },
    "3508": {
      "op": "AND"
    },
    "3509": {
      "op": "ISZERO"
    },
    "3510": {
      "op": "PUSH2",
      "value": "0xDBE"
    },
    "3513": {
      "op": "JUMPI"
    },
    "3514": {
      "op": "SWAP2"
    },
    "3515": {
      "op": "DUP2"
    },
    "3516": {
      "op": "MUL"
    },
    "3517": {
      "op": "SWAP2"
    },
    "3518": {
      "op": "JUMPDEST"
    },
    "3519": {
      "op": "SWAP4"
    },
    "3520": {
      "op": "DUP5"
    },
    "3521": {
      "op": "SHR"
    },
    "3522": {
      "op": "SWAP4"
    },
    "3523": {
      "op": "SWAP1"
    },
    "3524": {
      "op": "DUP1"
    },
    "3525": {
      "op": "MUL"
    },
    "3526": {
      "op": "SWAP1"
    },
    "3527": {
      "op": "PUSH2",
      "value": "0xD95"
    },
    "3530": {
      "op": "JUMP"
    },
    "3531": {
      "op": "JUMPDEST"
    },
    "3532": {
      "op": "POP"
    },
    "3533": {
      "op": "SWAP3"
    },
    "3534": {
      "op": "POP"
    },
    "3535": {
      "op": "SWAP3"
    },
    "3536": {
      "op": "SWAP1"
    },
    "3537": {
      "op": "POP"
    },
    "3538": {
      "jump": "o",
      "op": "JUMP"
    },
    "3539": {
      "op": "JUMPDEST"
    },
    "3540": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3542": {
      "op": "DUP3"
    },
    "3543": {
      "op": "PUSH2",
      "value": "0xDE2"
    },
    "3546": {
      "op": "JUMPI"
    },
    "3547": {
      "op": "POP"
    },
    "3548": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3550": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "3553": {
      "op": "JUMP"
    },
    "3554": {
      "op": "JUMPDEST"
    },
    "3555": {
      "op": "DUP2"
    },
    "3556": {
      "op": "PUSH2",
      "value": "0xDEF"
    },
    "3559": {
      "op": "JUMPI"
    },
    "3560": {
      "op": "POP"
    },
    "3561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3563": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "3566": {
      "op": "JUMP"
    },
    "3567": {
      "op": "JUMPDEST"
    },
    "3568": {
      "op": "DUP2"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3571": {
      "op": "DUP2"
    },
    "3572": {
      "op": "EQ"
    },
    "3573": {
      "op": "PUSH2",
      "value": "0xE05"
    },
    "3576": {
      "op": "JUMPI"
    },
    "3577": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3579": {
      "op": "DUP2"
    },
    "3580": {
      "op": "EQ"
    },
    "3581": {
      "op": "PUSH2",
      "value": "0xE0F"
    },
    "3584": {
      "op": "JUMPI"
    },
    "3585": {
      "op": "PUSH2",
      "value": "0xE2B"
    },
    "3588": {
      "op": "JUMP"
    },
    "3589": {
      "op": "JUMPDEST"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3592": {
      "op": "SWAP2"
    },
    "3593": {
      "op": "POP"
    },
    "3594": {
      "op": "POP"
    },
    "3595": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "3598": {
      "op": "JUMP"
    },
    "3599": {
      "op": "JUMPDEST"
    },
    "3600": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3602": {
      "op": "DUP5"
    },
    "3603": {
      "op": "GT"
    },
    "3604": {
      "op": "ISZERO"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xE20"
    },
    "3608": {
      "op": "JUMPI"
    },
    "3609": {
      "op": "PUSH2",
      "value": "0xE20"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3615": {
      "jump": "i",
      "op": "JUMP"
    },
    "3616": {
      "op": "JUMPDEST"
    },
    "3617": {
      "op": "POP"
    },
    "3618": {
      "op": "POP"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "op": "SHL"
    },
    "3623": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "3626": {
      "op": "JUMP"
    },
    "3627": {
      "op": "JUMPDEST"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3631": {
      "op": "DUP4"
    },
    "3632": {
      "op": "LT"
    },
    "3633": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "3636": {
      "op": "DUP4"
    },
    "3637": {
      "op": "LT"
    },
    "3638": {
      "op": "AND"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "3641": {
      "op": "DUP5"
    },
    "3642": {
      "op": "LT"
    },
    "3643": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "3645": {
      "op": "DUP5"
    },
    "3646": {
      "op": "LT"
    },
    "3647": {
      "op": "AND"
    },
    "3648": {
      "op": "OR"
    },
    "3649": {
      "op": "ISZERO"
    },
    "3650": {
      "op": "PUSH2",
      "value": "0xE4E"
    },
    "3653": {
      "op": "JUMPI"
    },
    "3654": {
      "op": "POP"
    },
    "3655": {
      "op": "DUP2"
    },
    "3656": {
      "op": "DUP2"
    },
    "3657": {
      "op": "EXP"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0x776"
    },
    "3661": {
      "op": "JUMP"
    },
    "3662": {
      "op": "JUMPDEST"
    },
    "3663": {
      "op": "PUSH2",
      "value": "0xE58"
    },
    "3666": {
      "op": "DUP4"
    },
    "3667": {
      "op": "DUP4"
    },
    "3668": {
      "op": "PUSH2",
      "value": "0xD90"
    },
    "3671": {
      "jump": "i",
      "op": "JUMP"
    },
    "3672": {
      "op": "JUMPDEST"
    },
    "3673": {
      "op": "DUP1"
    },
    "3674": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3676": {
      "op": "NOT"
    },
    "3677": {
      "op": "DIV"
    },
    "3678": {
      "op": "DUP3"
    },
    "3679": {
      "op": "GT"
    },
    "3680": {
      "op": "ISZERO"
    },
    "3681": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3684": {
      "op": "JUMPI"
    },
    "3685": {
      "op": "PUSH2",
      "value": "0xE6C"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xBCD"
    },
    "3691": {
      "jump": "i",
      "op": "JUMP"
    },
    "3692": {
      "op": "JUMPDEST"
    },
    "3693": {
      "op": "MUL"
    },
    "3694": {
      "op": "SWAP4"
    },
    "3695": {
      "op": "SWAP3"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "op": "POP"
    },
    "3699": {
      "jump": "o",
      "op": "JUMP"
    },
    "3700": {
      "op": "JUMPDEST"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0x8B8"
    },
    "3706": {
      "op": "DUP4"
    },
    "3707": {
      "op": "DUP4"
    },
    "3708": {
      "op": "PUSH2",
      "value": "0xDD3"
    },
    "3711": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "18b60459bc9519da3f79074a1d4de764804de86f",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity ^0.8.1;\n\nimport \"@chainlink/contracts/src/v0.8/ChainlinkClient.sol\";\nimport \"./AdvancedCollectible.sol\";\nimport \"./Our_ERC20.sol\";\n\ncontract Client is ChainlinkClient {\n    using Chainlink for Chainlink.Request;\n\n    address private oracle;\n    bytes32 private jobId;\n    uint256 private fee;\n    uint256 public volume;\n    address payable public nft_contract;\n    address public drex_token_contract;\n    uint256 public curr_volume;\n\n    //events\n    event TOKEN_TRANSFER(uint256 transferd_amout);\n\n    /**\n    This example uses the LINK token address on Moonbase Alpha.\n    Make sure to update the oracle and jobId.\n    */\n    constructor(address payable nft_address, address erc20_address) {\n        setChainlinkToken(address(0xa36085F69e2889c224210F603D836748e7dC0088));\n        oracle = 0xD4D9ac4ecF5dDf18056ce6A91d0a8E7B0c910ccE;\n        jobId = \"79abc1e36be340a697e2b49dd2d86798\";\n        fee = 0;\n        nft_contract = nft_address;\n        drex_token_contract = erc20_address;\n        curr_volume = 0;\n    }\n\n    /**\n     * Create a Chainlink request to retrieve API response, find the target\n     * data, then multiply by 1000000000000000000 (to remove decimal places from data).\n     */\n\n    /// @notice This functions sends requests on the end point and calls the fulfill function to update the volume\n    /// @return requestId\n    function request_sensor_data() public returns (bytes32 requestId) {\n        Chainlink.Request memory request = buildChainlinkRequest(\n            jobId,\n            address(this),\n            this.fulfill.selector\n        );\n\n        // Set the URL to perform the GET request on\n        request.add(\n            \"get\",\n            \"http://drexall-env.eba-e3mnnm69.us-east-1.elasticbeanstalk.com/grid/last?code=drex_pilot\"\n        );\n\n        // Set the path to find the desired data in the API response, where the response format is:\n\n        request.add(\"path\", \"energy-accumulated\");\n\n        // Multiply the result by 1000000000000000000 to remove decimals\n        int256 timesAmount = 10**18;\n        request.addInt(\"times\", timesAmount);\n\n        // Sends the request\n        return sendChainlinkRequestTo(oracle, request, fee);\n    }\n\n    /**\n     * Receive the response in the form of uint256\n     */\n    function fulfill(bytes32 _requestId, uint256 _volume)\n        public\n        recordChainlinkFulfillment(_requestId)\n    {\n        volume = _volume;\n    }\n\n    ///@notice This function makes intercontract calls and transfers the erc20 tokens to nft contract and updates the balance for each nft holder\n\n    function token_transfer() public {\n        uint256 amt_generated = volume - curr_volume;\n        curr_volume = volume;\n        Nft_interface nfti = Nft_interface(nft_contract);\n        drex_token_interface erc20 = drex_token_interface(drex_token_contract);\n        erc20.tranferingfunds(nft_contract, amt_generated);\n        nfti.update_nft_balance(amt_generated);\n        emit TOKEN_TRANSFER(amt_generated);\n    }\n}\n",
  "sourceMap": "185:2845:26:-:0;;;1291:1:15;1258:34;;681:387:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8688:6:15;:40;;-1:-1:-1;;;;;;8688:40:15;781:42:26;8688:40:15;;;835:6:26;:51;;844:42;-1:-1:-1;;;;;;835:51:26;;;;;;;896:42;:5;:42;-1:-1:-1;948:3:26;:7;;;965:12;:26;;;;-1:-1:-1;;;;;965:26:26;;;;;;1001:19;:35;;;;;;;;;;;;;;;1046:11;:15;185:2845;;14:139:28;-1:-1:-1;;;;;97:31:28;;87:42;;77:70;;143:1;140;133:12;77:70;14:139;:::o;158:409::-;245:6;253;306:2;294:9;285:7;281:23;277:32;274:52;;;322:1;319;312:12;274:52;354:9;348:16;373:39;406:5;373:39;:::i;:::-;481:2;466:18;;460:25;431:5;;-1:-1:-1;494:41:28;460:25;494:41;:::i;:::-;554:7;544:17;;;158:409;;;;;:::o;:::-;185:2845:26;;;;;;",
  "sourcePath": "contracts/DrexApi.sol",
  "type": "contract"
}