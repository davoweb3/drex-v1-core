{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Strings.sol",
    "11": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
    "12": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/IERC165.sol",
    "13": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/math/Math.sol",
    "3": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/ERC721.sol",
    "4": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721.sol",
    "5": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721Receiver.sol",
    "7": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "8": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
    "9": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/ERC721.sol",
    "exportedSymbols": {
      "Address": [
        4215
      ],
      "Context": [
        4237
      ],
      "ERC165": [
        4436
      ],
      "ERC721": [
        2562
      ],
      "IERC165": [
        5481
      ],
      "IERC721": [
        3840
      ],
      "IERC721Metadata": [
        3885
      ],
      "IERC721Receiver": [
        3858
      ],
      "Math": [
        6346
      ],
      "Strings": [
        4412
      ]
    },
    "id": 2563,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1619,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "107:23:3"
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721.sol",
        "file": "./IERC721.sol",
        "id": 1620,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 3841,
        "src": "132:23:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "./IERC721Receiver.sol",
        "id": 1621,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 3859,
        "src": "156:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
        "file": "./extensions/IERC721Metadata.sol",
        "id": 1622,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 3886,
        "src": "188:42:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Address.sol",
        "file": "../../utils/Address.sol",
        "id": 1623,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 4216,
        "src": "231:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Context.sol",
        "file": "../../utils/Context.sol",
        "id": 1624,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 4238,
        "src": "265:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/Strings.sol",
        "file": "../../utils/Strings.sol",
        "id": 1625,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 4413,
        "src": "299:33:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/utils/introspection/ERC165.sol",
        "file": "../../utils/introspection/ERC165.sol",
        "id": 1626,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2563,
        "sourceUnit": 4437,
        "src": "333:46:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1628,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4237,
              "src": "647:7:3"
            },
            "id": 1629,
            "nodeType": "InheritanceSpecifier",
            "src": "647:7:3"
          },
          {
            "baseName": {
              "id": 1630,
              "name": "ERC165",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4436,
              "src": "656:6:3"
            },
            "id": 1631,
            "nodeType": "InheritanceSpecifier",
            "src": "656:6:3"
          },
          {
            "baseName": {
              "id": 1632,
              "name": "IERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3840,
              "src": "664:7:3"
            },
            "id": 1633,
            "nodeType": "InheritanceSpecifier",
            "src": "664:7:3"
          },
          {
            "baseName": {
              "id": 1634,
              "name": "IERC721Metadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3885,
              "src": "673:15:3"
            },
            "id": 1635,
            "nodeType": "InheritanceSpecifier",
            "src": "673:15:3"
          }
        ],
        "canonicalName": "ERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1627,
          "nodeType": "StructuredDocumentation",
          "src": "381:246:3",
          "text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
        },
        "fullyImplemented": true,
        "id": 2562,
        "linearizedBaseContracts": [
          2562,
          3885,
          3840,
          4436,
          5481,
          4237
        ],
        "name": "ERC721",
        "nameLocation": "637:6:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1638,
            "libraryName": {
              "id": 1636,
              "name": "Address",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4215,
              "src": "701:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "695:26:3",
            "typeName": {
              "id": 1637,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "713:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "global": false,
            "id": 1641,
            "libraryName": {
              "id": 1639,
              "name": "Strings",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4412,
              "src": "732:7:3"
            },
            "nodeType": "UsingForDirective",
            "src": "726:26:3",
            "typeName": {
              "id": 1640,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "744:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1643,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "791:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "776:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1642,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "776:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1645,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "838:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "823:22:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1644,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "823:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1649,
            "mutability": "mutable",
            "name": "_owners",
            "nameLocation": "934:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "898:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1648,
              "keyType": {
                "id": 1646,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "906:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "898:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1647,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "917:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1653,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1028:9:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "992:45:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 1652,
              "keyType": {
                "id": 1650,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1000:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "992:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 1651,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1011:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1657,
            "mutability": "mutable",
            "name": "_tokenApprovals",
            "nameLocation": "1129:15:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "1093:51:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1656,
              "keyType": {
                "id": 1654,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1101:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1093:27:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1655,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1112:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 1663,
            "mutability": "mutable",
            "name": "_operatorApprovals",
            "nameLocation": "1252:18:3",
            "nodeType": "VariableDeclaration",
            "scope": 2562,
            "src": "1199:71:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 1662,
              "keyType": {
                "id": 1658,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1207:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1199:44:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 1661,
                "keyType": {
                  "id": 1659,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1226:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1218:24:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 1660,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1237:4:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 1679,
              "nodeType": "Block",
              "src": "1446:57:3",
              "statements": [
                {
                  "expression": {
                    "id": 1673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1671,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1643,
                      "src": "1456:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1672,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1666,
                      "src": "1464:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1456:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1674,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:13:3"
                },
                {
                  "expression": {
                    "id": 1677,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1675,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1645,
                      "src": "1479:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1676,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1668,
                      "src": "1489:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1479:17:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1678,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:17:3"
                }
              ]
            },
            "documentation": {
              "id": 1664,
              "nodeType": "StructuredDocumentation",
              "src": "1277:108:3",
              "text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
            },
            "id": 1680,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "1416:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1680,
                  "src": "1402:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1402:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1668,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "1437:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1680,
                  "src": "1423:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1667,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1401:44:3"
            },
            "returnParameters": {
              "id": 1670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:3"
            },
            "scope": 2562,
            "src": "1390:113:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              4435,
              5480
            ],
            "body": {
              "id": 1710,
              "nodeType": "Block",
              "src": "1678:192:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1691,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "1707:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1693,
                                "name": "IERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3840,
                                "src": "1727:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3840_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721_$3840_$",
                                  "typeString": "type(contract IERC721)"
                                }
                              ],
                              "id": 1692,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1722:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1694,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1722:13:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$3840",
                              "typeString": "type(contract IERC721)"
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1722:25:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1707:40:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 1702,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1697,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "1763:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1699,
                                "name": "IERC721Metadata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3885,
                                "src": "1783:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3885_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$3885_$",
                                  "typeString": "type(contract IERC721Metadata)"
                                }
                              ],
                              "id": 1698,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1778:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1700,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1778:21:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$3885",
                              "typeString": "type(contract IERC721Metadata)"
                            }
                          },
                          "id": 1701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "1778:33:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "src": "1763:48:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "1707:104:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1706,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1683,
                          "src": "1851:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 1704,
                          "name": "super",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -25,
                          "src": "1827:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_super$_ERC721_$2562_$",
                            "typeString": "type(contract super ERC721)"
                          }
                        },
                        "id": 1705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 4435,
                        "src": "1827:23:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (bytes4) view returns (bool)"
                        }
                      },
                      "id": 1707,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1827:36:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1707:156:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1690,
                  "id": 1709,
                  "nodeType": "Return",
                  "src": "1688:175:3"
                }
              ]
            },
            "documentation": {
              "id": 1681,
              "nodeType": "StructuredDocumentation",
              "src": "1509:56:3",
              "text": " @dev See {IERC165-supportsInterface}."
            },
            "functionSelector": "01ffc9a7",
            "id": 1711,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1579:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1687,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 1685,
                  "name": "ERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4436,
                  "src": "1646:6:3"
                },
                {
                  "id": 1686,
                  "name": "IERC165",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5481,
                  "src": "1654:7:3"
                }
              ],
              "src": "1637:25:3"
            },
            "parameters": {
              "id": 1684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1683,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "1604:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "1597:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1682,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1597:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1596:20:3"
            },
            "returnParameters": {
              "id": 1690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1689,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1711,
                  "src": "1672:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1688,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1672:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:6:3"
            },
            "scope": 2562,
            "src": "1570:300:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3765
            ],
            "body": {
              "id": 1734,
              "nodeType": "Block",
              "src": "2010:123:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1721,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1714,
                          "src": "2028:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2045:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2037:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2037:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2037:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2028:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
                        "id": 1727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2049:43:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        },
                        "value": "ERC721: address zero is not a valid owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
                          "typeString": "literal_string \"ERC721: address zero is not a valid owner\""
                        }
                      ],
                      "id": 1720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2020:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2020:73:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1729,
                  "nodeType": "ExpressionStatement",
                  "src": "2020:73:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1730,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1653,
                      "src": "2110:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1732,
                    "indexExpression": {
                      "id": 1731,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1714,
                      "src": "2120:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2110:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1719,
                  "id": 1733,
                  "nodeType": "Return",
                  "src": "2103:23:3"
                }
              ]
            },
            "documentation": {
              "id": 1712,
              "nodeType": "StructuredDocumentation",
              "src": "1876:48:3",
              "text": " @dev See {IERC721-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 1735,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1938:9:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1716,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1983:8:3"
            },
            "parameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1714,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1956:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1735,
                  "src": "1948:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1713,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:15:3"
            },
            "returnParameters": {
              "id": 1719,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1718,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1735,
                  "src": "2001:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1717,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2001:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2000:9:3"
            },
            "scope": 2562,
            "src": "1929:204:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3773
            ],
            "body": {
              "id": 1762,
              "nodeType": "Block",
              "src": "2271:138:3",
              "statements": [
                {
                  "assignments": [
                    1745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1745,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "2289:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1762,
                      "src": "2281:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1744,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2281:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1749,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1747,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1738,
                        "src": "2306:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1746,
                      "name": "_ownerOf",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2045,
                      "src": "2297:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2297:17:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2281:33:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1751,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1745,
                          "src": "2332:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2349:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1753,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2341:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1752,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2341:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2341:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2332:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 1757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2353:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 1750,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2324:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:56:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1759,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:56:3"
                },
                {
                  "expression": {
                    "id": 1760,
                    "name": "owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1745,
                    "src": "2397:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1743,
                  "id": 1761,
                  "nodeType": "Return",
                  "src": "2390:12:3"
                }
              ]
            },
            "documentation": {
              "id": 1736,
              "nodeType": "StructuredDocumentation",
              "src": "2139:46:3",
              "text": " @dev See {IERC721-ownerOf}."
            },
            "functionSelector": "6352211e",
            "id": 1763,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "2199:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1740,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2244:8:3"
            },
            "parameters": {
              "id": 1739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1738,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2215:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1763,
                  "src": "2207:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1737,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2207:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2206:17:3"
            },
            "returnParameters": {
              "id": 1743,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1742,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1763,
                  "src": "2262:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1741,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2262:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2261:9:3"
            },
            "scope": 2562,
            "src": "2190:219:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3870
            ],
            "body": {
              "id": 1772,
              "nodeType": "Block",
              "src": "2540:29:3",
              "statements": [
                {
                  "expression": {
                    "id": 1770,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1643,
                    "src": "2557:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1769,
                  "id": 1771,
                  "nodeType": "Return",
                  "src": "2550:12:3"
                }
              ]
            },
            "documentation": {
              "id": 1764,
              "nodeType": "StructuredDocumentation",
              "src": "2415:51:3",
              "text": " @dev See {IERC721Metadata-name}."
            },
            "functionSelector": "06fdde03",
            "id": 1773,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2480:4:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1766,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2507:8:3"
            },
            "parameters": {
              "id": 1765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2484:2:3"
            },
            "returnParameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1768,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1773,
                  "src": "2525:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2524:15:3"
            },
            "scope": 2562,
            "src": "2471:98:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3876
            ],
            "body": {
              "id": 1782,
              "nodeType": "Block",
              "src": "2704:31:3",
              "statements": [
                {
                  "expression": {
                    "id": 1780,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1645,
                    "src": "2721:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 1779,
                  "id": 1781,
                  "nodeType": "Return",
                  "src": "2714:14:3"
                }
              ]
            },
            "documentation": {
              "id": 1774,
              "nodeType": "StructuredDocumentation",
              "src": "2575:53:3",
              "text": " @dev See {IERC721Metadata-symbol}."
            },
            "functionSelector": "95d89b41",
            "id": 1783,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2642:6:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1776,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2671:8:3"
            },
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2648:2:3"
            },
            "returnParameters": {
              "id": 1779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1783,
                  "src": "2689:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1777,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2689:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2688:15:3"
            },
            "scope": 2562,
            "src": "2633:102:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3884
            ],
            "body": {
              "id": 1821,
              "nodeType": "Block",
              "src": "2889:188:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1793,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1786,
                        "src": "2914:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1792,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "2899:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2899:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1795,
                  "nodeType": "ExpressionStatement",
                  "src": "2899:23:3"
                },
                {
                  "assignments": [
                    1797
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1797,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2947:7:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1821,
                      "src": "2933:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1796,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2933:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1800,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1798,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1831,
                      "src": "2957:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 1799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2957:10:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2933:34:3"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1803,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1797,
                              "src": "2990:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2984:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 1801,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2984:5:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:14:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 1805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2984:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3008:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2984:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 1818,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3068:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 1819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2984:86:3",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 1812,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1797,
                              "src": "3036:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 1813,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1786,
                                  "src": "3045:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "toString",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 4295,
                                "src": "3045:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$bound_to$_t_uint256_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 1815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3045:18:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 1810,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "3019:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1811,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "3019:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 1816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:45:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 1809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3012:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 1808,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3012:6:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1817,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3012:53:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 1791,
                  "id": 1820,
                  "nodeType": "Return",
                  "src": "2977:93:3"
                }
              ]
            },
            "documentation": {
              "id": 1784,
              "nodeType": "StructuredDocumentation",
              "src": "2741:55:3",
              "text": " @dev See {IERC721Metadata-tokenURI}."
            },
            "functionSelector": "c87b56dd",
            "id": 1822,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2810:8:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1788,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2856:8:3"
            },
            "parameters": {
              "id": 1787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1786,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2827:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "2819:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1785,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2819:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2818:17:3"
            },
            "returnParameters": {
              "id": 1791,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1790,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1822,
                  "src": "2874:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1789,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2874:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2873:15:3"
            },
            "scope": 2562,
            "src": "2801:276:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1830,
              "nodeType": "Block",
              "src": "3385:26:3",
              "statements": [
                {
                  "expression": {
                    "hexValue": "",
                    "id": 1828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3402:2:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "functionReturnParameters": 1827,
                  "id": 1829,
                  "nodeType": "Return",
                  "src": "3395:9:3"
                }
              ]
            },
            "documentation": {
              "id": 1823,
              "nodeType": "StructuredDocumentation",
              "src": "3083:231:3",
              "text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
            },
            "id": 1831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "3328:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3336:2:3"
            },
            "returnParameters": {
              "id": 1827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1826,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1831,
                  "src": "3370:13:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3369:15:3"
            },
            "scope": 2562,
            "src": "3319:92:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              3813
            ],
            "body": {
              "id": 1873,
              "nodeType": "Block",
              "src": "3538:336:3",
              "statements": [
                {
                  "assignments": [
                    1841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1841,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "3556:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1873,
                      "src": "3548:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1840,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3548:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1846,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1844,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "3579:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1842,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "3564:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 1843,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1763,
                      "src": "3564:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 1845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3564:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3548:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1848,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1834,
                          "src": "3605:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1849,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1841,
                          "src": "3611:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3605:11:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
                        "id": 1851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3618:35:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        },
                        "value": "ERC721: approval to current owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
                          "typeString": "literal_string \"ERC721: approval to current owner\""
                        }
                      ],
                      "id": 1847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3597:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3597:57:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1853,
                  "nodeType": "ExpressionStatement",
                  "src": "3597:57:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1855,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4227,
                              "src": "3686:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3686:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1857,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1841,
                            "src": "3702:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3686:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 1860,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1841,
                              "src": "3728:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1861,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4227,
                                "src": "3735:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1862,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3735:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1859,
                            "name": "isApprovedForAll",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1927,
                            "src": "3711:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 1863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3711:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3686:62:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
                        "id": 1865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3762:63:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        },
                        "value": "ERC721: approve caller is not token owner or approved for all"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
                          "typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
                        }
                      ],
                      "id": 1854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3665:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3665:170:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1867,
                  "nodeType": "ExpressionStatement",
                  "src": "3665:170:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1869,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1834,
                        "src": "3855:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1870,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1836,
                        "src": "3859:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1868,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2394,
                      "src": "3846:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3846:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1872,
                  "nodeType": "ExpressionStatement",
                  "src": "3846:21:3"
                }
              ]
            },
            "documentation": {
              "id": 1832,
              "nodeType": "StructuredDocumentation",
              "src": "3417:46:3",
              "text": " @dev See {IERC721-approve}."
            },
            "functionSelector": "095ea7b3",
            "id": 1874,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "3477:7:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1838,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3529:8:3"
            },
            "parameters": {
              "id": 1837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1834,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3493:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1874,
                  "src": "3485:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1833,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3485:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1836,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3505:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1874,
                  "src": "3497:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3497:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3484:29:3"
            },
            "returnParameters": {
              "id": 1839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3538:0:3"
            },
            "scope": 2562,
            "src": "3468:406:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3829
            ],
            "body": {
              "id": 1891,
              "nodeType": "Block",
              "src": "4020:82:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1884,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1877,
                        "src": "4045:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1883,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2440,
                      "src": "4030:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4030:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "4030:23:3"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "id": 1887,
                      "name": "_tokenApprovals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1657,
                      "src": "4071:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 1889,
                    "indexExpression": {
                      "id": 1888,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1877,
                      "src": "4087:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4071:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 1882,
                  "id": 1890,
                  "nodeType": "Return",
                  "src": "4064:31:3"
                }
              ]
            },
            "documentation": {
              "id": 1875,
              "nodeType": "StructuredDocumentation",
              "src": "3880:50:3",
              "text": " @dev See {IERC721-getApproved}."
            },
            "functionSelector": "081812fc",
            "id": 1892,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getApproved",
            "nameLocation": "3944:11:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1879,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3993:8:3"
            },
            "parameters": {
              "id": 1878,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1877,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "3964:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "3956:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1876,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3956:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3955:17:3"
            },
            "returnParameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1892,
                  "src": "4011:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4011:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4010:9:3"
            },
            "scope": 2562,
            "src": "3935:167:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3821
            ],
            "body": {
              "id": 1908,
              "nodeType": "Block",
              "src": "4253:69:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 1902,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4227,
                          "src": "4282:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 1903,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4282:12:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1904,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1895,
                        "src": "4296:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1905,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1897,
                        "src": "4306:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1901,
                      "name": "_setApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2426,
                      "src": "4263:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 1906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:52:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1907,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:52:3"
                }
              ]
            },
            "documentation": {
              "id": 1893,
              "nodeType": "StructuredDocumentation",
              "src": "4108:56:3",
              "text": " @dev See {IERC721-setApprovalForAll}."
            },
            "functionSelector": "a22cb465",
            "id": 1909,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setApprovalForAll",
            "nameLocation": "4178:17:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1899,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4244:8:3"
            },
            "parameters": {
              "id": 1898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1895,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4204:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "4196:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4196:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1897,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "4219:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1909,
                  "src": "4214:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1896,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4214:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4195:33:3"
            },
            "returnParameters": {
              "id": 1900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4253:0:3"
            },
            "scope": 2562,
            "src": "4169:153:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3839
            ],
            "body": {
              "id": 1926,
              "nodeType": "Block",
              "src": "4491:59:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1920,
                        "name": "_operatorApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1663,
                        "src": "4508:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1922,
                      "indexExpression": {
                        "id": 1921,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "4527:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4508:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1924,
                    "indexExpression": {
                      "id": 1923,
                      "name": "operator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1914,
                      "src": "4534:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4508:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1919,
                  "id": 1925,
                  "nodeType": "Return",
                  "src": "4501:42:3"
                }
              ]
            },
            "documentation": {
              "id": 1910,
              "nodeType": "StructuredDocumentation",
              "src": "4328:55:3",
              "text": " @dev See {IERC721-isApprovedForAll}."
            },
            "functionSelector": "e985e9c5",
            "id": 1927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isApprovedForAll",
            "nameLocation": "4397:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1916,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4467:8:3"
            },
            "parameters": {
              "id": 1915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4422:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "4414:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4414:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1914,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "4437:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "4429:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4429:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4413:33:3"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1927,
                  "src": "4485:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4485:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4484:6:3"
            },
            "scope": 2562,
            "src": "4388:162:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3805
            ],
            "body": {
              "id": 1953,
              "nodeType": "Block",
              "src": "4731:207:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1940,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4227,
                              "src": "4820:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4820:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1942,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1934,
                            "src": "4834:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1939,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "4801:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4801:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 1944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 1938,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4793:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4793:99:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1946,
                  "nodeType": "ExpressionStatement",
                  "src": "4793:99:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1948,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1930,
                        "src": "4913:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1932,
                        "src": "4919:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1950,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1934,
                        "src": "4923:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1947,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "4903:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4903:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1952,
                  "nodeType": "ExpressionStatement",
                  "src": "4903:28:3"
                }
              ]
            },
            "documentation": {
              "id": 1928,
              "nodeType": "StructuredDocumentation",
              "src": "4556:51:3",
              "text": " @dev See {IERC721-transferFrom}."
            },
            "functionSelector": "23b872dd",
            "id": 1954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "4621:12:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1936,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4722:8:3"
            },
            "parameters": {
              "id": 1935,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1930,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4651:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "4643:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4643:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1932,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4673:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "4665:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4665:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1934,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4693:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "4685:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4685:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4633:73:3"
            },
            "returnParameters": {
              "id": 1937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4731:0:3"
            },
            "scope": 2562,
            "src": "4612:326:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3795
            ],
            "body": {
              "id": 1972,
              "nodeType": "Block",
              "src": "5127:56:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1966,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1957,
                        "src": "5154:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1967,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1959,
                        "src": "5160:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1968,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1961,
                        "src": "5164:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 1969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5173:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 1965,
                      "name": "safeTransferFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1973,
                        2003
                      ],
                      "referencedDeclaration": 2003,
                      "src": "5137:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 1970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5137:39:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1971,
                  "nodeType": "ExpressionStatement",
                  "src": "5137:39:3"
                }
              ]
            },
            "documentation": {
              "id": 1955,
              "nodeType": "StructuredDocumentation",
              "src": "4944:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "42842e0e",
            "id": 1973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5013:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1963,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5118:8:3"
            },
            "parameters": {
              "id": 1962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5047:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "5039:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5039:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1959,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5069:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "5061:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5061:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1961,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5089:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1973,
                  "src": "5081:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1960,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5081:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5029:73:3"
            },
            "returnParameters": {
              "id": 1964,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5127:0:3"
            },
            "scope": 2562,
            "src": "5004:179:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3785
            ],
            "body": {
              "id": 2002,
              "nodeType": "Block",
              "src": "5399:164:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1988,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4227,
                              "src": "5436:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 1989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5436:12:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1990,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1980,
                            "src": "5450:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1987,
                          "name": "_isApprovedOrOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "5417:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) view returns (bool)"
                          }
                        },
                        "id": 1991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5417:41:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
                        "id": 1992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5460:47:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        },
                        "value": "ERC721: caller is not token owner or approved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
                          "typeString": "literal_string \"ERC721: caller is not token owner or approved\""
                        }
                      ],
                      "id": 1986,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5409:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1993,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5409:99:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1994,
                  "nodeType": "ExpressionStatement",
                  "src": "5409:99:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1996,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1976,
                        "src": "5532:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1997,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1978,
                        "src": "5538:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1998,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1980,
                        "src": "5542:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1999,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1982,
                        "src": "5551:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1995,
                      "name": "_safeTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2032,
                      "src": "5518:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 2000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5518:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2001,
                  "nodeType": "ExpressionStatement",
                  "src": "5518:38:3"
                }
              ]
            },
            "documentation": {
              "id": 1974,
              "nodeType": "StructuredDocumentation",
              "src": "5189:55:3",
              "text": " @dev See {IERC721-safeTransferFrom}."
            },
            "functionSelector": "b88d4fde",
            "id": 2003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safeTransferFrom",
            "nameLocation": "5258:16:3",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1984,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5390:8:3"
            },
            "parameters": {
              "id": 1983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1976,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5292:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "5284:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5284:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1978,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5314:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "5306:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5306:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1980,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5334:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "5326:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5326:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1982,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5364:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2003,
                  "src": "5351:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1981,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5351:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5274:100:3"
            },
            "returnParameters": {
              "id": 1985,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5399:0:3"
            },
            "scope": 2562,
            "src": "5249:314:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2031,
              "nodeType": "Block",
              "src": "6564:165:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2016,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2006,
                        "src": "6584:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2017,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2008,
                        "src": "6590:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2018,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2010,
                        "src": "6594:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2015,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2370,
                      "src": "6574:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6574:28:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2020,
                  "nodeType": "ExpressionStatement",
                  "src": "6574:28:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2023,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2006,
                            "src": "6643:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2024,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2008,
                            "src": "6649:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2025,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2010,
                            "src": "6653:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2026,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2012,
                            "src": "6662:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2022,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2502,
                          "src": "6620:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2027,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6620:47:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6669:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2021,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6612:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6612:110:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2030,
                  "nodeType": "ExpressionStatement",
                  "src": "6612:110:3"
                }
              ]
            },
            "documentation": {
              "id": 2004,
              "nodeType": "StructuredDocumentation",
              "src": "5569:850:3",
              "text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2032,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeTransfer",
            "nameLocation": "6433:13:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2006,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "6464:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6456:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6456:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2008,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "6486:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6478:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6478:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2010,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6506:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6498:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6498:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2012,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "6536:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2032,
                  "src": "6523:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2011,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6523:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6446:100:3"
            },
            "returnParameters": {
              "id": 2014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6564:0:3"
            },
            "scope": 2562,
            "src": "6424:305:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2044,
              "nodeType": "Block",
              "src": "6913:40:3",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2040,
                      "name": "_owners",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1649,
                      "src": "6930:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 2042,
                    "indexExpression": {
                      "id": 2041,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2035,
                      "src": "6938:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6930:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 2039,
                  "id": 2043,
                  "nodeType": "Return",
                  "src": "6923:23:3"
                }
              ]
            },
            "documentation": {
              "id": 2033,
              "nodeType": "StructuredDocumentation",
              "src": "6735:98:3",
              "text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
            },
            "id": 2045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_ownerOf",
            "nameLocation": "6847:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2035,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6864:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "6856:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2034,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6856:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6855:17:3"
            },
            "returnParameters": {
              "id": 2039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2038,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2045,
                  "src": "6904:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6904:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6903:9:3"
            },
            "scope": 2562,
            "src": "6838:115:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2062,
              "nodeType": "Block",
              "src": "7327:55:3",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 2060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 2054,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2048,
                          "src": "7353:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2053,
                        "name": "_ownerOf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2045,
                        "src": "7344:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 2055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7344:17:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 2058,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7373:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 2057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "7365:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2056,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7365:7:3",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2059,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7365:10:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7344:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2052,
                  "id": 2061,
                  "nodeType": "Return",
                  "src": "7337:38:3"
                }
              ]
            },
            "documentation": {
              "id": 2046,
              "nodeType": "StructuredDocumentation",
              "src": "6959:292:3",
              "text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
            },
            "id": 2063,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_exists",
            "nameLocation": "7265:7:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2049,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2048,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7281:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "7273:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7273:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7272:17:3"
            },
            "returnParameters": {
              "id": 2052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2051,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2063,
                  "src": "7321:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2050,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7320:6:3"
            },
            "scope": 2562,
            "src": "7256:126:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2096,
              "nodeType": "Block",
              "src": "7639:162:3",
              "statements": [
                {
                  "assignments": [
                    2074
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2074,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "7657:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2096,
                      "src": "7649:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2073,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7649:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2079,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2077,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2068,
                        "src": "7680:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2075,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "7665:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2076,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1763,
                      "src": "7665:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7665:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7649:39:3"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 2093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 2082,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2080,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2066,
                              "src": "7706:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 2081,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2074,
                              "src": "7717:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "7706:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 2084,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2074,
                                "src": "7743:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 2085,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2066,
                                "src": "7750:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2083,
                              "name": "isApprovedForAll",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1927,
                              "src": "7726:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address,address) view returns (bool)"
                              }
                            },
                            "id": 2086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7726:32:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7706:52:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 2089,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2068,
                                "src": "7774:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 2088,
                              "name": "getApproved",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1892,
                              "src": "7762:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view returns (address)"
                              }
                            },
                            "id": 2090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7762:20:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 2091,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2066,
                            "src": "7786:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7762:31:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7706:87:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 2094,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7705:89:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 2072,
                  "id": 2095,
                  "nodeType": "Return",
                  "src": "7698:96:3"
                }
              ]
            },
            "documentation": {
              "id": 2064,
              "nodeType": "StructuredDocumentation",
              "src": "7388:147:3",
              "text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
            },
            "id": 2097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isApprovedOrOwner",
            "nameLocation": "7549:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2066,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7576:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "7568:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7568:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2068,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7593:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "7585:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7585:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7567:34:3"
            },
            "returnParameters": {
              "id": 2072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2071,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2097,
                  "src": "7633:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2070,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7633:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7632:6:3"
            },
            "scope": 2562,
            "src": "7540:261:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2111,
              "nodeType": "Block",
              "src": "8196:43:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2106,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2100,
                        "src": "8216:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2107,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2102,
                        "src": "8220:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 2108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8229:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 2105,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2112,
                        2141
                      ],
                      "referencedDeclaration": 2141,
                      "src": "8206:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory)"
                      }
                    },
                    "id": 2109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8206:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2110,
                  "nodeType": "ExpressionStatement",
                  "src": "8206:26:3"
                }
              ]
            },
            "documentation": {
              "id": 2098,
              "nodeType": "StructuredDocumentation",
              "src": "7807:319:3",
              "text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
            },
            "id": 2112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8140:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2100,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8158:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "8150:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8150:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2102,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8170:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2112,
                  "src": "8162:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8162:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8149:29:3"
            },
            "returnParameters": {
              "id": 2104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8196:0:3"
            },
            "scope": 2562,
            "src": "8131:108:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2140,
              "nodeType": "Block",
              "src": "8574:195:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2123,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2115,
                        "src": "8590:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2124,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2117,
                        "src": "8594:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2122,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2218,
                      "src": "8584:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8584:18:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2126,
                  "nodeType": "ExpressionStatement",
                  "src": "8584:18:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2131,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8664:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2130,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8656:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2129,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8656:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8656:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2133,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2115,
                            "src": "8668:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2134,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2117,
                            "src": "8672:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 2135,
                            "name": "data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2119,
                            "src": "8681:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 2128,
                          "name": "_checkOnERC721Received",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2502,
                          "src": "8633:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256,bytes memory) returns (bool)"
                          }
                        },
                        "id": 2136,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8633:53:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                        "id": 2137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8700:52:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        },
                        "value": "ERC721: transfer to non ERC721Receiver implementer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                          "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                        }
                      ],
                      "id": 2127,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8612:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8612:150:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2139,
                  "nodeType": "ExpressionStatement",
                  "src": "8612:150:3"
                }
              ]
            },
            "documentation": {
              "id": 2113,
              "nodeType": "StructuredDocumentation",
              "src": "8245:210:3",
              "text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
            },
            "id": 2141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_safeMint",
            "nameLocation": "8469:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2115,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "8496:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "8488:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8488:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2117,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8516:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "8508:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2116,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8508:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2119,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "8546:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2141,
                  "src": "8533:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2118,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8533:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8478:78:3"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8574:0:3"
            },
            "scope": 2562,
            "src": "8460:309:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2217,
              "nodeType": "Block",
              "src": "9152:859:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2150,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2144,
                          "src": "9170:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2153,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9184:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9176:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2151,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9176:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9176:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9170:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9188:34:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        },
                        "value": "ERC721: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
                          "typeString": "literal_string \"ERC721: mint to the zero address\""
                        }
                      ],
                      "id": 2149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9162:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9162:61:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2158,
                  "nodeType": "ExpressionStatement",
                  "src": "9162:61:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9241:17:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2161,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2146,
                              "src": "9250:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2160,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "9242:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9242:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9260:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2159,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9233:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9233:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "9233:58:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9331:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9323:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9323:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9323:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2172,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "9335:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2173,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "9339:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9348:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2167,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2548,
                      "src": "9302:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9302:48:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2176,
                  "nodeType": "ExpressionStatement",
                  "src": "9302:48:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9445:17:3",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 2179,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2146,
                              "src": "9454:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2178,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2063,
                            "src": "9446:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 2180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9446:16:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
                        "id": 2182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9464:30:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        },
                        "value": "ERC721: token already minted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
                          "typeString": "literal_string \"ERC721: token already minted\""
                        }
                      ],
                      "id": 2177,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9437:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9437:58:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2184,
                  "nodeType": "ExpressionStatement",
                  "src": "9437:58:3"
                },
                {
                  "id": 2191,
                  "nodeType": "UncheckedBlock",
                  "src": "9506:360:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2185,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "9837:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2187,
                          "indexExpression": {
                            "id": 2186,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2144,
                            "src": "9847:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "9837:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9854:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "9837:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2190,
                      "nodeType": "ExpressionStatement",
                      "src": "9837:18:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2192,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "9876:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2194,
                      "indexExpression": {
                        "id": 2193,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "9884:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9876:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2195,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2144,
                      "src": "9895:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9876:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2197,
                  "nodeType": "ExpressionStatement",
                  "src": "9876:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2201,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9930:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2200,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9922:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2199,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9922:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2202,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9922:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2203,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "9934:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2204,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "9938:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2198,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "9913:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9913:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2206,
                  "nodeType": "EmitStatement",
                  "src": "9908:38:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2210,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9985:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9977:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9977:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9977:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2212,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2144,
                        "src": "9989:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2213,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2146,
                        "src": "9993:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10002:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2207,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "9957:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9957:47:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2216,
                  "nodeType": "ExpressionStatement",
                  "src": "9957:47:3"
                }
              ]
            },
            "documentation": {
              "id": 2142,
              "nodeType": "StructuredDocumentation",
              "src": "8775:311:3",
              "text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
            },
            "id": 2218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9100:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2144,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9114:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2218,
                  "src": "9106:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2143,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9106:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2146,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "9126:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2218,
                  "src": "9118:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9118:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9105:29:3"
            },
            "returnParameters": {
              "id": 2148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9152:0:3"
            },
            "scope": 2562,
            "src": "9091:920:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2284,
              "nodeType": "Block",
              "src": "10386:713:3",
              "statements": [
                {
                  "assignments": [
                    2225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2225,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "10404:5:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 2284,
                      "src": "10396:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2224,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "10396:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2230,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2228,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "10427:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2226,
                        "name": "ERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2562,
                        "src": "10412:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                          "typeString": "type(contract ERC721)"
                        }
                      },
                      "id": 2227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ownerOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1763,
                      "src": "10412:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                        "typeString": "function (uint256) view returns (address)"
                      }
                    },
                    "id": 2229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10412:23:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10396:39:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2232,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "10467:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10482:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10474:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2233,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10474:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10474:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2237,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "10486:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10495:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2231,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2548,
                      "src": "10446:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10446:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2240,
                  "nodeType": "ExpressionStatement",
                  "src": "10446:51:3"
                },
                {
                  "expression": {
                    "id": 2246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2241,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2225,
                      "src": "10599:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2244,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2221,
                          "src": "10622:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 2242,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2562,
                          "src": "10607:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 2243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1763,
                        "src": "10607:14:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view returns (address)"
                        }
                      },
                      "id": 2245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10607:23:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "10599:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2247,
                  "nodeType": "ExpressionStatement",
                  "src": "10599:31:3"
                },
                {
                  "expression": {
                    "id": 2251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10668:31:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2248,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "10675:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2250,
                      "indexExpression": {
                        "id": 2249,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "10691:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10675:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2252,
                  "nodeType": "ExpressionStatement",
                  "src": "10668:31:3"
                },
                {
                  "id": 2259,
                  "nodeType": "UncheckedBlock",
                  "src": "10710:237:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2253,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "10915:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2255,
                          "indexExpression": {
                            "id": 2254,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2225,
                            "src": "10925:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10915:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10935:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "10915:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2258,
                      "nodeType": "ExpressionStatement",
                      "src": "10915:21:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "10956:23:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2260,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "10963:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2262,
                      "indexExpression": {
                        "id": 2261,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "10971:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10963:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2264,
                  "nodeType": "ExpressionStatement",
                  "src": "10956:23:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2266,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "11004:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11019:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11011:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2267,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11011:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2270,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11011:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2271,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "11023:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2265,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "10995:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10995:36:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2273,
                  "nodeType": "EmitStatement",
                  "src": "10990:41:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2275,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2225,
                        "src": "11062:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 2278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11077:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 2277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11069:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2276,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11069:7:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11069:10:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2280,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2221,
                        "src": "11081:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11090:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2274,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "11042:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11042:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "11042:50:3"
                }
              ]
            },
            "documentation": {
              "id": 2219,
              "nodeType": "StructuredDocumentation",
              "src": "10017:315:3",
              "text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
            },
            "id": 2285,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10346:5:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2221,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10360:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2285,
                  "src": "10352:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10352:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10351:17:3"
            },
            "returnParameters": {
              "id": 2223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10386:0:3"
            },
            "scope": 2562,
            "src": "10337:762:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2369,
              "nodeType": "Block",
              "src": "11532:1124:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2298,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2292,
                              "src": "11565:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2296,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "11550:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2297,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1763,
                            "src": "11550:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11550:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2300,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2288,
                          "src": "11577:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11550:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 2302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11583:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 2295,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11542:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11542:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2304,
                  "nodeType": "ExpressionStatement",
                  "src": "11542:81:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2306,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2290,
                          "src": "11641:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11655:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11647:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2307,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11647:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11647:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11641:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11659:38:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        },
                        "value": "ERC721: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
                          "typeString": "literal_string \"ERC721: transfer to the zero address\""
                        }
                      ],
                      "id": 2305,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11633:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11633:65:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2314,
                  "nodeType": "ExpressionStatement",
                  "src": "11633:65:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2316,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "11730:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2317,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "11736:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2318,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "11740:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11749:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2315,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2548,
                      "src": "11709:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11709:42:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2321,
                  "nodeType": "ExpressionStatement",
                  "src": "11709:42:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2325,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2292,
                              "src": "11866:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2323,
                              "name": "ERC721",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2562,
                              "src": "11851:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                                "typeString": "type(contract ERC721)"
                              }
                            },
                            "id": 2324,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1763,
                            "src": "11851:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 2326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11851:23:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2327,
                          "name": "from",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2288,
                          "src": "11878:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11851:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
                        "id": 2329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11884:39:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        },
                        "value": "ERC721: transfer from incorrect owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
                          "typeString": "literal_string \"ERC721: transfer from incorrect owner\""
                        }
                      ],
                      "id": 2322,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11843:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11843:81:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2331,
                  "nodeType": "ExpressionStatement",
                  "src": "11843:81:3"
                },
                {
                  "expression": {
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "11986:31:3",
                    "subExpression": {
                      "baseExpression": {
                        "id": 2332,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "11993:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2334,
                      "indexExpression": {
                        "id": 2333,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "12009:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11993:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "11986:31:3"
                },
                {
                  "id": 2349,
                  "nodeType": "UncheckedBlock",
                  "src": "12028:496:3",
                  "statements": [
                    {
                      "expression": {
                        "id": 2341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2337,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "12461:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2339,
                          "indexExpression": {
                            "id": 2338,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2288,
                            "src": "12471:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12461:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "-=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12480:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12461:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2342,
                      "nodeType": "ExpressionStatement",
                      "src": "12461:20:3"
                    },
                    {
                      "expression": {
                        "id": 2347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 2343,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "12495:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 2345,
                          "indexExpression": {
                            "id": 2344,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2290,
                            "src": "12505:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "12495:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "+=",
                        "rightHandSide": {
                          "hexValue": "31",
                          "id": 2346,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "12512:1:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "12495:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 2348,
                      "nodeType": "ExpressionStatement",
                      "src": "12495:18:3"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 2354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2350,
                        "name": "_owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1649,
                        "src": "12533:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2352,
                      "indexExpression": {
                        "id": 2351,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "12541:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12533:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2353,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2290,
                      "src": "12552:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12533:21:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2355,
                  "nodeType": "ExpressionStatement",
                  "src": "12533:21:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2357,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "12579:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2358,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "12585:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2359,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "12589:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2356,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3739,
                      "src": "12570:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12570:27:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2361,
                  "nodeType": "EmitStatement",
                  "src": "12565:32:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2363,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2288,
                        "src": "12628:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2364,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2290,
                        "src": "12634:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2365,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2292,
                        "src": "12638:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 2366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12647:1:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 2362,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2561,
                      "src": "12608:19:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256,uint256)"
                      }
                    },
                    "id": 2367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12608:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2368,
                  "nodeType": "ExpressionStatement",
                  "src": "12608:41:3"
                }
              ]
            },
            "documentation": {
              "id": 2286,
              "nodeType": "StructuredDocumentation",
              "src": "11105:313:3",
              "text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
            },
            "id": 2370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "11432:9:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2293,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2288,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "11459:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "11451:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2287,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11451:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2290,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "11481:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "11473:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2289,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11473:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2292,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "11501:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2370,
                  "src": "11493:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2291,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11493:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11441:73:3"
            },
            "returnParameters": {
              "id": 2294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11532:0:3"
            },
            "scope": 2562,
            "src": "11423:1233:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2393,
              "nodeType": "Block",
              "src": "12832:107:3",
              "statements": [
                {
                  "expression": {
                    "id": 2382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2378,
                        "name": "_tokenApprovals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1657,
                        "src": "12842:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 2380,
                      "indexExpression": {
                        "id": 2379,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "12858:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12842:24:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2381,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2373,
                      "src": "12869:2:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12842:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2383,
                  "nodeType": "ExpressionStatement",
                  "src": "12842:29:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2387,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2375,
                            "src": "12910:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 2385,
                            "name": "ERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2562,
                            "src": "12895:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC721_$2562_$",
                              "typeString": "type(contract ERC721)"
                            }
                          },
                          "id": 2386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1763,
                          "src": "12895:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 2388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12895:23:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2389,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2373,
                        "src": "12920:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2390,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2375,
                        "src": "12924:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2384,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3748,
                      "src": "12886:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 2391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12886:46:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2392,
                  "nodeType": "EmitStatement",
                  "src": "12881:51:3"
                }
              ]
            },
            "documentation": {
              "id": 2371,
              "nodeType": "StructuredDocumentation",
              "src": "12662:101:3",
              "text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
            },
            "id": 2394,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "12777:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2373,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12794:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2394,
                  "src": "12786:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12786:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2375,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12806:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2394,
                  "src": "12798:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2374,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12798:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12785:29:3"
            },
            "returnParameters": {
              "id": 2377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12832:0:3"
            },
            "scope": 2562,
            "src": "12768:171:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2425,
              "nodeType": "Block",
              "src": "13198:184:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2405,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2397,
                          "src": "13216:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 2406,
                          "name": "operator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2399,
                          "src": "13225:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13216:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
                        "id": 2408,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13235:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        },
                        "value": "ERC721: approve to caller"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
                          "typeString": "literal_string \"ERC721: approve to caller\""
                        }
                      ],
                      "id": 2404,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13208:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13208:55:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2410,
                  "nodeType": "ExpressionStatement",
                  "src": "13208:55:3"
                },
                {
                  "expression": {
                    "id": 2417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 2411,
                          "name": "_operatorApprovals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1663,
                          "src": "13273:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 2414,
                        "indexExpression": {
                          "id": 2412,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2397,
                          "src": "13292:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "13273:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 2415,
                      "indexExpression": {
                        "id": 2413,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "13299:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13273:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2416,
                      "name": "approved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2401,
                      "src": "13311:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13273:46:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2418,
                  "nodeType": "ExpressionStatement",
                  "src": "13273:46:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2420,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2397,
                        "src": "13349:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2421,
                        "name": "operator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2399,
                        "src": "13356:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2422,
                        "name": "approved",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2401,
                        "src": "13366:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2419,
                      "name": "ApprovalForAll",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3757,
                      "src": "13334:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,address,bool)"
                      }
                    },
                    "id": 2423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13334:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2424,
                  "nodeType": "EmitStatement",
                  "src": "13329:46:3"
                }
              ]
            },
            "documentation": {
              "id": 2395,
              "nodeType": "StructuredDocumentation",
              "src": "12945:125:3",
              "text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
            },
            "id": 2426,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setApprovalForAll",
            "nameLocation": "13084:18:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2397,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "13120:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "13112:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2396,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13112:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2399,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "13143:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "13135:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13135:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2401,
                  "mutability": "mutable",
                  "name": "approved",
                  "nameLocation": "13166:8:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2426,
                  "src": "13161:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "13161:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13102:78:3"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13198:0:3"
            },
            "scope": 2562,
            "src": "13075:307:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2439,
              "nodeType": "Block",
              "src": "13529:70:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2434,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "13555:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2433,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2063,
                          "src": "13547:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 2435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13547:16:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
                        "id": 2436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13565:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        },
                        "value": "ERC721: invalid token ID"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
                          "typeString": "literal_string \"ERC721: invalid token ID\""
                        }
                      ],
                      "id": 2432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13539:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13539:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2438,
                  "nodeType": "ExpressionStatement",
                  "src": "13539:53:3"
                }
              ]
            },
            "documentation": {
              "id": 2427,
              "nodeType": "StructuredDocumentation",
              "src": "13388:73:3",
              "text": " @dev Reverts if the `tokenId` has not been minted yet."
            },
            "id": 2440,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireMinted",
            "nameLocation": "13475:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2429,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13498:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2440,
                  "src": "13490:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13490:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13489:17:3"
            },
            "returnParameters": {
              "id": 2431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13529:0:3"
            },
            "scope": 2562,
            "src": "13466:133:3",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2501,
              "nodeType": "Block",
              "src": "14306:676:3",
              "statements": [
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2454,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2445,
                        "src": "14320:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 2455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3903,
                      "src": "14320:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$bound_to$_t_address_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14320:15:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 2499,
                    "nodeType": "Block",
                    "src": "14940:36:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14961:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2453,
                        "id": 2498,
                        "nodeType": "Return",
                        "src": "14954:11:3"
                      }
                    ]
                  },
                  "id": 2500,
                  "nodeType": "IfStatement",
                  "src": "14316:660:3",
                  "trueBody": {
                    "id": 2496,
                    "nodeType": "Block",
                    "src": "14337:597:3",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 2476,
                              "nodeType": "Block",
                              "src": "14451:91:3",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 2474,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2470,
                                      "name": "retval",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2468,
                                      "src": "14476:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2471,
                                          "name": "IERC721Receiver",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 3858,
                                          "src": "14486:15:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3858_$",
                                            "typeString": "type(contract IERC721Receiver)"
                                          }
                                        },
                                        "id": 2472,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "onERC721Received",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 3857,
                                        "src": "14486:32:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
                                        }
                                      },
                                      "id": 2473,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "14486:41:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "14476:51:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 2453,
                                  "id": 2475,
                                  "nodeType": "Return",
                                  "src": "14469:58:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2477,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2469,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2468,
                                  "mutability": "mutable",
                                  "name": "retval",
                                  "nameLocation": "14443:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2477,
                                  "src": "14436:13:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 2467,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14436:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14435:15:3"
                            },
                            "src": "14427:115:3"
                          },
                          {
                            "block": {
                              "id": 2493,
                              "nodeType": "Block",
                              "src": "14571:353:3",
                              "statements": [
                                {
                                  "condition": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2484,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 2481,
                                        "name": "reason",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2479,
                                        "src": "14593:6:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "id": 2482,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "14593:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 2483,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "14610:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "14593:18:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "falseBody": {
                                    "id": 2491,
                                    "nodeType": "Block",
                                    "src": "14720:190:3",
                                    "statements": [
                                      {
                                        "AST": {
                                          "nodeType": "YulBlock",
                                          "src": "14806:86:3",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "kind": "number",
                                                        "nodeType": "YulLiteral",
                                                        "src": "14843:2:3",
                                                        "type": "",
                                                        "value": "32"
                                                      },
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14847:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14839:3:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14839:15:3"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "reason",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "14862:6:3"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "14856:5:3"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "14856:13:3"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "revert",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "14832:6:3"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "14832:38:3"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "14832:38:3"
                                            }
                                          ]
                                        },
                                        "documentation": "@solidity memory-safe-assembly",
                                        "evmVersion": "istanbul",
                                        "externalReferences": [
                                          {
                                            "declaration": 2479,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14847:6:3",
                                            "valueSize": 1
                                          },
                                          {
                                            "declaration": 2479,
                                            "isOffset": false,
                                            "isSlot": false,
                                            "src": "14862:6:3",
                                            "valueSize": 1
                                          }
                                        ],
                                        "id": 2490,
                                        "nodeType": "InlineAssembly",
                                        "src": "14797:95:3"
                                      }
                                    ]
                                  },
                                  "id": 2492,
                                  "nodeType": "IfStatement",
                                  "src": "14589:321:3",
                                  "trueBody": {
                                    "id": 2489,
                                    "nodeType": "Block",
                                    "src": "14613:101:3",
                                    "statements": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
                                              "id": 2486,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "14642:52:3",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              },
                                              "value": "ERC721: transfer to non ERC721Receiver implementer"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
                                                "typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
                                              }
                                            ],
                                            "id": 2485,
                                            "name": "revert",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                              -19,
                                              -19
                                            ],
                                            "referencedDeclaration": -19,
                                            "src": "14635:6:3",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                              "typeString": "function (string memory) pure"
                                            }
                                          },
                                          "id": 2487,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "14635:60:3",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                          }
                                        },
                                        "id": 2488,
                                        "nodeType": "ExpressionStatement",
                                        "src": "14635:60:3"
                                      }
                                    ]
                                  }
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 2494,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 2480,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 2479,
                                  "mutability": "mutable",
                                  "name": "reason",
                                  "nameLocation": "14563:6:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 2494,
                                  "src": "14550:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes"
                                  },
                                  "typeName": {
                                    "id": 2478,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14550:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_storage_ptr",
                                      "typeString": "bytes"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "14549:21:3"
                            },
                            "src": "14543:381:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 2461,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4227,
                                "src": "14392:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 2462,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14392:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2463,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2443,
                              "src": "14406:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2464,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2447,
                              "src": "14412:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2465,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2449,
                              "src": "14421:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2458,
                                  "name": "to",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2445,
                                  "src": "14371:2:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2457,
                                "name": "IERC721Receiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3858,
                                "src": "14355:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$3858_$",
                                  "typeString": "type(contract IERC721Receiver)"
                                }
                              },
                              "id": 2459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14355:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721Receiver_$3858",
                                "typeString": "contract IERC721Receiver"
                              }
                            },
                            "id": 2460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "onERC721Received",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3857,
                            "src": "14355:36:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                            }
                          },
                          "id": 2466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14355:71:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 2495,
                        "nodeType": "TryStatement",
                        "src": "14351:573:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2441,
              "nodeType": "StructuredDocumentation",
              "src": "13605:541:3",
              "text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
            },
            "id": 2502,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_checkOnERC721Received",
            "nameLocation": "14160:22:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2443,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "14200:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2502,
                  "src": "14192:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14192:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2445,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "14222:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2502,
                  "src": "14214:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2444,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14214:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2447,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "14242:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2502,
                  "src": "14234:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14234:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2449,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "14272:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2502,
                  "src": "14259:17:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 2448,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14259:5:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14182:100:3"
            },
            "returnParameters": {
              "id": 2453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2452,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2502,
                  "src": "14300:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2451,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "14300:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14299:6:3"
            },
            "scope": 2562,
            "src": "14151:831:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 2547,
              "nodeType": "Block",
              "src": "15856:238:3",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2514,
                      "name": "batchSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2511,
                      "src": "15870:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 2515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15882:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "15870:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2546,
                  "nodeType": "IfStatement",
                  "src": "15866:222:3",
                  "trueBody": {
                    "id": 2545,
                    "nodeType": "Block",
                    "src": "15885:203:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2522,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2517,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2505,
                            "src": "15903:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2520,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15919:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15911:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2518,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15911:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15911:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "15903:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2530,
                        "nodeType": "IfStatement",
                        "src": "15899:85:3",
                        "trueBody": {
                          "id": 2529,
                          "nodeType": "Block",
                          "src": "15923:61:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2523,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1653,
                                    "src": "15941:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2525,
                                  "indexExpression": {
                                    "id": 2524,
                                    "name": "from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2505,
                                    "src": "15951:4:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "15941:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 2526,
                                  "name": "batchSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "15960:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "15941:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2528,
                              "nodeType": "ExpressionStatement",
                              "src": "15941:28:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 2536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2531,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2507,
                            "src": "16001:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 2534,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "16015:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 2533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "16007:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2532,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "16007:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2535,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16007:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "16001:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2544,
                        "nodeType": "IfStatement",
                        "src": "15997:81:3",
                        "trueBody": {
                          "id": 2543,
                          "nodeType": "Block",
                          "src": "16019:59:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 2541,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2537,
                                    "name": "_balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1653,
                                    "src": "16037:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2539,
                                  "indexExpression": {
                                    "id": 2538,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2507,
                                    "src": "16047:2:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "16037:13:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 2540,
                                  "name": "batchSize",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2511,
                                  "src": "16054:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "16037:26:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2542,
                              "nodeType": "ExpressionStatement",
                              "src": "16037:26:3"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 2503,
              "nodeType": "StructuredDocumentation",
              "src": "14988:705:3",
              "text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2548,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "15707:20:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2505,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "15745:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2548,
                  "src": "15737:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15737:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2507,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "15767:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2548,
                  "src": "15759:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15759:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2509,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2548,
                  "src": "15779:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15779:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2511,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "15823:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2548,
                  "src": "15815:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2510,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15815:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15727:111:3"
            },
            "returnParameters": {
              "id": 2513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15856:0:3"
            },
            "scope": 2562,
            "src": "15698:396:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2560,
              "nodeType": "Block",
              "src": "16951:2:3",
              "statements": []
            },
            "documentation": {
              "id": 2549,
              "nodeType": "StructuredDocumentation",
              "src": "16100:695:3",
              "text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 2561,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "16809:19:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2558,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2551,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "16846:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2561,
                  "src": "16838:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2550,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16838:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2553,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "16868:2:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2561,
                  "src": "16860:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16860:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2555,
                  "mutability": "mutable",
                  "name": "firstTokenId",
                  "nameLocation": "16888:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2561,
                  "src": "16880:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2554,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16880:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2557,
                  "mutability": "mutable",
                  "name": "batchSize",
                  "nameLocation": "16918:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 2561,
                  "src": "16910:17:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2556,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16910:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16828:105:3"
            },
            "returnParameters": {
              "id": 2559,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16951:0:3"
            },
            "scope": 2562,
            "src": "16800:153:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 2563,
        "src": "628:16327:3",
        "usedErrors": []
      }
    ],
    "src": "107:16849:3"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001466380380620014668339810160408190526200003491620001db565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b6111d580620002916000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b3578063b88d4fde146101c6578063c87b56dd146101d9578063e985e9c5146101ec57600080fd5b80636352211e1461017757806370a082311461018a57806395d89b41146101ab57600080fd5b806301ffc9a7146100d457806306fdde03146100fc578063081812fc14610111578063095ea7b31461013c57806323b872dd1461015157806342842e0e14610164575b600080fd5b6100e76100e2366004610d14565b610228565b60405190151581526020015b60405180910390f35b61010461027a565b6040516100f39190610d89565b61012461011f366004610d9c565b61030c565b6040516001600160a01b0390911681526020016100f3565b61014f61014a366004610dd1565b610333565b005b61014f61015f366004610dfb565b61044d565b61014f610172366004610dfb565b61047e565b610124610185366004610d9c565b610499565b61019d610198366004610e37565b6104f9565b6040519081526020016100f3565b61010461057f565b61014f6101c1366004610e52565b61058e565b61014f6101d4366004610ea4565b61059d565b6101046101e7366004610d9c565b6105d5565b6100e76101fa366004610f80565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061025957506001600160e01b03198216635b5e139f60e01b145b8061027457506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461028990610fb3565b80601f01602080910402602001604051908101604052809291908181526020018280546102b590610fb3565b80156103025780601f106102d757610100808354040283529160200191610302565b820191906000526020600020905b8154815290600101906020018083116102e557829003601f168201915b5050505050905090565b600061031782610649565b506000908152600460205260409020546001600160a01b031690565b600061033e82610499565b9050806001600160a01b0316836001600160a01b0316036103b05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103cc57506103cc81336101fa565b61043e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103a7565b61044883836106ab565b505050565b6104573382610719565b6104735760405162461bcd60e51b81526004016103a790610fed565b610448838383610798565b6104488383836040518060200160405280600081525061059d565b6000818152600260205260408120546001600160a01b0316806102745760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b60006001600160a01b0382166105635760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103a7565b506001600160a01b031660009081526003602052604090205490565b60606001805461028990610fb3565b610599338383610909565b5050565b6105a73383610719565b6105c35760405162461bcd60e51b81526004016103a790610fed565b6105cf848484846109d7565b50505050565b60606105e082610649565b60006105f760408051602081019091526000815290565b905060008151116106175760405180602001604052806000815250610642565b8061062184610a0a565b60405160200161063292919061103a565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106a85760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103a7565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906106e082610499565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061072583610499565b9050806001600160a01b0316846001600160a01b0316148061076c57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107905750836001600160a01b03166107858461030c565b6001600160a01b0316145b949350505050565b826001600160a01b03166107ab82610499565b6001600160a01b0316146107d15760405162461bcd60e51b81526004016103a790611069565b6001600160a01b0382166108335760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103a7565b6108408383836001610a9d565b826001600160a01b031661085382610499565b6001600160a01b0316146108795760405162461bcd60e51b81526004016103a790611069565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b816001600160a01b0316836001600160a01b03160361096a5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103a7565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6109e2848484610798565b6109ee84848484610b25565b6105cf5760405162461bcd60e51b81526004016103a7906110ae565b60606000610a1783610c26565b600101905060008167ffffffffffffffff811115610a3757610a37610e8e565b6040519080825280601f01601f191660200182016040528015610a61576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610a6b57509392505050565b60018111156105cf576001600160a01b03841615610ae3576001600160a01b03841660009081526003602052604081208054839290610add908490611116565b90915550505b6001600160a01b038316156105cf576001600160a01b03831660009081526003602052604081208054839290610b1a90849061112d565b909155505050505050565b60006001600160a01b0384163b15610c1b57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b69903390899088908890600401611145565b6020604051808303816000875af1925050508015610ba4575060408051601f3d908101601f19168201909252610ba191810190611182565b60015b610c01573d808015610bd2576040519150601f19603f3d011682016040523d82523d6000602084013e610bd7565b606091505b508051600003610bf95760405162461bcd60e51b81526004016103a7906110ae565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610790565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c655772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c91576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610caf57662386f26fc10000830492506010015b6305f5e1008310610cc7576305f5e100830492506008015b6127108310610cdb57612710830492506004015b60648310610ced576064830492506002015b600a83106102745760010192915050565b6001600160e01b0319811681146106a857600080fd5b600060208284031215610d2657600080fd5b813561064281610cfe565b60005b83811015610d4c578181015183820152602001610d34565b838111156105cf5750506000910152565b60008151808452610d75816020860160208601610d31565b601f01601f19169290920160200192915050565b6020815260006106426020830184610d5d565b600060208284031215610dae57600080fd5b5035919050565b80356001600160a01b0381168114610dcc57600080fd5b919050565b60008060408385031215610de457600080fd5b610ded83610db5565b946020939093013593505050565b600080600060608486031215610e1057600080fd5b610e1984610db5565b9250610e2760208501610db5565b9150604084013590509250925092565b600060208284031215610e4957600080fd5b61064282610db5565b60008060408385031215610e6557600080fd5b610e6e83610db5565b915060208301358015158114610e8357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610eba57600080fd5b610ec385610db5565b9350610ed160208601610db5565b925060408501359150606085013567ffffffffffffffff80821115610ef557600080fd5b818701915087601f830112610f0957600080fd5b813581811115610f1b57610f1b610e8e565b604051601f8201601f19908116603f01168101908382118183101715610f4357610f43610e8e565b816040528281528a6020848701011115610f5c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610f9357600080fd5b610f9c83610db5565b9150610faa60208401610db5565b90509250929050565b600181811c90821680610fc757607f821691505b602082108103610fe757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161104c818460208801610d31565b835190830190611060818360208801610d31565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561112857611128611100565b500390565b6000821982111561114057611140611100565b500190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061117890830184610d5d565b9695505050505050565b60006020828403121561119457600080fd5b815161064281610cfe56fea26469706673582212202748895a70bf8213a1e07d6cd1e6a9ad4ca9905e7dfaf122e939cd62da0c7f5e64736f6c634300080e0033",
  "bytecodeSha1": "0454681f37ff59fd97f92fd0aaa161e3144f5782",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.14+commit.80d49f37"
  },
  "contractName": "ERC721",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {},
      "13": {
        "Math.log10": {
          "81": [
            10017,
            10032,
            false
          ],
          "82": [
            10129,
            10144,
            false
          ],
          "83": [
            10241,
            10256,
            false
          ],
          "84": [
            10353,
            10367,
            false
          ],
          "85": [
            10462,
            10476,
            false
          ],
          "86": [
            10571,
            10585,
            false
          ],
          "87": [
            10680,
            10694,
            false
          ]
        }
      },
      "3": {
        "ERC721._beforeTokenTransfer": {
          "77": [
            15870,
            15883,
            false
          ],
          "78": [
            15903,
            15921,
            false
          ],
          "79": [
            16001,
            16017,
            false
          ]
        },
        "ERC721._checkOnERC721Received": {
          "80": [
            14593,
            14611,
            false
          ]
        },
        "ERC721._safeTransfer": {
          "76": [
            6620,
            6667,
            true
          ]
        },
        "ERC721._setApprovalForAll": {
          "75": [
            13216,
            13233,
            true
          ]
        },
        "ERC721._transfer": {
          "72": [
            11550,
            11581,
            true
          ],
          "73": [
            11641,
            11657,
            true
          ],
          "74": [
            11851,
            11882,
            true
          ]
        },
        "ERC721.approve": {
          "65": [
            3605,
            3616,
            true
          ],
          "66": [
            3686,
            3707,
            true
          ],
          "67": [
            3711,
            3748,
            true
          ]
        },
        "ERC721.balanceOf": {
          "69": [
            2028,
            2047,
            true
          ]
        },
        "ERC721.safeTransferFrom": {
          "70": [
            5417,
            5458,
            true
          ]
        },
        "ERC721.tokenURI": {
          "71": [
            2984,
            3009,
            true
          ]
        },
        "ERC721.transferFrom": {
          "68": [
            4801,
            4842,
            true
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "10": {
        "Strings.toString": {
          "42": [
            819,
            824
          ],
          "43": [
            1003,
            1014
          ],
          "44": [
            1081,
            1094
          ]
        }
      },
      "11": {
        "ERC165.supportsInterface": {
          "2": [
            930,
            977
          ]
        }
      },
      "12": {},
      "13": {
        "Math.log10": {
          "51": [
            10052,
            10067
          ],
          "52": [
            10085,
            10097
          ],
          "53": [
            10164,
            10179
          ],
          "54": [
            10197,
            10209
          ],
          "55": [
            10276,
            10291
          ],
          "56": [
            10309,
            10321
          ],
          "57": [
            10387,
            10401
          ],
          "58": [
            10419,
            10430
          ],
          "59": [
            10496,
            10510
          ],
          "60": [
            10528,
            10539
          ],
          "61": [
            10605,
            10619
          ],
          "62": [
            10637,
            10648
          ],
          "63": [
            10714,
            10725
          ],
          "64": [
            10759,
            10772
          ]
        }
      },
      "3": {
        "ERC721._approve": {
          "25": [
            12842,
            12871
          ],
          "26": [
            12881,
            12932
          ]
        },
        "ERC721._baseURI": {
          "22": [
            3395,
            3404
          ]
        },
        "ERC721._beforeTokenTransfer": {
          "45": [
            15941,
            15969
          ],
          "46": [
            16037,
            16063
          ]
        },
        "ERC721._checkOnERC721Received": {
          "48": [
            14635,
            14695
          ],
          "49": [
            14469,
            14527
          ],
          "50": [
            14954,
            14965
          ]
        },
        "ERC721._isApprovedOrOwner": {
          "27": [
            7698,
            7794
          ]
        },
        "ERC721._ownerOf": {
          "13": [
            6923,
            6946
          ]
        },
        "ERC721._requireMinted": {
          "24": [
            13539,
            13592
          ]
        },
        "ERC721._safeTransfer": {
          "40": [
            6574,
            6602
          ],
          "41": [
            6612,
            6722
          ]
        },
        "ERC721._setApprovalForAll": {
          "37": [
            13208,
            13263
          ],
          "38": [
            13273,
            13319
          ],
          "39": [
            13329,
            13375
          ]
        },
        "ERC721._transfer": {
          "28": [
            11542,
            11623
          ],
          "29": [
            11633,
            11698
          ],
          "30": [
            11709,
            11751
          ],
          "31": [
            11843,
            11924
          ],
          "32": [
            11986,
            12017
          ],
          "33": [
            12461,
            12481
          ],
          "34": [
            12495,
            12513
          ],
          "35": [
            12533,
            12554
          ],
          "36": [
            12565,
            12597
          ]
        },
        "ERC721.approve": {
          "6": [
            3597,
            3654
          ],
          "8": [
            3665,
            3835
          ],
          "9": [
            3846,
            3867
          ]
        },
        "ERC721.balanceOf": {
          "15": [
            2020,
            2093
          ],
          "16": [
            2103,
            2126
          ]
        },
        "ERC721.getApproved": {
          "4": [
            4030,
            4053
          ],
          "5": [
            4064,
            4095
          ]
        },
        "ERC721.isApprovedForAll": {
          "0": [
            4501,
            4543
          ]
        },
        "ERC721.name": {
          "3": [
            2550,
            2562
          ]
        },
        "ERC721.ownerOf": {
          "14": [
            2324,
            2380
          ]
        },
        "ERC721.safeTransferFrom": {
          "12": [
            5137,
            5176
          ],
          "19": [
            5409,
            5508
          ],
          "20": [
            5518,
            5556
          ]
        },
        "ERC721.setApprovalForAll": {
          "18": [
            4263,
            4315
          ]
        },
        "ERC721.supportsInterface": {
          "1": [
            1688,
            1863
          ]
        },
        "ERC721.symbol": {
          "17": [
            2714,
            2728
          ]
        },
        "ERC721.tokenURI": {
          "21": [
            2899,
            2922
          ],
          "23": [
            2977,
            3070
          ]
        },
        "ERC721.transferFrom": {
          "10": [
            4793,
            4892
          ],
          "11": [
            4903,
            4931
          ]
        }
      },
      "4": {},
      "5": {},
      "7": {},
      "8": {
        "Address.isContract": {
          "47": [
            1458,
            1488
          ]
        }
      },
      "9": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/IERC721Receiver",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Math",
    "OpenZeppelin/openzeppelin-contracts@4.8.0/Strings"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "628:16327:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;:::i;:::-;;:::i;:::-;;;565:14:28;;558:22;540:41;;528:2;513:18;1570:300:3;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;3935:167::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1692:32:28;;;1674:51;;1662:2;1647:18;3935:167:3;1528:203:28;3468:406:3;;;;;;:::i;:::-;;:::i;:::-;;4612:326;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1929:204::-;;;;;;:::i;:::-;;:::i;:::-;;;2843:25:28;;;2831:2;2816:18;1929:204:3;2697:177:28;2633:102:3;;;:::i;4169:153::-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2801:276::-;;;;;;:::i;:::-;;:::i;4388:162::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:3;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;1570:300;1672:4;-1:-1:-1;;;;;;1707:40:3;;-1:-1:-1;;;1707:40:3;;:104;;-1:-1:-1;;;;;;;1763:48:3;;-1:-1:-1;;;1763:48:3;1707:104;:156;;;-1:-1:-1;;;;;;;;;;937:40:11;;;1827:36:3;1688:175;1570:300;-1:-1:-1;;1570:300:3:o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:3;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:3;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:3;:2;-1:-1:-1;;;;;3605:11:3;;3597:57;;;;-1:-1:-1;;;3597:57:3;;5358:2:28;3597:57:3;;;5340:21:28;5397:2;5377:18;;;5370:30;5436:34;5416:18;;;5409:62;-1:-1:-1;;;5487:18:28;;;5480:31;5528:19;;3597:57:3;;;;;;;;;719:10:9;-1:-1:-1;;;;;3686:21:3;;;;:62;;-1:-1:-1;3711:37:3;3728:5;719:10:9;4388:162:3;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:3;;5760:2:28;3665:170:3;;;5742:21:28;5799:2;5779:18;;;5772:30;5838:34;5818:18;;;5811:62;5909:31;5889:18;;;5882:59;5958:19;;3665:170:3;5558:425:28;3665:170:3;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:326::-;4801:41;719:10:9;4834:7:3;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:3;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:3;;2324:56;;;;-1:-1:-1;;;2324:56:3;;6604:2:28;2324:56:3;;;6586:21:28;6643:2;6623:18;;;6616:30;-1:-1:-1;;;6662:18:28;;;6655:54;6726:18;;2324:56:3;6402:348:28;1929:204:3;2001:7;-1:-1:-1;;;;;2028:19:3;;2020:73;;;;-1:-1:-1;;;2020:73:3;;6957:2:28;2020:73:3;;;6939:21:28;6996:2;6976:18;;;6969:30;7035:34;7015:18;;;7008:62;-1:-1:-1;;;7086:18:28;;;7079:39;7135:19;;2020:73:3;6755:405:28;2020:73:3;-1:-1:-1;;;;;;2110:16:3;;;;;:9;:16;;;;;;;1929:204::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;4169:153::-;4263:52;719:10:9;4296:8:3;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:9;5450:7:3;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:3;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;3395:9;;;;;;;;;-1:-1:-1;3395:9:3;;;3319:92;2957:10;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;2801:276;-1:-1:-1;;;2801:276:3:o;13466:133::-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:3;13539:53;;;;-1:-1:-1;;;13539:53:3;;6604:2:28;13539:53:3;;;6586:21:28;6643:2;6623:18;;;6616:30;-1:-1:-1;;;6662:18:28;;;6655:54;6726:18;;13539:53:3;6402:348:28;13539:53:3;13466:133;:::o;12768:171::-;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:3;-1:-1:-1;;;;;12842:29:3;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:3;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:3;:7;-1:-1:-1;;;;;7706:16:3;;:52;;;-1:-1:-1;;;;;;4508:25:3;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7726:32;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:3;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:3;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:3:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:3;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:3;;11542:81;;;;-1:-1:-1;;;11542:81:3;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:3;;11633:65;;;;-1:-1:-1;;;11633:65:3;;8248:2:28;11633:65:3;;;8230:21:28;8287:2;8267:18;;;8260:30;8326:34;8306:18;;;8299:62;-1:-1:-1;;;8377:18:28;;;8370:34;8421:19;;11633:65:3;8046:400:28;11633:65:3;11709:42;11730:4;11736:2;11740:7;11749:1;11709:20;:42::i;:::-;11878:4;-1:-1:-1;;;;;11851:31:3;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:3;;11843:81;;;;-1:-1:-1;;;11843:81:3;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:3;;;;;;-1:-1:-1;;;;;12461:15:3;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:3;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;13075:307::-;13225:8;-1:-1:-1;;;;;13216:17:3;:5;-1:-1:-1;;;;;13216:17:3;;13208:55;;;;-1:-1:-1;;;13208:55:3;;8653:2:28;13208:55:3;;;8635:21:28;8692:2;8672:18;;;8665:30;8731:27;8711:18;;;8704:55;8776:18;;13208:55:3;8451:349:28;13208:55:3;-1:-1:-1;;;;;13273:25:3;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:3;;;;;;;;;;13334:41;;540::28;;;13334::3;;513:18:28;13334:41:3;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:3;;;;;;;:::i;415:696:10:-;471:13;520:14;537:17;548:5;537:10;:17::i;:::-;557:1;537:21;520:38;;572:20;606:6;595:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;595:18:10;-1:-1:-1;572:41:10;-1:-1:-1;733:28:10;;;749:2;733:28;788:280;-1:-1:-1;;819:5:10;-1:-1:-1;;;953:2:10;942:14;;937:30;819:5;924:44;1012:2;1003:11;;;-1:-1:-1;1032:21:10;788:280;1032:21;-1:-1:-1;1088:6:10;415:696;-1:-1:-1;;;415:696:10:o;15698:396:3:-;15882:1;15870:9;:13;15866:222;;;-1:-1:-1;;;;;15903:18:3;;;15899:85;;-1:-1:-1;;;;;15941:15:3;;;;;;:9;:15;;;;;:28;;15960:9;;15941:15;:28;;15960:9;;15941:28;:::i;:::-;;;;-1:-1:-1;;15899:85:3;-1:-1:-1;;;;;16001:16:3;;;15997:81;;-1:-1:-1;;;;;16037:13:3;;;;;;:9;:13;;;;;:26;;16054:9;;16037:13;:26;;16054:9;;16037:26;:::i;:::-;;;;-1:-1:-1;;15698:396:3;;;;:::o;14151:831::-;14300:4;-1:-1:-1;;;;;14320:13:3;;1465:19:8;:23;14316:660:3;;14355:71;;-1:-1:-1;;;14355:71:3;;-1:-1:-1;;;;;14355:36:3;;;;;:71;;719:10:9;;14406:4:3;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:3;;;;;;;;-1:-1:-1;;14355:71:3;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:3;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:3;-1:-1:-1;;;14476:51:3;;-1:-1:-1;14469:58:3;;14316:660;-1:-1:-1;14961:4:3;14151:831;;;;;;:::o;9889:890:13:-;9942:7;;-1:-1:-1;;;10017:15:13;;10013:99;;-1:-1:-1;;;10052:15:13;;;-1:-1:-1;10095:2:13;10085:12;10013:99;10138:6;10129:5;:15;10125:99;;10173:6;10164:15;;;-1:-1:-1;10207:2:13;10197:12;10125:99;10250:6;10241:5;:15;10237:99;;10285:6;10276:15;;;-1:-1:-1;10319:2:13;10309:12;10237:99;10362:5;10353;:14;10349:96;;10396:5;10387:14;;;-1:-1:-1;10429:1:13;10419:11;10349:96;10471:5;10462;:14;10458:96;;10505:5;10496:14;;;-1:-1:-1;10538:1:13;10528:11;10458:96;10580:5;10571;:14;10567:96;;10614:5;10605:14;;;-1:-1:-1;10647:1:13;10637:11;10567:96;10689:5;10680;:14;10676:64;;10724:1;10714:11;10766:6;9889:890;-1:-1:-1;;9889:890:13:o;14:131:28:-;-1:-1:-1;;;;;;88:32:28;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:258::-;664:1;674:113;688:6;685:1;682:13;674:113;;;764:11;;;758:18;745:11;;;738:39;710:2;703:10;674:113;;;805:6;802:1;799:13;796:48;;;-1:-1:-1;;840:1:28;822:16;;815:27;592:258::o;855:::-;897:3;935:5;929:12;962:6;957:3;950:19;978:63;1034:6;1027:4;1022:3;1018:14;1011:4;1004:5;1000:16;978:63;:::i;:::-;1095:2;1074:15;-1:-1:-1;;1070:29:28;1061:39;;;;1102:4;1057:50;;855:258;-1:-1:-1;;855:258:28:o;1118:220::-;1267:2;1256:9;1249:21;1230:4;1287:45;1328:2;1317:9;1313:18;1305:6;1287:45;:::i;1343:180::-;1402:6;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;-1:-1:-1;1494:23:28;;1343:180;-1:-1:-1;1343:180:28:o;1736:173::-;1804:20;;-1:-1:-1;;;;;1853:31:28;;1843:42;;1833:70;;1899:1;1896;1889:12;1833:70;1736:173;;;:::o;1914:254::-;1982:6;1990;2043:2;2031:9;2022:7;2018:23;2014:32;2011:52;;;2059:1;2056;2049:12;2011:52;2082:29;2101:9;2082:29;:::i;:::-;2072:39;2158:2;2143:18;;;;2130:32;;-1:-1:-1;;;1914:254:28:o;2173:328::-;2250:6;2258;2266;2319:2;2307:9;2298:7;2294:23;2290:32;2287:52;;;2335:1;2332;2325:12;2287:52;2358:29;2377:9;2358:29;:::i;:::-;2348:39;;2406:38;2440:2;2429:9;2425:18;2406:38;:::i;:::-;2396:48;;2491:2;2480:9;2476:18;2463:32;2453:42;;2173:328;;;;;:::o;2506:186::-;2565:6;2618:2;2606:9;2597:7;2593:23;2589:32;2586:52;;;2634:1;2631;2624:12;2586:52;2657:29;2676:9;2657:29;:::i;2879:347::-;2944:6;2952;3005:2;2993:9;2984:7;2980:23;2976:32;2973:52;;;3021:1;3018;3011:12;2973:52;3044:29;3063:9;3044:29;:::i;:::-;3034:39;;3123:2;3112:9;3108:18;3095:32;3170:5;3163:13;3156:21;3149:5;3146:32;3136:60;;3192:1;3189;3182:12;3136:60;3215:5;3205:15;;;2879:347;;;;;:::o;3231:127::-;3292:10;3287:3;3283:20;3280:1;3273:31;3323:4;3320:1;3313:15;3347:4;3344:1;3337:15;3363:1138;3458:6;3466;3474;3482;3535:3;3523:9;3514:7;3510:23;3506:33;3503:53;;;3552:1;3549;3542:12;3503:53;3575:29;3594:9;3575:29;:::i;:::-;3565:39;;3623:38;3657:2;3646:9;3642:18;3623:38;:::i;:::-;3613:48;;3708:2;3697:9;3693:18;3680:32;3670:42;;3763:2;3752:9;3748:18;3735:32;3786:18;3827:2;3819:6;3816:14;3813:34;;;3843:1;3840;3833:12;3813:34;3881:6;3870:9;3866:22;3856:32;;3926:7;3919:4;3915:2;3911:13;3907:27;3897:55;;3948:1;3945;3938:12;3897:55;3984:2;3971:16;4006:2;4002;3999:10;3996:36;;;4012:18;;:::i;:::-;4087:2;4081:9;4055:2;4141:13;;-1:-1:-1;;4137:22:28;;;4161:2;4133:31;4129:40;4117:53;;;4185:18;;;4205:22;;;4182:46;4179:72;;;4231:18;;:::i;:::-;4271:10;4267:2;4260:22;4306:2;4298:6;4291:18;4346:7;4341:2;4336;4332;4328:11;4324:20;4321:33;4318:53;;;4367:1;4364;4357:12;4318:53;4423:2;4418;4414;4410:11;4405:2;4397:6;4393:15;4380:46;4468:1;4463:2;4458;4450:6;4446:15;4442:24;4435:35;4489:6;4479:16;;;;;;;3363:1138;;;;;;;:::o;4506:260::-;4574:6;4582;4635:2;4623:9;4614:7;4610:23;4606:32;4603:52;;;4651:1;4648;4641:12;4603:52;4674:29;4693:9;4674:29;:::i;:::-;4664:39;;4722:38;4756:2;4745:9;4741:18;4722:38;:::i;:::-;4712:48;;4506:260;;;;;:::o;4771:380::-;4850:1;4846:12;;;;4893;;;4914:61;;4968:4;4960:6;4956:17;4946:27;;4914:61;5021:2;5013:6;5010:14;4990:18;4987:38;4984:161;;5067:10;5062:3;5058:20;5055:1;5048:31;5102:4;5099:1;5092:15;5130:4;5127:1;5120:15;4984:161;;4771:380;;;:::o;5988:409::-;6190:2;6172:21;;;6229:2;6209:18;;;6202:30;6268:34;6263:2;6248:18;;6241:62;-1:-1:-1;;;6334:2:28;6319:18;;6312:43;6387:3;6372:19;;5988:409::o;7165:470::-;7344:3;7382:6;7376:13;7398:53;7444:6;7439:3;7432:4;7424:6;7420:17;7398:53;:::i;:::-;7514:13;;7473:16;;;;7536:57;7514:13;7473:16;7570:4;7558:17;;7536:57;:::i;:::-;7609:20;;7165:470;-1:-1:-1;;;;7165:470:28:o;7640:401::-;7842:2;7824:21;;;7881:2;7861:18;;;7854:30;7920:34;7915:2;7900:18;;7893:62;-1:-1:-1;;;7986:2:28;7971:18;;7964:35;8031:3;8016:19;;7640:401::o;8805:414::-;9007:2;8989:21;;;9046:2;9026:18;;;9019:30;9085:34;9080:2;9065:18;;9058:62;-1:-1:-1;;;9151:2:28;9136:18;;9129:48;9209:3;9194:19;;8805:414::o;9356:127::-;9417:10;9412:3;9408:20;9405:1;9398:31;9448:4;9445:1;9438:15;9472:4;9469:1;9462:15;9488:125;9528:4;9556:1;9553;9550:8;9547:34;;;9561:18;;:::i;:::-;-1:-1:-1;9598:9:28;;9488:125::o;9618:128::-;9658:3;9689:1;9685:6;9682:1;9679:13;9676:39;;;9695:18;;:::i;:::-;-1:-1:-1;9731:9:28;;9618:128::o;9751:489::-;-1:-1:-1;;;;;10020:15:28;;;10002:34;;10072:15;;10067:2;10052:18;;10045:43;10119:2;10104:18;;10097:34;;;10167:3;10162:2;10147:18;;10140:31;;;9945:4;;10188:46;;10214:19;;10206:6;10188:46;:::i;:::-;10180:54;9751:489;-1:-1:-1;;;;;;9751:489:28:o;10245:249::-;10314:6;10367:2;10355:9;10346:7;10342:23;10338:32;10335:52;;;10383:1;10380;10373:12;10335:52;10415:9;10409:16;10434:30;10458:5;10434:30;:::i",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "constructor": {
        "details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      }
    },
    "version": 1
  },
  "offset": [
    628,
    16955
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1B3 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x1EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x111 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x164 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE7 PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH2 0x228 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x27A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xD89 JUMP JUMPDEST PUSH2 0x124 PUSH2 0x11F CALLDATASIZE PUSH1 0x4 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x30C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x14F PUSH2 0x14A CALLDATASIZE PUSH1 0x4 PUSH2 0xDD1 JUMP JUMPDEST PUSH2 0x333 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14F PUSH2 0x15F CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x44D JUMP JUMPDEST PUSH2 0x14F PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH2 0x124 PUSH2 0x185 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x19D PUSH2 0x198 CALLDATASIZE PUSH1 0x4 PUSH2 0xE37 JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xF3 JUMP JUMPDEST PUSH2 0x104 PUSH2 0x57F JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1C1 CALLDATASIZE PUSH1 0x4 PUSH2 0xE52 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x14F PUSH2 0x1D4 CALLDATASIZE PUSH1 0x4 PUSH2 0xEA4 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x104 PUSH2 0x1E7 CALLDATASIZE PUSH1 0x4 PUSH2 0xD9C JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0xE7 PUSH2 0x1FA CALLDATASIZE PUSH1 0x4 PUSH2 0xF80 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x259 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x274 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B5 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x302 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x302 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x649 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33E DUP3 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x3B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x3CC JUMPI POP PUSH2 0x3CC DUP2 CALLER PUSH2 0x1FA JUMP JUMPDEST PUSH2 0x43E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 PUSH2 0x6AB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x457 CALLER DUP3 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x473 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x448 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x59D JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x274 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x3634B21037BBB732B9 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x289 SWAP1 PUSH2 0xFB3 JUMP JUMPDEST PUSH2 0x599 CALLER DUP4 DUP4 PUSH2 0x909 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5A7 CALLER DUP4 PUSH2 0x719 JUMP JUMPDEST PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0xFED JUMP JUMPDEST PUSH2 0x5CF DUP5 DUP5 DUP5 DUP5 PUSH2 0x9D7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5E0 DUP3 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x642 JUMP JUMPDEST DUP1 PUSH2 0x621 DUP5 PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x632 SWAP3 SWAP2 SWAP1 PUSH2 0x103A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0x6E0 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 DUP4 PUSH2 0x499 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x76C JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST DUP1 PUSH2 0x790 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x785 DUP5 PUSH2 0x30C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7AB DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7D1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x833 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH2 0x840 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xA9D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x853 DUP3 PUSH2 0x499 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x879 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x1069 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE SWAP1 DUP8 AND DUP1 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE DUP7 DUP7 MSTORE PUSH1 0x2 SWAP1 SWAP5 MSTORE DUP3 DUP6 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND DUP5 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP5 SWAP4 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x96A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x9E2 DUP5 DUP5 DUP5 PUSH2 0x798 JUMP JUMPDEST PUSH2 0x9EE DUP5 DUP5 DUP5 DUP5 PUSH2 0xB25 JUMP JUMPDEST PUSH2 0x5CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x10AE JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xA17 DUP4 PUSH2 0xC26 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA37 JUMPI PUSH2 0xA37 PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA61 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP DUP2 DUP2 ADD PUSH1 0x20 ADD JUMPDEST PUSH1 0x0 NOT ADD PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DIV SWAP5 POP DUP5 PUSH2 0xA6B JUMPI POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x5CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND ISZERO PUSH2 0xAE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xADD SWAP1 DUP5 SWAP1 PUSH2 0x1116 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5CF JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xB1A SWAP1 DUP5 SWAP1 PUSH2 0x112D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xC1B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xB69 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1145 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xBA4 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xBA1 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1182 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xC01 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xBD2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBD7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3A7 SWAP1 PUSH2 0x10AE JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0x790 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 LT PUSH2 0xC65 JUMPI PUSH19 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01 PUSH1 0x40 SHL DUP4 DIV SWAP3 POP PUSH1 0x40 ADD JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0xC91 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DIV SWAP3 POP PUSH1 0x20 ADD JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0xCAF JUMPI PUSH7 0x2386F26FC10000 DUP4 DIV SWAP3 POP PUSH1 0x10 ADD JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0xCC7 JUMPI PUSH4 0x5F5E100 DUP4 DIV SWAP3 POP PUSH1 0x8 ADD JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0xCDB JUMPI PUSH2 0x2710 DUP4 DIV SWAP3 POP PUSH1 0x4 ADD JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0xCED JUMPI PUSH1 0x64 DUP4 DIV SWAP3 POP PUSH1 0x2 ADD JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x274 JUMPI PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x642 DUP2 PUSH2 0xCFE JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD4C JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD34 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x5CF JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xD75 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x642 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xDCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDED DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xE10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE19 DUP5 PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP PUSH2 0xE27 PUSH1 0x20 DUP6 ADD PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x642 DUP3 PUSH2 0xDB5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE6E DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEC3 DUP6 PUSH2 0xDB5 JUMP JUMPDEST SWAP4 POP PUSH2 0xED1 PUSH1 0x20 DUP7 ADD PUSH2 0xDB5 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xEF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0xF1B JUMPI PUSH2 0xF1B PUSH2 0xE8E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0xF43 JUMPI PUSH2 0xF43 PUSH2 0xE8E JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP11 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0xF5C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF93 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF9C DUP4 PUSH2 0xDB5 JUMP JUMPDEST SWAP2 POP PUSH2 0xFAA PUSH1 0x20 DUP5 ADD PUSH2 0xDB5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xFC7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xFE7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x1C881BDC88185C1C1C9BDD9959 PUSH1 0x9A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x104C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xD31 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1060 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xD31 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x37BBB732B9 PUSH1 0xD9 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1128 JUMPI PUSH2 0x1128 PUSH2 0x1100 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1140 JUMPI PUSH2 0x1140 PUSH2 0x1100 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1178 SWAP1 DUP4 ADD DUP5 PUSH2 0xD5D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x642 DUP2 PUSH2 0xCFE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 BASEFEE DUP10 GAS PUSH17 0xBF8213A1E07D6CD1E6A9AD4CA9905E7DFA CALL 0x22 0xE9 CODECOPY 0xCD PUSH3 0xDA0C7F 0x5E PUSH5 0x736F6C6343 STOP ADDMOD 0xE STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "5": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "6": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "7": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "8": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "12": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "3"
    },
    "16": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "17": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "POP",
      "path": "3"
    },
    "18": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "21": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "LT",
      "path": "3"
    },
    "22": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCF"
    },
    "25": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "26": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "CALLDATALOAD",
      "path": "3"
    },
    "29": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "SHR",
      "path": "3"
    },
    "32": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "33": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "38": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "GT",
      "path": "3"
    },
    "39": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8C"
    },
    "42": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "43": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "44": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "49": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "GT",
      "path": "3"
    },
    "50": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x66"
    },
    "53": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "54": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "55": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xA22CB465"
    },
    "60": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "61": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B3"
    },
    "64": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "65": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "66": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xB88D4FDE"
    },
    "71": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "72": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C6"
    },
    "75": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "76": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "77": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xC87B56DD"
    },
    "82": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "83": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D9"
    },
    "86": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "87": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "88": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0xE985E9C5"
    },
    "93": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "94": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1EC"
    },
    "97": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "98": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "100": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "101": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "3"
    },
    "102": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "103": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "104": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6352211E"
    },
    "109": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "110": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177"
    },
    "113": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "114": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "115": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x70A08231"
    },
    "120": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "121": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18A"
    },
    "124": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "125": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "126": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95D89B41"
    },
    "131": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "132": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1AB"
    },
    "135": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "136": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "138": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "139": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "3"
    },
    "140": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "141": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "142": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x1FFC9A7"
    },
    "147": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "148": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD4"
    },
    "151": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "152": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "153": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x6FDDE03"
    },
    "158": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "159": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFC"
    },
    "162": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "163": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "164": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x81812FC"
    },
    "169": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "170": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x111"
    },
    "173": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "174": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "175": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x95EA7B3"
    },
    "180": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "181": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x13C"
    },
    "184": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "185": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "186": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x23B872DD"
    },
    "191": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "192": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x151"
    },
    "195": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "196": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "197": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x42842E0E"
    },
    "202": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "EQ",
      "path": "3"
    },
    "203": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x164"
    },
    "206": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "207": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "208": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "210": {
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "DUP1",
      "path": "3"
    },
    "211": {
      "first_revert": true,
      "fn": null,
      "offset": [
        628,
        16955
      ],
      "op": "REVERT",
      "path": "3"
    },
    "212": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "213": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "216": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE2"
    },
    "219": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "220": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "222": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD14"
    },
    "225": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "3"
    },
    "226": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "227": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x228"
    },
    "230": {
      "fn": "ERC721.supportsInterface",
      "jump": "i",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "3"
    },
    "231": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "232": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "234": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "235": {
      "op": "SWAP1"
    },
    "236": {
      "op": "ISZERO"
    },
    "237": {
      "op": "ISZERO"
    },
    "238": {
      "op": "DUP2"
    },
    "239": {
      "op": "MSTORE"
    },
    "240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "242": {
      "op": "ADD"
    },
    "243": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "244": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "246": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "247": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "DUP1",
      "path": "3"
    },
    "248": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "249": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SUB",
      "path": "3"
    },
    "250": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "251": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "RETURN",
      "path": "3"
    },
    "252": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "253": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "256": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27A"
    },
    "259": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "260": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "261": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "263": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "264": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "267": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "268": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "269": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD89"
    },
    "272": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "273": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "274": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "277": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11F"
    },
    "280": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "281": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "283": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9C"
    },
    "286": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "287": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "288": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "291": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "292": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "293": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "295": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "296": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "298": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "300": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "302": {
      "op": "SHL"
    },
    "303": {
      "op": "SUB"
    },
    "304": {
      "op": "SWAP1"
    },
    "305": {
      "op": "SWAP2"
    },
    "306": {
      "op": "AND"
    },
    "307": {
      "op": "DUP2"
    },
    "308": {
      "op": "MSTORE"
    },
    "309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "311": {
      "op": "ADD"
    },
    "312": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "315": {
      "op": "JUMP"
    },
    "316": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "317": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "320": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14A"
    },
    "323": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "324": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "326": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDD1"
    },
    "329": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "330": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "331": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x333"
    },
    "334": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "335": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "336": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "STOP",
      "path": "3"
    },
    "337": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "338": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "341": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15F"
    },
    "344": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "345": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "347": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFB"
    },
    "350": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "351": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "352": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x44D"
    },
    "355": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMP",
      "path": "3"
    },
    "356": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "357": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "360": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x172"
    },
    "363": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "364": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "366": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xDFB"
    },
    "369": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMP",
      "path": "3"
    },
    "370": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "371": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x47E"
    },
    "374": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMP",
      "path": "3"
    },
    "375": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "376": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x124"
    },
    "379": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x185"
    },
    "382": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "383": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "385": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9C"
    },
    "388": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "3"
    },
    "389": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "390": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "393": {
      "fn": "ERC721.ownerOf",
      "jump": "i",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMP",
      "path": "3"
    },
    "394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x19D"
    },
    "398": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x198"
    },
    "401": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE37"
    },
    "407": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "408": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "409": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x4F9"
    },
    "412": {
      "fn": "ERC721.balanceOf",
      "jump": "i",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "413": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "414": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "416": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "417": {
      "op": "SWAP1"
    },
    "418": {
      "op": "DUP2"
    },
    "419": {
      "op": "MSTORE"
    },
    "420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "422": {
      "op": "ADD"
    },
    "423": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF3"
    },
    "426": {
      "op": "JUMP"
    },
    "427": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "428": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "431": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x57F"
    },
    "434": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMP",
      "path": "3"
    },
    "435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "436": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "439": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C1"
    },
    "442": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "443": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "445": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE52"
    },
    "448": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "449": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "450": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x58E"
    },
    "453": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "455": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x14F"
    },
    "458": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D4"
    },
    "461": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xEA4"
    },
    "467": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "3"
    },
    "468": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "469": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59D"
    },
    "472": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "3"
    },
    "473": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "474": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x104"
    },
    "477": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7"
    },
    "480": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "481": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "483": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD9C"
    },
    "486": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "487": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "488": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5D5"
    },
    "491": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "492": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "493": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE7"
    },
    "496": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "499": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "500": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "502": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xF80"
    },
    "505": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "3"
    },
    "506": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "511": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "513": {
      "op": "SHL"
    },
    "514": {
      "op": "SUB"
    },
    "515": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "516": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "3"
    },
    "517": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "3"
    },
    "518": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "520": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "521": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "522": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "523": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "525": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "527": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "528": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "529": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "530": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "532": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "533": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "3"
    },
    "534": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "535": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "536": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "537": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "538": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "3"
    },
    "539": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP3",
      "path": "3"
    },
    "540": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "541": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "542": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "543": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "544": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "545": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "546": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "547": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "549": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "3"
    },
    "550": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "551": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "3"
    },
    "552": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "553": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1672,
        1676
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "559": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "561": {
      "op": "SHL"
    },
    "562": {
      "op": "SUB"
    },
    "563": {
      "op": "NOT"
    },
    "564": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 1
    },
    "565": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "AND",
      "path": "3"
    },
    "566": {
      "op": "PUSH4",
      "value": "0x80AC58CD"
    },
    "571": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "573": {
      "op": "SHL"
    },
    "574": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "EQ",
      "path": "3"
    },
    "575": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1747
      ],
      "op": "DUP1",
      "path": "3"
    },
    "576": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x259"
    },
    "579": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "580": {
      "op": "POP"
    },
    "581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "585": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "587": {
      "op": "SHL"
    },
    "588": {
      "op": "SUB"
    },
    "589": {
      "op": "NOT"
    },
    "590": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "DUP3",
      "path": "3"
    },
    "591": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "AND",
      "path": "3"
    },
    "592": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "599": {
      "op": "SHL"
    },
    "600": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1763,
        1811
      ],
      "op": "EQ",
      "path": "3"
    },
    "601": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1811
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "602": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "DUP1",
      "path": "3"
    },
    "603": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x274"
    },
    "606": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1707,
        1863
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "607": {
      "op": "POP"
    },
    "608": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "613": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "615": {
      "op": "SHL"
    },
    "616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "620": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "622": {
      "op": "SHL"
    },
    "623": {
      "op": "SUB"
    },
    "624": {
      "op": "NOT"
    },
    "625": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "DUP4",
      "path": "11",
      "statement": 2
    },
    "626": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "AND",
      "path": "11"
    },
    "627": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        937,
        977
      ],
      "op": "EQ",
      "path": "11"
    },
    "628": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1827,
        1863
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "629": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1688,
        1863
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "630": {
      "fn": "ERC721.supportsInterface",
      "offset": [
        1570,
        1870
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "631": {
      "op": "POP"
    },
    "632": {
      "op": "POP"
    },
    "633": {
      "fn": "ERC721.supportsInterface",
      "jump": "o",
      "offset": [
        1570,
        1870
      ],
      "op": "JUMP",
      "path": "3"
    },
    "634": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "635": {
      "fn": "ERC721.name",
      "offset": [
        2525,
        2538
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "637": {
      "fn": "ERC721.name",
      "offset": [
        2557,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 3,
      "value": "0x0"
    },
    "639": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "640": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "641": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "644": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "645": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB3"
    },
    "648": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "649": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "650": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "651": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "653": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "654": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "656": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "657": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "658": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "3"
    },
    "659": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "3"
    },
    "660": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "662": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "663": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "665": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "666": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "667": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "668": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "669": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "671": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "672": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "673": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "674": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "675": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "676": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "677": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "678": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "679": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "681": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "682": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "683": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "684": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "685": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2B5"
    },
    "688": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "689": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB3"
    },
    "692": {
      "fn": "ERC721.name",
      "jump": "i",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "693": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "694": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "695": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "696": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "699": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "700": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "701": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "703": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "LT",
      "path": "3"
    },
    "704": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2D7"
    },
    "707": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "708": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x100"
    },
    "711": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "712": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "713": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "714": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DIV",
      "path": "3"
    },
    "715": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MUL",
      "path": "3"
    },
    "716": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "717": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "718": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "719": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "721": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "722": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "723": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x302"
    },
    "726": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMP",
      "path": "3"
    },
    "727": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "728": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "729": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "730": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "731": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "732": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "734": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "735": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "737": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "739": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "740": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "741": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "742": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "743": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "744": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP2",
      "path": "3"
    },
    "745": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "746": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "747": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "749": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "750": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "751": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "753": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "754": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP1",
      "path": "3"
    },
    "755": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP4",
      "path": "3"
    },
    "756": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "GT",
      "path": "3"
    },
    "757": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E5"
    },
    "760": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "761": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "762": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "763": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SUB",
      "path": "3"
    },
    "764": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "766": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "AND",
      "path": "3"
    },
    "767": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "DUP3",
      "path": "3"
    },
    "768": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "ADD",
      "path": "3"
    },
    "769": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "770": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "771": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "772": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "773": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "774": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "775": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "776": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "777": {
      "fn": "ERC721.name",
      "offset": [
        2550,
        2562
      ],
      "op": "POP",
      "path": "3"
    },
    "778": {
      "fn": "ERC721.name",
      "offset": [
        2471,
        2569
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "779": {
      "fn": "ERC721.name",
      "jump": "o",
      "offset": [
        2471,
        2569
      ],
      "op": "JUMP",
      "path": "3"
    },
    "780": {
      "fn": "ERC721.getApproved",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "781": {
      "fn": "ERC721.getApproved",
      "offset": [
        4011,
        4018
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "783": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 4,
      "value": "0x317"
    },
    "786": {
      "fn": "ERC721.getApproved",
      "offset": [
        4045,
        4052
      ],
      "op": "DUP3",
      "path": "3"
    },
    "787": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4044
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "790": {
      "fn": "ERC721.getApproved",
      "jump": "i",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMP",
      "path": "3"
    },
    "791": {
      "fn": "ERC721.getApproved",
      "offset": [
        4030,
        4053
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "792": {
      "op": "POP"
    },
    "793": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 5,
      "value": "0x0"
    },
    "795": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "796": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "DUP2",
      "path": "3"
    },
    "797": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "798": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4086
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "800": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "802": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "803": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "805": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "806": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "807": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "812": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "814": {
      "op": "SHL"
    },
    "815": {
      "op": "SUB"
    },
    "816": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "AND",
      "path": "3"
    },
    "817": {
      "fn": "ERC721.getApproved",
      "offset": [
        4071,
        4095
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "818": {
      "fn": "ERC721.getApproved",
      "jump": "o",
      "offset": [
        3935,
        4102
      ],
      "op": "JUMP",
      "path": "3"
    },
    "819": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "820": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3561
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "822": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x33E"
    },
    "825": {
      "fn": "ERC721.approve",
      "offset": [
        3579,
        3586
      ],
      "op": "DUP3",
      "path": "3"
    },
    "826": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "829": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMP",
      "path": "3"
    },
    "830": {
      "fn": "ERC721.approve",
      "offset": [
        3564,
        3587
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "831": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "832": {
      "fn": "ERC721.approve",
      "offset": [
        3548,
        3587
      ],
      "op": "POP",
      "path": "3"
    },
    "833": {
      "fn": "ERC721.approve",
      "offset": [
        3611,
        3616
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 6
    },
    "834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "840": {
      "op": "SHL"
    },
    "841": {
      "op": "SUB"
    },
    "842": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "3"
    },
    "843": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3607
      ],
      "op": "DUP4",
      "path": "3"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "AND",
      "path": "3"
    },
    "853": {
      "branch": 65,
      "fn": "ERC721.approve",
      "offset": [
        3605,
        3616
      ],
      "op": "SUB",
      "path": "3"
    },
    "854": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B0"
    },
    "857": {
      "branch": 65,
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "858": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "860": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP2",
      "path": "3"
    },
    "869": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "874": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP3",
      "path": "3"
    },
    "875": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "ADD",
      "path": "3"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
    },
    "917": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "919": {
      "op": "DUP3"
    },
    "920": {
      "op": "ADD"
    },
    "921": {
      "op": "MSTORE"
    },
    "922": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "924": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "926": {
      "op": "SHL"
    },
    "927": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "929": {
      "op": "DUP3"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "op": "MSTORE"
    },
    "932": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "934": {
      "op": "ADD"
    },
    "935": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "936": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "938": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "939": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "DUP1",
      "path": "3"
    },
    "940": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "941": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SUB",
      "path": "3"
    },
    "942": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "943": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "3"
    },
    "944": {
      "fn": "ERC721.approve",
      "offset": [
        3597,
        3654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "945": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9",
      "statement": 7
    },
    "946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "952": {
      "op": "SHL"
    },
    "953": {
      "op": "SUB"
    },
    "954": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 8
    },
    "955": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "AND",
      "path": "3"
    },
    "956": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "EQ",
      "path": "3"
    },
    "957": {
      "branch": 66,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3707
      ],
      "op": "DUP1",
      "path": "3"
    },
    "958": {
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC"
    },
    "961": {
      "branch": 66,
      "fn": "ERC721.approve",
      "offset": [
        3686,
        3748
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "962": {
      "op": "POP"
    },
    "963": {
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3CC"
    },
    "966": {
      "fn": "ERC721.approve",
      "offset": [
        3728,
        3733
      ],
      "op": "DUP2",
      "path": "3"
    },
    "967": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "968": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4388,
        4550
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1FA"
    },
    "971": {
      "fn": "ERC721.isApprovedForAll",
      "jump": "i",
      "offset": [
        4388,
        4550
      ],
      "op": "JUMP",
      "path": "3"
    },
    "972": {
      "branch": 67,
      "fn": "ERC721.approve",
      "offset": [
        3711,
        3748
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "973": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x43E"
    },
    "976": {
      "branch": 67,
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "977": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "979": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "980": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "984": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "986": {
      "op": "SHL"
    },
    "987": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP2",
      "path": "3"
    },
    "988": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "989": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "991": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "993": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "DUP3",
      "path": "3"
    },
    "994": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "ADD",
      "path": "3"
    },
    "995": {
      "op": "MSTORE"
    },
    "996": {
      "op": "PUSH1",
      "value": "0x3D"
    },
    "998": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1000": {
      "op": "DUP3"
    },
    "1001": {
      "op": "ADD"
    },
    "1002": {
      "op": "MSTORE"
    },
    "1003": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1038": {
      "op": "DUP3"
    },
    "1039": {
      "op": "ADD"
    },
    "1040": {
      "op": "MSTORE"
    },
    "1041": {
      "op": "PUSH32",
      "value": "0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
    },
    "1074": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1076": {
      "op": "DUP3"
    },
    "1077": {
      "op": "ADD"
    },
    "1078": {
      "op": "MSTORE"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1085": {
      "op": "JUMP"
    },
    "1086": {
      "fn": "ERC721.approve",
      "offset": [
        3665,
        3835
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1087": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 9,
      "value": "0x448"
    },
    "1090": {
      "fn": "ERC721.approve",
      "offset": [
        3855,
        3857
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1091": {
      "fn": "ERC721.approve",
      "offset": [
        3859,
        3866
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1092": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3854
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6AB"
    },
    "1095": {
      "fn": "ERC721.approve",
      "jump": "i",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1096": {
      "fn": "ERC721.approve",
      "offset": [
        3846,
        3867
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1097": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "1098": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "1099": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "1100": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1101": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4612,
        4938
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1102": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 10,
      "value": "0x457"
    },
    "1105": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1106": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4834,
        4841
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1107": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4819
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x719"
    },
    "1110": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1111": {
      "branch": 68,
      "fn": "ERC721.transferFrom",
      "offset": [
        4801,
        4842
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1112": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x473"
    },
    "1115": {
      "branch": 68,
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1116": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1118": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1119": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1123": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1125": {
      "op": "SHL"
    },
    "1126": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1127": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1128": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1130": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "ADD",
      "path": "3"
    },
    "1131": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1134": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1135": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFED"
    },
    "1138": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1139": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4793,
        4892
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1140": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4903,
        4931
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 11,
      "value": "0x448"
    },
    "1143": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4913,
        4917
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1144": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4919,
        4921
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1145": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4923,
        4930
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1146": {
      "fn": "ERC721.transferFrom",
      "offset": [
        4903,
        4912
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x798"
    },
    "1149": {
      "fn": "ERC721.transferFrom",
      "jump": "i",
      "offset": [
        4903,
        4931
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1150": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5004,
        5183
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1151": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 12,
      "value": "0x448"
    },
    "1154": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5154,
        5158
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1155": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5160,
        5162
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1156": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5164,
        5171
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1157": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1159": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1160": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1161": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1163": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "ADD",
      "path": "3"
    },
    "1164": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1166": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1167": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1168": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1170": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1171": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1172": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5176
      ],
      "op": "POP",
      "path": "3"
    },
    "1173": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5137,
        5153
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x59D"
    },
    "1176": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5137,
        5176
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1177": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2190,
        2409
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1178": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2262,
        2269
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1180": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 13
    },
    "1181": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1182": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1183": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1185": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1187": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1188": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1190": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1191": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1192": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1193": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1195": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1197": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1199": {
      "op": "SHL"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "AND",
      "path": "3"
    },
    "1202": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1203": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 14,
      "value": "0x274"
    },
    "1206": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1207": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1209": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1210": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1214": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1216": {
      "op": "SHL"
    },
    "1217": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1218": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1219": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1223": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1224": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "ADD",
      "path": "3"
    },
    "1225": {
      "op": "MSTORE"
    },
    "1226": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "ADD"
    },
    "1232": {
      "op": "MSTORE"
    },
    "1233": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1258": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1260": {
      "op": "SHL"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1263": {
      "op": "DUP3"
    },
    "1264": {
      "op": "ADD"
    },
    "1265": {
      "op": "MSTORE"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1268": {
      "op": "ADD"
    },
    "1269": {
      "fn": "ERC721.ownerOf",
      "offset": [
        2324,
        2380
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1272": {
      "op": "JUMP"
    },
    "1273": {
      "fn": "ERC721.balanceOf",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1274": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2001,
        2008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1282": {
      "op": "SHL"
    },
    "1283": {
      "op": "SUB"
    },
    "1284": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 15
    },
    "1285": {
      "branch": 69,
      "fn": "ERC721.balanceOf",
      "offset": [
        2028,
        2047
      ],
      "op": "AND",
      "path": "3"
    },
    "1286": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x563"
    },
    "1289": {
      "branch": 69,
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1290": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1292": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1293": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1301": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1302": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1304": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1306": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1307": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "ADD",
      "path": "3"
    },
    "1308": {
      "op": "MSTORE"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "1311": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1313": {
      "op": "DUP3"
    },
    "1314": {
      "op": "ADD"
    },
    "1315": {
      "op": "MSTORE"
    },
    "1316": {
      "op": "PUSH32",
      "value": "0x4552433732313A2061646472657373207A65726F206973206E6F742061207661"
    },
    "1349": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1351": {
      "op": "DUP3"
    },
    "1352": {
      "op": "ADD"
    },
    "1353": {
      "op": "MSTORE"
    },
    "1354": {
      "op": "PUSH9",
      "value": "0x3634B21037BBB732B9"
    },
    "1364": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "1366": {
      "op": "SHL"
    },
    "1367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1369": {
      "op": "DUP3"
    },
    "1370": {
      "op": "ADD"
    },
    "1371": {
      "op": "MSTORE"
    },
    "1372": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1374": {
      "op": "ADD"
    },
    "1375": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1378": {
      "op": "JUMP"
    },
    "1379": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2020,
        2093
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1380": {
      "op": "POP"
    },
    "1381": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1387": {
      "op": "SHL"
    },
    "1388": {
      "op": "SUB"
    },
    "1389": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "AND",
      "path": "3",
      "statement": 16
    },
    "1390": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1392": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1393": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1394": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1395": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2119
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "1397": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1399": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1400": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1402": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1403": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1404": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1405": {
      "fn": "ERC721.balanceOf",
      "offset": [
        2110,
        2126
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1406": {
      "fn": "ERC721.balanceOf",
      "jump": "o",
      "offset": [
        1929,
        2133
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1407": {
      "fn": "ERC721.symbol",
      "offset": [
        2633,
        2735
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1408": {
      "fn": "ERC721.symbol",
      "offset": [
        2689,
        2702
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1410": {
      "fn": "ERC721.symbol",
      "offset": [
        2721,
        2728
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 17,
      "value": "0x1"
    },
    "1412": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1413": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1414": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x289"
    },
    "1417": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1418": {
      "fn": "ERC721.symbol",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFB3"
    },
    "1421": {
      "fn": "ERC721.symbol",
      "jump": "i",
      "offset": [
        2714,
        2728
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1422": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1423": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 18,
      "value": "0x599"
    },
    "1426": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1427": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4296,
        4304
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1428": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4306,
        4314
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1429": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4281
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x909"
    },
    "1432": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "i",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1433": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4263,
        4315
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1434": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "3"
    },
    "1435": {
      "fn": "ERC721.setApprovalForAll",
      "offset": [
        4169,
        4322
      ],
      "op": "POP",
      "path": "3"
    },
    "1436": {
      "fn": "ERC721.setApprovalForAll",
      "jump": "o",
      "offset": [
        4169,
        4322
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1437": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1438": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5458
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 19,
      "value": "0x5A7"
    },
    "1441": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "1442": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5450,
        5457
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1443": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5435
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x719"
    },
    "1446": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5417,
        5458
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1447": {
      "branch": 70,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5417,
        5458
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1448": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5C3"
    },
    "1451": {
      "branch": 70,
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1452": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1454": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1455": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1459": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1461": {
      "op": "SHL"
    },
    "1462": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1463": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1464": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1466": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "ADD",
      "path": "3"
    },
    "1467": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1470": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1471": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFED"
    },
    "1474": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1475": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5409,
        5508
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1476": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5556
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 20,
      "value": "0x5CF"
    },
    "1479": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5532,
        5536
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1480": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5538,
        5540
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1481": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5542,
        5549
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1482": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5551,
        5555
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1483": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5531
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x9D7"
    },
    "1486": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "i",
      "offset": [
        5518,
        5556
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1487": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5518,
        5556
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1488": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "3"
    },
    "1489": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "3"
    },
    "1490": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "3"
    },
    "1491": {
      "fn": "ERC721.safeTransferFrom",
      "offset": [
        5249,
        5563
      ],
      "op": "POP",
      "path": "3"
    },
    "1492": {
      "fn": "ERC721.safeTransferFrom",
      "jump": "o",
      "offset": [
        5249,
        5563
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1493": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1494": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2874,
        2887
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "1496": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 21,
      "value": "0x5E0"
    },
    "1499": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2914,
        2921
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1500": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2913
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x649"
    },
    "1503": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1504": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2899,
        2922
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1505": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2954
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1507": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5F7"
    },
    "1510": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 22,
      "value": "0x40"
    },
    "1512": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1513": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1514": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1516": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1517": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "ADD",
      "path": "3"
    },
    "1518": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1519": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1520": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1523": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1524": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1525": {
      "fn": "ERC721._baseURI",
      "offset": [
        3395,
        3404
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1526": {
      "fn": "ERC721._baseURI",
      "offset": [
        3319,
        3411
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1527": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2957,
        2967
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1528": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1529": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2933,
        2967
      ],
      "op": "POP",
      "path": "3"
    },
    "1530": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3008,
        3009
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x0"
    },
    "1532": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2990,
        2997
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1533": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3005
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1534": {
      "branch": 71,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3009
      ],
      "op": "GT",
      "path": "3"
    },
    "1535": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x617"
    },
    "1538": {
      "branch": 71,
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1539": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1541": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1542": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1543": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1545": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "ADD",
      "path": "3"
    },
    "1546": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1548": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1549": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1550": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1552": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1553": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1554": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "POP",
      "path": "3"
    },
    "1555": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x642"
    },
    "1558": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1559": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1560": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3036,
        3043
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1561": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x621"
    },
    "1564": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3052
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1565": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3061
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA0A"
    },
    "1568": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1569": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3045,
        3063
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1570": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1572": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1573": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1575": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "ADD",
      "path": "3"
    },
    "1576": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x632"
    },
    "1579": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1580": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1581": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1582": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x103A"
    },
    "1585": {
      "fn": "ERC721.tokenURI",
      "jump": "i",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1586": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1587": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1589": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1590": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1592": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1593": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1594": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "3"
    },
    "1595": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SUB",
      "path": "3"
    },
    "1596": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1597": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1598": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1599": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1601": {
      "fn": "ERC721.tokenURI",
      "offset": [
        3019,
        3064
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1602": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2984,
        3070
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1603": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2977,
        3070
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1604": {
      "fn": "ERC721.tokenURI",
      "offset": [
        2801,
        3077
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1605": {
      "op": "POP"
    },
    "1606": {
      "op": "POP"
    },
    "1607": {
      "op": "POP"
    },
    "1608": {
      "fn": "ERC721.tokenURI",
      "jump": "o",
      "offset": [
        2801,
        3077
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1609": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13466,
        13599
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1610": {
      "fn": "ERC721._exists",
      "offset": [
        7321,
        7325
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1612": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1613": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1614": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1615": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6937
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "1617": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1619": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1620": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1622": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1623": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1624": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1631": {
      "op": "SHL"
    },
    "1632": {
      "op": "SUB"
    },
    "1633": {
      "fn": "ERC721._ownerOf",
      "offset": [
        6930,
        6946
      ],
      "op": "AND",
      "path": "3"
    },
    "1634": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 24,
      "value": "0x6A8"
    },
    "1637": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1638": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1640": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1647": {
      "op": "SHL"
    },
    "1648": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1649": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1652": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1654": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1655": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "ADD",
      "path": "3"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1661": {
      "op": "DUP3"
    },
    "1662": {
      "op": "ADD"
    },
    "1663": {
      "op": "MSTORE"
    },
    "1664": {
      "op": "PUSH24",
      "value": "0x115490CDCC8C4E881A5B9D985B1A59081D1BDAD95B881251"
    },
    "1689": {
      "op": "PUSH1",
      "value": "0x42"
    },
    "1691": {
      "op": "SHL"
    },
    "1692": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1694": {
      "op": "DUP3"
    },
    "1695": {
      "op": "ADD"
    },
    "1696": {
      "op": "MSTORE"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1699": {
      "op": "ADD"
    },
    "1700": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1703": {
      "op": "JUMP"
    },
    "1704": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13539,
        13592
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1705": {
      "fn": "ERC721._requireMinted",
      "offset": [
        13466,
        13599
      ],
      "op": "POP",
      "path": "3"
    },
    "1706": {
      "fn": "ERC721._requireMinted",
      "jump": "o",
      "offset": [
        13466,
        13599
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1707": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1708": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 25,
      "value": "0x0"
    },
    "1710": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1711": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1712": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1713": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12857
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1715": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1717": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1718": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1720": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1721": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1722": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1723": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1730": {
      "op": "SHL"
    },
    "1731": {
      "op": "SUB"
    },
    "1732": {
      "op": "NOT"
    },
    "1733": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "AND",
      "path": "3"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1740": {
      "op": "SHL"
    },
    "1741": {
      "op": "SUB"
    },
    "1742": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1743": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "AND",
      "path": "3"
    },
    "1744": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1745": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1746": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "OR",
      "path": "3"
    },
    "1747": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1748": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1749": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12871
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "1750": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1751": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1752": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12918
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 26,
      "value": "0x6E0"
    },
    "1755": {
      "fn": "ERC721._approve",
      "offset": [
        12842,
        12866
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1756": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12909
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1759": {
      "fn": "ERC721._approve",
      "jump": "i",
      "offset": [
        12895,
        12918
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1760": {
      "fn": "ERC721._approve",
      "offset": [
        12895,
        12918
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1767": {
      "op": "SHL"
    },
    "1768": {
      "op": "SUB"
    },
    "1769": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "AND",
      "path": "3"
    },
    "1770": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1803": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1805": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1806": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1808": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1809": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1810": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "1811": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SUB",
      "path": "3"
    },
    "1812": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1813": {
      "fn": "ERC721._approve",
      "offset": [
        12886,
        12932
      ],
      "op": "LOG4",
      "path": "3"
    },
    "1814": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "1815": {
      "fn": "ERC721._approve",
      "offset": [
        12768,
        12939
      ],
      "op": "POP",
      "path": "3"
    },
    "1816": {
      "fn": "ERC721._approve",
      "jump": "o",
      "offset": [
        12768,
        12939
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1817": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7540,
        7801
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1818": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7633,
        7637
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1820": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7662
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1821": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7688
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x725"
    },
    "1824": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7680,
        7687
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1825": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7679
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1828": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7665,
        7688
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1829": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7665,
        7688
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1830": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7688
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1831": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7649,
        7688
      ],
      "op": "POP",
      "path": "3"
    },
    "1832": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7717,
        7722
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 27
    },
    "1833": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1839": {
      "op": "SHL"
    },
    "1840": {
      "op": "SUB"
    },
    "1841": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "AND",
      "path": "3"
    },
    "1842": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7713
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "AND",
      "path": "3"
    },
    "1852": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7722
      ],
      "op": "EQ",
      "path": "3"
    },
    "1853": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1854": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x76C"
    },
    "1857": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7758
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1858": {
      "op": "POP"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1865": {
      "op": "SHL"
    },
    "1866": {
      "op": "SUB"
    },
    "1867": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1868": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1869": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "AND",
      "path": "3"
    },
    "1870": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4485,
        4489
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1872": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1873": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1874": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1875": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4526
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "1877": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "1879": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1880": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1881": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1882": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1884": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1885": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1886": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4533
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1887": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1888": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP9",
      "path": "3"
    },
    "1889": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "3"
    },
    "1890": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1891": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1892": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "1893": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1894": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1895": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "1896": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1897": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "1899": {
      "fn": "ERC721.isApprovedForAll",
      "offset": [
        4508,
        4543
      ],
      "op": "AND",
      "path": "3"
    },
    "1900": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7726,
        7758
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1901": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1902": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x790"
    },
    "1905": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1906": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "POP",
      "path": "3"
    },
    "1907": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7786,
        7793
      ],
      "op": "DUP4",
      "path": "3"
    },
    "1908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1914": {
      "op": "SHL"
    },
    "1915": {
      "op": "SUB"
    },
    "1916": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "AND",
      "path": "3"
    },
    "1917": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7782
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x785"
    },
    "1920": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7774,
        7781
      ],
      "op": "DUP5",
      "path": "3"
    },
    "1921": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7773
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x30C"
    },
    "1924": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "i",
      "offset": [
        7762,
        7782
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1925": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7782
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "AND",
      "path": "3"
    },
    "1935": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7762,
        7793
      ],
      "op": "EQ",
      "path": "3"
    },
    "1936": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7706,
        7793
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1937": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7698,
        7794
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "1938": {
      "fn": "ERC721._isApprovedOrOwner",
      "offset": [
        7540,
        7801
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "1939": {
      "op": "POP"
    },
    "1940": {
      "op": "POP"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "ERC721._isApprovedOrOwner",
      "jump": "o",
      "offset": [
        7540,
        7801
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1944": {
      "fn": "ERC721._transfer",
      "offset": [
        11423,
        12656
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1945": {
      "fn": "ERC721._transfer",
      "offset": [
        11577,
        11581
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 28
    },
    "1946": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1950": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1952": {
      "op": "SHL"
    },
    "1953": {
      "op": "SUB"
    },
    "1954": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "AND",
      "path": "3"
    },
    "1955": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11573
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7AB"
    },
    "1958": {
      "fn": "ERC721._transfer",
      "offset": [
        11565,
        11572
      ],
      "op": "DUP3",
      "path": "3"
    },
    "1959": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11564
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "1962": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11550,
        11573
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1963": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11573
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1966": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1970": {
      "op": "SHL"
    },
    "1971": {
      "op": "SUB"
    },
    "1972": {
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "AND",
      "path": "3"
    },
    "1973": {
      "branch": 72,
      "fn": "ERC721._transfer",
      "offset": [
        11550,
        11581
      ],
      "op": "EQ",
      "path": "3"
    },
    "1974": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7D1"
    },
    "1977": {
      "branch": 72,
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1978": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "1980": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "1981": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1985": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1987": {
      "op": "SHL"
    },
    "1988": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "DUP2",
      "path": "3"
    },
    "1989": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "1990": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1992": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "ADD",
      "path": "3"
    },
    "1993": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "1996": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1997": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1069"
    },
    "2000": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2001": {
      "fn": "ERC721._transfer",
      "offset": [
        11542,
        11623
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2006": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2008": {
      "op": "SHL"
    },
    "2009": {
      "op": "SUB"
    },
    "2010": {
      "fn": "ERC721._transfer",
      "offset": [
        11641,
        11657
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 29
    },
    "2011": {
      "branch": 73,
      "fn": "ERC721._transfer",
      "offset": [
        11641,
        11657
      ],
      "op": "AND",
      "path": "3"
    },
    "2012": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x833"
    },
    "2015": {
      "branch": 73,
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2016": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2018": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2019": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2023": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2025": {
      "op": "SHL"
    },
    "2026": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2027": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2030": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2032": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2033": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "ADD",
      "path": "3"
    },
    "2034": {
      "op": "MSTORE"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2037": {
      "op": "DUP1"
    },
    "2038": {
      "op": "DUP3"
    },
    "2039": {
      "op": "ADD"
    },
    "2040": {
      "op": "MSTORE"
    },
    "2041": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F20746865207A65726F20616464"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2076": {
      "op": "DUP3"
    },
    "2077": {
      "op": "ADD"
    },
    "2078": {
      "op": "MSTORE"
    },
    "2079": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2086": {
      "op": "SHL"
    },
    "2087": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2089": {
      "op": "DUP3"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "op": "MSTORE"
    },
    "2092": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2094": {
      "op": "ADD"
    },
    "2095": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "2098": {
      "op": "JUMP"
    },
    "2099": {
      "fn": "ERC721._transfer",
      "offset": [
        11633,
        11698
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2100": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11751
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0x840"
    },
    "2103": {
      "fn": "ERC721._transfer",
      "offset": [
        11730,
        11734
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2104": {
      "fn": "ERC721._transfer",
      "offset": [
        11736,
        11738
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2105": {
      "fn": "ERC721._transfer",
      "offset": [
        11740,
        11747
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2106": {
      "fn": "ERC721._transfer",
      "offset": [
        11749,
        11750
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2108": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11729
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA9D"
    },
    "2111": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11709,
        11751
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2112": {
      "fn": "ERC721._transfer",
      "offset": [
        11709,
        11751
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2113": {
      "fn": "ERC721._transfer",
      "offset": [
        11878,
        11882
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 31
    },
    "2114": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2118": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2120": {
      "op": "SHL"
    },
    "2121": {
      "op": "SUB"
    },
    "2122": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "AND",
      "path": "3"
    },
    "2123": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11874
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x853"
    },
    "2126": {
      "fn": "ERC721._transfer",
      "offset": [
        11866,
        11873
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2127": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11865
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x499"
    },
    "2130": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11851,
        11874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2131": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11874
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2138": {
      "op": "SHL"
    },
    "2139": {
      "op": "SUB"
    },
    "2140": {
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "AND",
      "path": "3"
    },
    "2141": {
      "branch": 74,
      "fn": "ERC721._transfer",
      "offset": [
        11851,
        11882
      ],
      "op": "EQ",
      "path": "3"
    },
    "2142": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x879"
    },
    "2145": {
      "branch": 74,
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2146": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2148": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2149": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2155": {
      "op": "SHL"
    },
    "2156": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2157": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2158": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2160": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "ADD",
      "path": "3"
    },
    "2161": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "2164": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2165": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1069"
    },
    "2168": {
      "fn": "ERC721._transfer",
      "jump": "i",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2169": {
      "fn": "ERC721._transfer",
      "offset": [
        11843,
        11924
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2170": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 32,
      "value": "0x0"
    },
    "2172": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2173": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2174": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2175": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12008
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2177": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2179": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2180": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2181": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2182": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2184": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2185": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2186": {
      "fn": "ERC721._transfer",
      "offset": [
        11993,
        12017
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2187": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2188": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2189": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2193": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2195": {
      "op": "SHL"
    },
    "2196": {
      "op": "SUB"
    },
    "2197": {
      "op": "NOT"
    },
    "2198": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2199": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2200": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "AND",
      "path": "3"
    },
    "2201": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2202": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2203": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "op": "SUB"
    },
    "2212": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP8",
      "path": "3",
      "statement": 33
    },
    "2213": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2214": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "AND",
      "path": "3"
    },
    "2215": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2216": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2217": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2218": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2220": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2221": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2222": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2223": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2224": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12476
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2225": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2226": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2229": {
      "op": "NOT"
    },
    "2230": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "ADD",
      "path": "3"
    },
    "2231": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2232": {
      "fn": "ERC721._transfer",
      "offset": [
        12461,
        12481
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2233": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 34
    },
    "2234": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2235": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "AND",
      "path": "3"
    },
    "2236": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2237": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2238": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2239": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2240": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2241": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12508
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2242": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2243": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2244": {
      "fn": "ERC721._transfer",
      "offset": [
        11986,
        12017
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2246": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "ADD",
      "path": "3"
    },
    "2247": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2248": {
      "fn": "ERC721._transfer",
      "offset": [
        12495,
        12513
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2249": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP7",
      "path": "3",
      "statement": 35
    },
    "2250": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2251": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2252": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12540
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x2"
    },
    "2254": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2255": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2256": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2257": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2258": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2259": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12549
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2260": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2261": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2262": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2263": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2264": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "AND",
      "path": "3"
    },
    "2265": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2266": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "OR",
      "path": "3"
    },
    "2267": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2268": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2269": {
      "fn": "ERC721._transfer",
      "offset": [
        12533,
        12554
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2270": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 36
    },
    "2271": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2272": {
      "fn": "ERC721._transfer",
      "offset": [
        12009,
        12016
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2273": {
      "fn": "ERC721._transfer",
      "offset": [
        12009,
        12016
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2274": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
    },
    "2307": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2308": {
      "fn": "ERC721._transfer",
      "offset": [
        12570,
        12597
      ],
      "op": "LOG4",
      "path": "3"
    },
    "2309": {
      "fn": "ERC721.approve",
      "offset": [
        3538,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "2310": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "2311": {
      "fn": "ERC721.approve",
      "offset": [
        3468,
        3874
      ],
      "op": "POP",
      "path": "3"
    },
    "2312": {
      "fn": "ERC721.approve",
      "jump": "o",
      "offset": [
        3468,
        3874
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2313": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2314": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13225,
        13233
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 37
    },
    "2315": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2317": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2321": {
      "op": "SHL"
    },
    "2322": {
      "op": "SUB"
    },
    "2323": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "AND",
      "path": "3"
    },
    "2324": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13221
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2329": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2331": {
      "op": "SHL"
    },
    "2332": {
      "op": "SUB"
    },
    "2333": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "AND",
      "path": "3"
    },
    "2334": {
      "branch": 75,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13216,
        13233
      ],
      "op": "SUB",
      "path": "3"
    },
    "2335": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x96A"
    },
    "2338": {
      "branch": 75,
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2339": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2341": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2342": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2346": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2348": {
      "op": "SHL"
    },
    "2349": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2350": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2353": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2355": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2356": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "ADD",
      "path": "3"
    },
    "2357": {
      "op": "MSTORE"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2360": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2362": {
      "op": "DUP3"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "MSTORE"
    },
    "2365": {
      "op": "PUSH32",
      "value": "0x4552433732313A20617070726F766520746F2063616C6C657200000000000000"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2400": {
      "op": "DUP3"
    },
    "2401": {
      "op": "ADD"
    },
    "2402": {
      "op": "MSTORE"
    },
    "2403": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2405": {
      "op": "ADD"
    },
    "2406": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "2409": {
      "op": "JUMP"
    },
    "2410": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13208,
        13263
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2411": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2417": {
      "op": "SHL"
    },
    "2418": {
      "op": "SUB"
    },
    "2419": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 38
    },
    "2420": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2421": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "AND",
      "path": "3"
    },
    "2422": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2424": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2425": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2426": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2427": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13291
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x5"
    },
    "2429": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2431": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2432": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2433": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2434": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2436": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2437": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2438": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13298
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2439": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2440": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2441": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "AND",
      "path": "3"
    },
    "2442": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2443": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2444": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2445": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "2446": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2447": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2448": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2449": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2450": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2451": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13308
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2452": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2453": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2456": {
      "op": "NOT"
    },
    "2457": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "AND",
      "path": "3"
    },
    "2458": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2459": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2460": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2461": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2462": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2463": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "OR",
      "path": "3"
    },
    "2464": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2465": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2466": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13273,
        13319
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2467": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 39
    },
    "2468": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2469": {
      "op": "SWAP2"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "MSTORE"
    },
    "2472": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "2505": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2506": {
      "op": "ADD"
    },
    "2507": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2509": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2510": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2511": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2512": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SUB",
      "path": "3"
    },
    "2513": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2514": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13334,
        13375
      ],
      "op": "LOG3",
      "path": "3"
    },
    "2515": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "3"
    },
    "2516": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "3"
    },
    "2517": {
      "fn": "ERC721._setApprovalForAll",
      "offset": [
        13075,
        13382
      ],
      "op": "POP",
      "path": "3"
    },
    "2518": {
      "fn": "ERC721._setApprovalForAll",
      "jump": "o",
      "offset": [
        13075,
        13382
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2519": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6424,
        6729
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2520": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 40,
      "value": "0x9E2"
    },
    "2523": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6584,
        6588
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2524": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6590,
        6592
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2525": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6594,
        6601
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2526": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6583
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x798"
    },
    "2529": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2530": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6574,
        6602
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2531": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6667
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0x9EE"
    },
    "2534": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6643,
        6647
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2535": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6649,
        6651
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2536": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6653,
        6660
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2537": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6662,
        6666
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2538": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6642
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB25"
    },
    "2541": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6620,
        6667
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2542": {
      "branch": 76,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6620,
        6667
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2543": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CF"
    },
    "2546": {
      "branch": 76,
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2547": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2549": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2556": {
      "op": "SHL"
    },
    "2557": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2558": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2559": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2561": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "ADD",
      "path": "3"
    },
    "2562": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "2565": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2566": {
      "fn": "ERC721._safeTransfer",
      "offset": [
        6612,
        6722
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10AE"
    },
    "2569": {
      "fn": "ERC721._safeTransfer",
      "jump": "i",
      "offset": [
        6612,
        6722
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2570": {
      "fn": "Strings.toString",
      "offset": [
        415,
        1111
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2571": {
      "fn": "Strings.toString",
      "offset": [
        471,
        484
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x60"
    },
    "2573": {
      "fn": "Strings.toString",
      "offset": [
        520,
        534
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2575": {
      "fn": "Strings.toString",
      "offset": [
        537,
        554
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA17"
    },
    "2578": {
      "fn": "Strings.toString",
      "offset": [
        548,
        553
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2579": {
      "fn": "Strings.toString",
      "offset": [
        537,
        547
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xC26"
    },
    "2582": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        537,
        554
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2583": {
      "fn": "Strings.toString",
      "offset": [
        537,
        554
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2584": {
      "fn": "Strings.toString",
      "offset": [
        557,
        558
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1"
    },
    "2586": {
      "fn": "Strings.toString",
      "offset": [
        537,
        558
      ],
      "op": "ADD",
      "path": "10"
    },
    "2587": {
      "fn": "Strings.toString",
      "offset": [
        520,
        558
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2588": {
      "fn": "Strings.toString",
      "offset": [
        520,
        558
      ],
      "op": "POP",
      "path": "10"
    },
    "2589": {
      "fn": "Strings.toString",
      "offset": [
        572,
        592
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x0"
    },
    "2591": {
      "fn": "Strings.toString",
      "offset": [
        606,
        612
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2592": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH8",
      "path": "10",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2601": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2602": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "GT",
      "path": "10"
    },
    "2603": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2604": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA37"
    },
    "2607": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2608": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA37"
    },
    "2611": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xE8E"
    },
    "2614": {
      "fn": "Strings.toString",
      "jump": "i",
      "offset": [
        595,
        613
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2615": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2616": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2618": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MLOAD",
      "path": "10"
    },
    "2619": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2620": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2621": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2622": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2623": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2624": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2626": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "10"
    },
    "2627": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x1F"
    },
    "2629": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "NOT",
      "path": "10"
    },
    "2630": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "AND",
      "path": "10"
    },
    "2631": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2633": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "10"
    },
    "2634": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2635": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "10"
    },
    "2636": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x40"
    },
    "2638": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "MSTORE",
      "path": "10"
    },
    "2639": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2640": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ISZERO",
      "path": "10"
    },
    "2641": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA61"
    },
    "2644": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2645": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2647": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP3",
      "path": "10"
    },
    "2648": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "10"
    },
    "2649": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2650": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP1",
      "path": "10"
    },
    "2651": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "CALLDATASIZE",
      "path": "10"
    },
    "2652": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "DUP4",
      "path": "10"
    },
    "2653": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "CALLDATACOPY",
      "path": "10"
    },
    "2654": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "ADD",
      "path": "10"
    },
    "2655": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2656": {
      "op": "POP"
    },
    "2657": {
      "fn": "Strings.toString",
      "offset": [
        595,
        613
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2658": {
      "op": "POP"
    },
    "2659": {
      "fn": "Strings.toString",
      "offset": [
        572,
        613
      ],
      "op": "SWAP1",
      "path": "10"
    },
    "2660": {
      "op": "POP"
    },
    "2661": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2662": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2663": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "ADD",
      "path": "10"
    },
    "2664": {
      "fn": "Strings.toString",
      "offset": [
        749,
        751
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0x20"
    },
    "2666": {
      "fn": "Strings.toString",
      "offset": [
        733,
        761
      ],
      "op": "ADD",
      "path": "10"
    },
    "2667": {
      "fn": "Strings.toString",
      "offset": [
        788,
        1068
      ],
      "op": "JUMPDEST",
      "path": "10"
    },
    "2668": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2670": {
      "op": "NOT"
    },
    "2671": {
      "fn": "Strings.toString",
      "offset": [
        819,
        824
      ],
      "op": "ADD",
      "path": "10",
      "statement": 42
    },
    "2672": {
      "op": "PUSH16",
      "value": "0x181899199A1A9B1B9C1CB0B131B232B3"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "2691": {
      "op": "SHL"
    },
    "2692": {
      "fn": "Strings.toString",
      "offset": [
        953,
        955
      ],
      "op": "PUSH1",
      "path": "10",
      "value": "0xA"
    },
    "2694": {
      "fn": "Strings.toString",
      "offset": [
        942,
        956
      ],
      "op": "DUP7",
      "path": "10"
    },
    "2695": {
      "fn": "Strings.toString",
      "offset": [
        942,
        956
      ],
      "op": "MOD",
      "path": "10"
    },
    "2696": {
      "fn": "Strings.toString",
      "offset": [
        937,
        967
      ],
      "op": "BYTE",
      "path": "10"
    },
    "2697": {
      "fn": "Strings.toString",
      "offset": [
        819,
        824
      ],
      "op": "DUP2",
      "path": "10"
    },
    "2698": {
      "fn": "Strings.toString",
      "offset": [
        924,
        968
      ],
      "op": "MSTORE8",
      "path": "10"
    },
    "2699": {
      "fn": "Strings.toString",
      "offset": [
        1012,
        1014
      ],
      "op": "PUSH1",
      "path": "10",
      "statement": 43,
      "value": "0xA"
    },
    "2701": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "DUP6",
      "path": "10"
    },
    "2702": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "DIV",
      "path": "10"
    },
    "2703": {
      "fn": "Strings.toString",
      "offset": [
        1003,
        1014
      ],
      "op": "SWAP5",
      "path": "10"
    },
    "2704": {
      "op": "POP"
    },
    "2705": {
      "fn": "Strings.toString",
      "offset": [
        1032,
        1053
      ],
      "op": "DUP5",
      "path": "10"
    },
    "2706": {
      "fn": "Strings.toString",
      "offset": [
        788,
        1068
      ],
      "op": "PUSH2",
      "path": "10",
      "value": "0xA6B"
    },
    "2709": {
      "fn": "Strings.toString",
      "offset": [
        1032,
        1053
      ],
      "op": "JUMPI",
      "path": "10"
    },
    "2710": {
      "op": "POP"
    },
    "2711": {
      "fn": "Strings.toString",
      "offset": [
        1088,
        1094
      ],
      "op": "SWAP4",
      "path": "10",
      "statement": 44
    },
    "2712": {
      "fn": "Strings.toString",
      "offset": [
        415,
        1111
      ],
      "op": "SWAP3",
      "path": "10"
    },
    "2713": {
      "op": "POP"
    },
    "2714": {
      "op": "POP"
    },
    "2715": {
      "op": "POP"
    },
    "2716": {
      "fn": "Strings.toString",
      "jump": "o",
      "offset": [
        415,
        1111
      ],
      "op": "JUMP",
      "path": "10"
    },
    "2717": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2718": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15882,
        15883
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2720": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15870,
        15879
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2721": {
      "branch": 77,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15870,
        15883
      ],
      "op": "GT",
      "path": "3"
    },
    "2722": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2723": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CF"
    },
    "2726": {
      "branch": 77,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15866,
        16088
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2733": {
      "op": "SHL"
    },
    "2734": {
      "op": "SUB"
    },
    "2735": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2736": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "AND",
      "path": "3"
    },
    "2737": {
      "branch": 78,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15903,
        15921
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2738": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xAE3"
    },
    "2741": {
      "branch": 78,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2748": {
      "op": "SHL"
    },
    "2749": {
      "op": "SUB"
    },
    "2750": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP5",
      "path": "3",
      "statement": 45
    },
    "2751": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "AND",
      "path": "3"
    },
    "2752": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2754": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2755": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2756": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2757": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15950
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2759": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2761": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2762": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2764": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2765": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2766": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2767": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2768": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2769": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2770": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15956
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2771": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xADD"
    },
    "2774": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2775": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2776": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15960,
        15969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2777": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1116"
    },
    "2780": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        15941,
        15969
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2781": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2782": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2783": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2784": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15941,
        15969
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2785": {
      "op": "POP"
    },
    "2786": {
      "op": "POP"
    },
    "2787": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15899,
        15984
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2790": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2794": {
      "op": "SHL"
    },
    "2795": {
      "op": "SUB"
    },
    "2796": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2797": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "AND",
      "path": "3"
    },
    "2798": {
      "branch": 79,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16001,
        16017
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2799": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15997,
        16078
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x5CF"
    },
    "2802": {
      "branch": 79,
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15997,
        16078
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2807": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2809": {
      "op": "SHL"
    },
    "2810": {
      "op": "SUB"
    },
    "2811": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 46
    },
    "2812": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "AND",
      "path": "3"
    },
    "2813": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2815": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2816": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2817": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2818": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16046
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3"
    },
    "2820": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2822": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2823": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2825": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2826": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "2827": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2828": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2829": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2830": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2831": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16050
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2832": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB1A"
    },
    "2835": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2836": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2837": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16054,
        16063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2838": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x112D"
    },
    "2841": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "i",
      "offset": [
        16037,
        16063
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2842": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2843": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2844": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2845": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        16037,
        16063
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "2846": {
      "op": "POP"
    },
    "2847": {
      "op": "POP"
    },
    "2848": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "3"
    },
    "2849": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "3"
    },
    "2850": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "3"
    },
    "2851": {
      "fn": "ERC721._beforeTokenTransfer",
      "offset": [
        15698,
        16094
      ],
      "op": "POP",
      "path": "3"
    },
    "2852": {
      "fn": "ERC721._beforeTokenTransfer",
      "jump": "o",
      "offset": [
        15698,
        16094
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2853": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2854": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14300,
        14304
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2858": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2860": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2862": {
      "op": "SHL"
    },
    "2863": {
      "op": "SUB"
    },
    "2864": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14320,
        14333
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2865": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14320,
        14333
      ],
      "op": "AND",
      "path": "3"
    },
    "2866": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1484
      ],
      "op": "EXTCODESIZE",
      "path": "8",
      "statement": 47
    },
    "2867": {
      "fn": "Address.isContract",
      "offset": [
        1465,
        1488
      ],
      "op": "ISZERO",
      "path": "8"
    },
    "2868": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC1B"
    },
    "2871": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2872": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2874": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2875": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2882": {
      "op": "SHL"
    },
    "2883": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2884": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2891": {
      "op": "SHL"
    },
    "2892": {
      "op": "SUB"
    },
    "2893": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2894": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "AND",
      "path": "3"
    },
    "2895": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2896": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "PUSH4",
      "path": "3",
      "value": "0x150B7A02"
    },
    "2901": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14391
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2902": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB69"
    },
    "2905": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2906": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "9"
    },
    "2907": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "SWAP1",
      "path": "9"
    },
    "2908": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14406,
        14410
      ],
      "op": "DUP10",
      "path": "3"
    },
    "2909": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14406,
        14410
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2910": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14412,
        14419
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2911": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14412,
        14419
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2912": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14421,
        14425
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2913": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14421,
        14425
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2914": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2916": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "3"
    },
    "2917": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1145"
    },
    "2920": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2921": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2922": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2924": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2926": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2927": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2928": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2929": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SUB",
      "path": "3"
    },
    "2930": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2931": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2933": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2934": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "GAS",
      "path": "3"
    },
    "2935": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "CALL",
      "path": "3"
    },
    "2936": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2937": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "3"
    },
    "2938": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "3"
    },
    "2939": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "POP",
      "path": "3"
    },
    "2940": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2941": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2942": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA4"
    },
    "2945": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2946": {
      "op": "POP"
    },
    "2947": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2949": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2950": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2951": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "2953": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2954": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2955": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2956": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "3"
    },
    "2957": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2959": {
      "op": "NOT"
    },
    "2960": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "AND",
      "path": "3"
    },
    "2961": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2962": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "3"
    },
    "2963": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2964": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2965": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2966": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBA1"
    },
    "2969": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2970": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2971": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "ADD",
      "path": "3"
    },
    "2972": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2973": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1182"
    },
    "2976": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2977": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2978": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2980": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14355,
        14426
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2981": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC01"
    },
    "2984": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2985": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2986": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2987": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2988": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2989": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD2"
    },
    "2992": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2993": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2995": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2996": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2997": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "3"
    },
    "2998": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1F"
    },
    "3000": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "NOT",
      "path": "3"
    },
    "3001": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x3F"
    },
    "3003": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3004": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "3"
    },
    "3005": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "AND",
      "path": "3"
    },
    "3006": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3007": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "3"
    },
    "3008": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3010": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3011": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3012": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3013": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3014": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "3015": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3017": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3019": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "DUP5",
      "path": "3"
    },
    "3020": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "ADD",
      "path": "3"
    },
    "3021": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "3022": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBD7"
    },
    "3025": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3026": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3027": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "3029": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3030": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "3"
    },
    "3031": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3032": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "POP",
      "path": "3"
    },
    "3033": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14599
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3034": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14606
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3035": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14610,
        14611
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3037": {
      "branch": 80,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14593,
        14611
      ],
      "op": "SUB",
      "path": "3"
    },
    "3038": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBF9"
    },
    "3041": {
      "branch": 80,
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3042": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 48,
      "value": "0x40"
    },
    "3044": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3045": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3049": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3051": {
      "op": "SHL"
    },
    "3052": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3053": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3054": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3056": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "ADD",
      "path": "3"
    },
    "3057": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3A7"
    },
    "3060": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3061": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14635,
        14695
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10AE"
    },
    "3064": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "i",
      "offset": [
        14635,
        14695
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3065": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14589,
        14910
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3066": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14862,
        14868
      ],
      "op": "DUP1",
      "path": "3"
    },
    "3067": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14856,
        14869
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3068": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14847,
        14853
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3069": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14843,
        14845
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "3071": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14839,
        14854
      ],
      "op": "ADD",
      "path": "3"
    },
    "3072": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14832,
        14870
      ],
      "op": "REVERT",
      "path": "3"
    },
    "3073": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14351,
        14924
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3078": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3080": {
      "op": "SHL"
    },
    "3081": {
      "op": "SUB"
    },
    "3082": {
      "op": "NOT"
    },
    "3083": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "AND",
      "path": "3",
      "statement": 49
    },
    "3084": {
      "op": "PUSH4",
      "value": "0xA85BD01"
    },
    "3089": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "3091": {
      "op": "SHL"
    },
    "3092": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "EQ",
      "path": "3"
    },
    "3093": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14476,
        14527
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "3094": {
      "op": "POP"
    },
    "3095": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14469,
        14527
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x790"
    },
    "3098": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14469,
        14527
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3099": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14316,
        14976
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3100": {
      "op": "POP"
    },
    "3101": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14961,
        14965
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 50,
      "value": "0x1"
    },
    "3103": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "SWAP5",
      "path": "3"
    },
    "3104": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "3105": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "3"
    },
    "3106": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "3"
    },
    "3107": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "3"
    },
    "3108": {
      "fn": "ERC721._checkOnERC721Received",
      "offset": [
        14151,
        14982
      ],
      "op": "POP",
      "path": "3"
    },
    "3109": {
      "fn": "ERC721._checkOnERC721Received",
      "jump": "o",
      "offset": [
        14151,
        14982
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3110": {
      "fn": "Math.log10",
      "offset": [
        9889,
        10779
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3111": {
      "fn": "Math.log10",
      "offset": [
        9942,
        9949
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "3113": {
      "fn": "Math.log10",
      "offset": [
        9942,
        9949
      ],
      "op": "DUP1",
      "path": "13"
    },
    "3114": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "3134": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3136": {
      "op": "SHL"
    },
    "3137": {
      "fn": "Math.log10",
      "offset": [
        10017,
        10032
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3138": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10017,
        10032
      ],
      "op": "LT",
      "path": "13"
    },
    "3139": {
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC65"
    },
    "3142": {
      "branch": 81,
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3143": {
      "op": "PUSH19",
      "value": "0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F01"
    },
    "3163": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3165": {
      "op": "SHL"
    },
    "3166": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "DUP4",
      "path": "13",
      "statement": 51
    },
    "3167": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "DIV",
      "path": "13"
    },
    "3168": {
      "fn": "Math.log10",
      "offset": [
        10052,
        10067
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "fn": "Math.log10",
      "offset": [
        10095,
        10097
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 52,
      "value": "0x40"
    },
    "3172": {
      "fn": "Math.log10",
      "offset": [
        10085,
        10097
      ],
      "op": "ADD",
      "path": "13"
    },
    "3173": {
      "fn": "Math.log10",
      "offset": [
        10013,
        10112
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3174": {
      "fn": "Math.log10",
      "offset": [
        10138,
        10144
      ],
      "op": "PUSH14",
      "path": "13",
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3189": {
      "fn": "Math.log10",
      "offset": [
        10129,
        10134
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3190": {
      "branch": 82,
      "fn": "Math.log10",
      "offset": [
        10129,
        10144
      ],
      "op": "LT",
      "path": "13"
    },
    "3191": {
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC91"
    },
    "3194": {
      "branch": 82,
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3195": {
      "fn": "Math.log10",
      "offset": [
        10173,
        10179
      ],
      "op": "PUSH14",
      "path": "13",
      "statement": 53,
      "value": "0x4EE2D6D415B85ACEF8100000000"
    },
    "3210": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3211": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "DIV",
      "path": "13"
    },
    "3212": {
      "fn": "Math.log10",
      "offset": [
        10164,
        10179
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3213": {
      "op": "POP"
    },
    "3214": {
      "fn": "Math.log10",
      "offset": [
        10207,
        10209
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 54,
      "value": "0x20"
    },
    "3216": {
      "fn": "Math.log10",
      "offset": [
        10197,
        10209
      ],
      "op": "ADD",
      "path": "13"
    },
    "3217": {
      "fn": "Math.log10",
      "offset": [
        10125,
        10224
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3218": {
      "fn": "Math.log10",
      "offset": [
        10250,
        10256
      ],
      "op": "PUSH7",
      "path": "13",
      "value": "0x2386F26FC10000"
    },
    "3226": {
      "fn": "Math.log10",
      "offset": [
        10241,
        10246
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3227": {
      "branch": 83,
      "fn": "Math.log10",
      "offset": [
        10241,
        10256
      ],
      "op": "LT",
      "path": "13"
    },
    "3228": {
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCAF"
    },
    "3231": {
      "branch": 83,
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3232": {
      "fn": "Math.log10",
      "offset": [
        10285,
        10291
      ],
      "op": "PUSH7",
      "path": "13",
      "statement": 55,
      "value": "0x2386F26FC10000"
    },
    "3240": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3241": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "DIV",
      "path": "13"
    },
    "3242": {
      "fn": "Math.log10",
      "offset": [
        10276,
        10291
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "fn": "Math.log10",
      "offset": [
        10319,
        10321
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 56,
      "value": "0x10"
    },
    "3246": {
      "fn": "Math.log10",
      "offset": [
        10309,
        10321
      ],
      "op": "ADD",
      "path": "13"
    },
    "3247": {
      "fn": "Math.log10",
      "offset": [
        10237,
        10336
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3248": {
      "fn": "Math.log10",
      "offset": [
        10362,
        10367
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x5F5E100"
    },
    "3253": {
      "fn": "Math.log10",
      "offset": [
        10353,
        10358
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3254": {
      "branch": 84,
      "fn": "Math.log10",
      "offset": [
        10353,
        10367
      ],
      "op": "LT",
      "path": "13"
    },
    "3255": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCC7"
    },
    "3258": {
      "branch": 84,
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3259": {
      "fn": "Math.log10",
      "offset": [
        10396,
        10401
      ],
      "op": "PUSH4",
      "path": "13",
      "statement": 57,
      "value": "0x5F5E100"
    },
    "3264": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3265": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "DIV",
      "path": "13"
    },
    "3266": {
      "fn": "Math.log10",
      "offset": [
        10387,
        10401
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3267": {
      "op": "POP"
    },
    "3268": {
      "fn": "Math.log10",
      "offset": [
        10429,
        10430
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 58,
      "value": "0x8"
    },
    "3270": {
      "fn": "Math.log10",
      "offset": [
        10419,
        10430
      ],
      "op": "ADD",
      "path": "13"
    },
    "3271": {
      "fn": "Math.log10",
      "offset": [
        10349,
        10445
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3272": {
      "fn": "Math.log10",
      "offset": [
        10471,
        10476
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2710"
    },
    "3275": {
      "fn": "Math.log10",
      "offset": [
        10462,
        10467
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3276": {
      "branch": 85,
      "fn": "Math.log10",
      "offset": [
        10462,
        10476
      ],
      "op": "LT",
      "path": "13"
    },
    "3277": {
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCDB"
    },
    "3280": {
      "branch": 85,
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3281": {
      "fn": "Math.log10",
      "offset": [
        10505,
        10510
      ],
      "op": "PUSH2",
      "path": "13",
      "statement": 59,
      "value": "0x2710"
    },
    "3284": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3285": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "DIV",
      "path": "13"
    },
    "3286": {
      "fn": "Math.log10",
      "offset": [
        10496,
        10510
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3287": {
      "op": "POP"
    },
    "3288": {
      "fn": "Math.log10",
      "offset": [
        10538,
        10539
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 60,
      "value": "0x4"
    },
    "3290": {
      "fn": "Math.log10",
      "offset": [
        10528,
        10539
      ],
      "op": "ADD",
      "path": "13"
    },
    "3291": {
      "fn": "Math.log10",
      "offset": [
        10458,
        10554
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3292": {
      "fn": "Math.log10",
      "offset": [
        10580,
        10585
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x64"
    },
    "3294": {
      "fn": "Math.log10",
      "offset": [
        10571,
        10576
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3295": {
      "branch": 86,
      "fn": "Math.log10",
      "offset": [
        10571,
        10585
      ],
      "op": "LT",
      "path": "13"
    },
    "3296": {
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xCED"
    },
    "3299": {
      "branch": 86,
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3300": {
      "fn": "Math.log10",
      "offset": [
        10614,
        10619
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 61,
      "value": "0x64"
    },
    "3302": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3303": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "DIV",
      "path": "13"
    },
    "3304": {
      "fn": "Math.log10",
      "offset": [
        10605,
        10619
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "3305": {
      "op": "POP"
    },
    "3306": {
      "fn": "Math.log10",
      "offset": [
        10647,
        10648
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 62,
      "value": "0x2"
    },
    "3308": {
      "fn": "Math.log10",
      "offset": [
        10637,
        10648
      ],
      "op": "ADD",
      "path": "13"
    },
    "3309": {
      "fn": "Math.log10",
      "offset": [
        10567,
        10663
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "3310": {
      "fn": "Math.log10",
      "offset": [
        10689,
        10694
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xA"
    },
    "3312": {
      "fn": "Math.log10",
      "offset": [
        10680,
        10685
      ],
      "op": "DUP4",
      "path": "13"
    },
    "3313": {
      "branch": 87,
      "fn": "Math.log10",
      "offset": [
        10680,
        10694
      ],
      "op": "LT",
      "path": "13"
    },
    "3314": {
      "fn": "Math.log10",
      "offset": [
        10676,
        10740
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x274"
    },
    "3317": {
      "branch": 87,
      "fn": "Math.log10",
      "offset": [
        10676,
        10740
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "3318": {
      "fn": "Math.log10",
      "offset": [
        10724,
        10725
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 63,
      "value": "0x1"
    },
    "3320": {
      "fn": "Math.log10",
      "offset": [
        10714,
        10725
      ],
      "op": "ADD",
      "path": "13"
    },
    "3321": {
      "fn": "Math.log10",
      "offset": [
        10766,
        10772
      ],
      "op": "SWAP3",
      "path": "13",
      "statement": 64
    },
    "3322": {
      "fn": "Math.log10",
      "offset": [
        9889,
        10779
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "3323": {
      "op": "POP"
    },
    "3324": {
      "op": "POP"
    },
    "3325": {
      "fn": "Math.log10",
      "jump": "o",
      "offset": [
        9889,
        10779
      ],
      "op": "JUMP",
      "path": "13"
    },
    "3326": {
      "op": "JUMPDEST"
    },
    "3327": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3331": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3333": {
      "op": "SHL"
    },
    "3334": {
      "op": "SUB"
    },
    "3335": {
      "op": "NOT"
    },
    "3336": {
      "op": "DUP2"
    },
    "3337": {
      "op": "AND"
    },
    "3338": {
      "op": "DUP2"
    },
    "3339": {
      "op": "EQ"
    },
    "3340": {
      "op": "PUSH2",
      "value": "0x6A8"
    },
    "3343": {
      "op": "JUMPI"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3346": {
      "op": "DUP1"
    },
    "3347": {
      "op": "REVERT"
    },
    "3348": {
      "op": "JUMPDEST"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3353": {
      "op": "DUP3"
    },
    "3354": {
      "op": "DUP5"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "op": "SLT"
    },
    "3357": {
      "op": "ISZERO"
    },
    "3358": {
      "op": "PUSH2",
      "value": "0xD26"
    },
    "3361": {
      "op": "JUMPI"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3364": {
      "op": "DUP1"
    },
    "3365": {
      "op": "REVERT"
    },
    "3366": {
      "op": "JUMPDEST"
    },
    "3367": {
      "op": "DUP2"
    },
    "3368": {
      "op": "CALLDATALOAD"
    },
    "3369": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3372": {
      "op": "DUP2"
    },
    "3373": {
      "op": "PUSH2",
      "value": "0xCFE"
    },
    "3376": {
      "jump": "i",
      "op": "JUMP"
    },
    "3377": {
      "op": "JUMPDEST"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3380": {
      "op": "JUMPDEST"
    },
    "3381": {
      "op": "DUP4"
    },
    "3382": {
      "op": "DUP2"
    },
    "3383": {
      "op": "LT"
    },
    "3384": {
      "op": "ISZERO"
    },
    "3385": {
      "op": "PUSH2",
      "value": "0xD4C"
    },
    "3388": {
      "op": "JUMPI"
    },
    "3389": {
      "op": "DUP2"
    },
    "3390": {
      "op": "DUP2"
    },
    "3391": {
      "op": "ADD"
    },
    "3392": {
      "op": "MLOAD"
    },
    "3393": {
      "op": "DUP4"
    },
    "3394": {
      "op": "DUP3"
    },
    "3395": {
      "op": "ADD"
    },
    "3396": {
      "op": "MSTORE"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3399": {
      "op": "ADD"
    },
    "3400": {
      "op": "PUSH2",
      "value": "0xD34"
    },
    "3403": {
      "op": "JUMP"
    },
    "3404": {
      "op": "JUMPDEST"
    },
    "3405": {
      "op": "DUP4"
    },
    "3406": {
      "op": "DUP2"
    },
    "3407": {
      "op": "GT"
    },
    "3408": {
      "op": "ISZERO"
    },
    "3409": {
      "op": "PUSH2",
      "value": "0x5CF"
    },
    "3412": {
      "op": "JUMPI"
    },
    "3413": {
      "op": "POP"
    },
    "3414": {
      "op": "POP"
    },
    "3415": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3417": {
      "op": "SWAP2"
    },
    "3418": {
      "op": "ADD"
    },
    "3419": {
      "op": "MSTORE"
    },
    "3420": {
      "jump": "o",
      "op": "JUMP"
    },
    "3421": {
      "op": "JUMPDEST"
    },
    "3422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3424": {
      "op": "DUP2"
    },
    "3425": {
      "op": "MLOAD"
    },
    "3426": {
      "op": "DUP1"
    },
    "3427": {
      "op": "DUP5"
    },
    "3428": {
      "op": "MSTORE"
    },
    "3429": {
      "op": "PUSH2",
      "value": "0xD75"
    },
    "3432": {
      "op": "DUP2"
    },
    "3433": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3435": {
      "op": "DUP7"
    },
    "3436": {
      "op": "ADD"
    },
    "3437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3439": {
      "op": "DUP7"
    },
    "3440": {
      "op": "ADD"
    },
    "3441": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "3444": {
      "jump": "i",
      "op": "JUMP"
    },
    "3445": {
      "op": "JUMPDEST"
    },
    "3446": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3448": {
      "op": "ADD"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3451": {
      "op": "NOT"
    },
    "3452": {
      "op": "AND"
    },
    "3453": {
      "op": "SWAP3"
    },
    "3454": {
      "op": "SWAP1"
    },
    "3455": {
      "op": "SWAP3"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3459": {
      "op": "ADD"
    },
    "3460": {
      "op": "SWAP3"
    },
    "3461": {
      "op": "SWAP2"
    },
    "3462": {
      "op": "POP"
    },
    "3463": {
      "op": "POP"
    },
    "3464": {
      "jump": "o",
      "op": "JUMP"
    },
    "3465": {
      "op": "JUMPDEST"
    },
    "3466": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3468": {
      "op": "DUP2"
    },
    "3469": {
      "op": "MSTORE"
    },
    "3470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3472": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3477": {
      "op": "DUP4"
    },
    "3478": {
      "op": "ADD"
    },
    "3479": {
      "op": "DUP5"
    },
    "3480": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "3483": {
      "jump": "i",
      "op": "JUMP"
    },
    "3484": {
      "op": "JUMPDEST"
    },
    "3485": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3487": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3489": {
      "op": "DUP3"
    },
    "3490": {
      "op": "DUP5"
    },
    "3491": {
      "op": "SUB"
    },
    "3492": {
      "op": "SLT"
    },
    "3493": {
      "op": "ISZERO"
    },
    "3494": {
      "op": "PUSH2",
      "value": "0xDAE"
    },
    "3497": {
      "op": "JUMPI"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3500": {
      "op": "DUP1"
    },
    "3501": {
      "op": "REVERT"
    },
    "3502": {
      "op": "JUMPDEST"
    },
    "3503": {
      "op": "POP"
    },
    "3504": {
      "op": "CALLDATALOAD"
    },
    "3505": {
      "op": "SWAP2"
    },
    "3506": {
      "op": "SWAP1"
    },
    "3507": {
      "op": "POP"
    },
    "3508": {
      "jump": "o",
      "op": "JUMP"
    },
    "3509": {
      "op": "JUMPDEST"
    },
    "3510": {
      "op": "DUP1"
    },
    "3511": {
      "op": "CALLDATALOAD"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3514": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3516": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3518": {
      "op": "SHL"
    },
    "3519": {
      "op": "SUB"
    },
    "3520": {
      "op": "DUP2"
    },
    "3521": {
      "op": "AND"
    },
    "3522": {
      "op": "DUP2"
    },
    "3523": {
      "op": "EQ"
    },
    "3524": {
      "op": "PUSH2",
      "value": "0xDCC"
    },
    "3527": {
      "op": "JUMPI"
    },
    "3528": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3530": {
      "op": "DUP1"
    },
    "3531": {
      "op": "REVERT"
    },
    "3532": {
      "op": "JUMPDEST"
    },
    "3533": {
      "op": "SWAP2"
    },
    "3534": {
      "op": "SWAP1"
    },
    "3535": {
      "op": "POP"
    },
    "3536": {
      "jump": "o",
      "op": "JUMP"
    },
    "3537": {
      "op": "JUMPDEST"
    },
    "3538": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3540": {
      "op": "DUP1"
    },
    "3541": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3543": {
      "op": "DUP4"
    },
    "3544": {
      "op": "DUP6"
    },
    "3545": {
      "op": "SUB"
    },
    "3546": {
      "op": "SLT"
    },
    "3547": {
      "op": "ISZERO"
    },
    "3548": {
      "op": "PUSH2",
      "value": "0xDE4"
    },
    "3551": {
      "op": "JUMPI"
    },
    "3552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3554": {
      "op": "DUP1"
    },
    "3555": {
      "op": "REVERT"
    },
    "3556": {
      "op": "JUMPDEST"
    },
    "3557": {
      "op": "PUSH2",
      "value": "0xDED"
    },
    "3560": {
      "op": "DUP4"
    },
    "3561": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3564": {
      "jump": "i",
      "op": "JUMP"
    },
    "3565": {
      "op": "JUMPDEST"
    },
    "3566": {
      "op": "SWAP5"
    },
    "3567": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3569": {
      "op": "SWAP4"
    },
    "3570": {
      "op": "SWAP1"
    },
    "3571": {
      "op": "SWAP4"
    },
    "3572": {
      "op": "ADD"
    },
    "3573": {
      "op": "CALLDATALOAD"
    },
    "3574": {
      "op": "SWAP4"
    },
    "3575": {
      "op": "POP"
    },
    "3576": {
      "op": "POP"
    },
    "3577": {
      "op": "POP"
    },
    "3578": {
      "jump": "o",
      "op": "JUMP"
    },
    "3579": {
      "op": "JUMPDEST"
    },
    "3580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3582": {
      "op": "DUP1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3587": {
      "op": "DUP5"
    },
    "3588": {
      "op": "DUP7"
    },
    "3589": {
      "op": "SUB"
    },
    "3590": {
      "op": "SLT"
    },
    "3591": {
      "op": "ISZERO"
    },
    "3592": {
      "op": "PUSH2",
      "value": "0xE10"
    },
    "3595": {
      "op": "JUMPI"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3598": {
      "op": "DUP1"
    },
    "3599": {
      "op": "REVERT"
    },
    "3600": {
      "op": "JUMPDEST"
    },
    "3601": {
      "op": "PUSH2",
      "value": "0xE19"
    },
    "3604": {
      "op": "DUP5"
    },
    "3605": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3608": {
      "jump": "i",
      "op": "JUMP"
    },
    "3609": {
      "op": "JUMPDEST"
    },
    "3610": {
      "op": "SWAP3"
    },
    "3611": {
      "op": "POP"
    },
    "3612": {
      "op": "PUSH2",
      "value": "0xE27"
    },
    "3615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3617": {
      "op": "DUP6"
    },
    "3618": {
      "op": "ADD"
    },
    "3619": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3622": {
      "jump": "i",
      "op": "JUMP"
    },
    "3623": {
      "op": "JUMPDEST"
    },
    "3624": {
      "op": "SWAP2"
    },
    "3625": {
      "op": "POP"
    },
    "3626": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3628": {
      "op": "DUP5"
    },
    "3629": {
      "op": "ADD"
    },
    "3630": {
      "op": "CALLDATALOAD"
    },
    "3631": {
      "op": "SWAP1"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "op": "SWAP3"
    },
    "3634": {
      "op": "POP"
    },
    "3635": {
      "op": "SWAP3"
    },
    "3636": {
      "op": "POP"
    },
    "3637": {
      "op": "SWAP3"
    },
    "3638": {
      "jump": "o",
      "op": "JUMP"
    },
    "3639": {
      "op": "JUMPDEST"
    },
    "3640": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3642": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3644": {
      "op": "DUP3"
    },
    "3645": {
      "op": "DUP5"
    },
    "3646": {
      "op": "SUB"
    },
    "3647": {
      "op": "SLT"
    },
    "3648": {
      "op": "ISZERO"
    },
    "3649": {
      "op": "PUSH2",
      "value": "0xE49"
    },
    "3652": {
      "op": "JUMPI"
    },
    "3653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3655": {
      "op": "DUP1"
    },
    "3656": {
      "op": "REVERT"
    },
    "3657": {
      "op": "JUMPDEST"
    },
    "3658": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "3661": {
      "op": "DUP3"
    },
    "3662": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3665": {
      "jump": "i",
      "op": "JUMP"
    },
    "3666": {
      "op": "JUMPDEST"
    },
    "3667": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3669": {
      "op": "DUP1"
    },
    "3670": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3672": {
      "op": "DUP4"
    },
    "3673": {
      "op": "DUP6"
    },
    "3674": {
      "op": "SUB"
    },
    "3675": {
      "op": "SLT"
    },
    "3676": {
      "op": "ISZERO"
    },
    "3677": {
      "op": "PUSH2",
      "value": "0xE65"
    },
    "3680": {
      "op": "JUMPI"
    },
    "3681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3683": {
      "op": "DUP1"
    },
    "3684": {
      "op": "REVERT"
    },
    "3685": {
      "op": "JUMPDEST"
    },
    "3686": {
      "op": "PUSH2",
      "value": "0xE6E"
    },
    "3689": {
      "op": "DUP4"
    },
    "3690": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3693": {
      "jump": "i",
      "op": "JUMP"
    },
    "3694": {
      "op": "JUMPDEST"
    },
    "3695": {
      "op": "SWAP2"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3699": {
      "op": "DUP4"
    },
    "3700": {
      "op": "ADD"
    },
    "3701": {
      "op": "CALLDATALOAD"
    },
    "3702": {
      "op": "DUP1"
    },
    "3703": {
      "op": "ISZERO"
    },
    "3704": {
      "op": "ISZERO"
    },
    "3705": {
      "op": "DUP2"
    },
    "3706": {
      "op": "EQ"
    },
    "3707": {
      "op": "PUSH2",
      "value": "0xE83"
    },
    "3710": {
      "op": "JUMPI"
    },
    "3711": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3713": {
      "op": "DUP1"
    },
    "3714": {
      "op": "REVERT"
    },
    "3715": {
      "op": "JUMPDEST"
    },
    "3716": {
      "op": "DUP1"
    },
    "3717": {
      "op": "SWAP2"
    },
    "3718": {
      "op": "POP"
    },
    "3719": {
      "op": "POP"
    },
    "3720": {
      "op": "SWAP3"
    },
    "3721": {
      "op": "POP"
    },
    "3722": {
      "op": "SWAP3"
    },
    "3723": {
      "op": "SWAP1"
    },
    "3724": {
      "op": "POP"
    },
    "3725": {
      "jump": "o",
      "op": "JUMP"
    },
    "3726": {
      "op": "JUMPDEST"
    },
    "3727": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3732": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3734": {
      "op": "SHL"
    },
    "3735": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3737": {
      "op": "MSTORE"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "3740": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3742": {
      "op": "MSTORE"
    },
    "3743": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3747": {
      "op": "REVERT"
    },
    "3748": {
      "op": "JUMPDEST"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3751": {
      "op": "DUP1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3754": {
      "op": "DUP1"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3757": {
      "op": "DUP6"
    },
    "3758": {
      "op": "DUP8"
    },
    "3759": {
      "op": "SUB"
    },
    "3760": {
      "op": "SLT"
    },
    "3761": {
      "op": "ISZERO"
    },
    "3762": {
      "op": "PUSH2",
      "value": "0xEBA"
    },
    "3765": {
      "op": "JUMPI"
    },
    "3766": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3768": {
      "op": "DUP1"
    },
    "3769": {
      "op": "REVERT"
    },
    "3770": {
      "op": "JUMPDEST"
    },
    "3771": {
      "op": "PUSH2",
      "value": "0xEC3"
    },
    "3774": {
      "op": "DUP6"
    },
    "3775": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3778": {
      "jump": "i",
      "op": "JUMP"
    },
    "3779": {
      "op": "JUMPDEST"
    },
    "3780": {
      "op": "SWAP4"
    },
    "3781": {
      "op": "POP"
    },
    "3782": {
      "op": "PUSH2",
      "value": "0xED1"
    },
    "3785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3787": {
      "op": "DUP7"
    },
    "3788": {
      "op": "ADD"
    },
    "3789": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3792": {
      "jump": "i",
      "op": "JUMP"
    },
    "3793": {
      "op": "JUMPDEST"
    },
    "3794": {
      "op": "SWAP3"
    },
    "3795": {
      "op": "POP"
    },
    "3796": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3798": {
      "op": "DUP6"
    },
    "3799": {
      "op": "ADD"
    },
    "3800": {
      "op": "CALLDATALOAD"
    },
    "3801": {
      "op": "SWAP2"
    },
    "3802": {
      "op": "POP"
    },
    "3803": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3805": {
      "op": "DUP6"
    },
    "3806": {
      "op": "ADD"
    },
    "3807": {
      "op": "CALLDATALOAD"
    },
    "3808": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3817": {
      "op": "DUP1"
    },
    "3818": {
      "op": "DUP3"
    },
    "3819": {
      "op": "GT"
    },
    "3820": {
      "op": "ISZERO"
    },
    "3821": {
      "op": "PUSH2",
      "value": "0xEF5"
    },
    "3824": {
      "op": "JUMPI"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3827": {
      "op": "DUP1"
    },
    "3828": {
      "op": "REVERT"
    },
    "3829": {
      "op": "JUMPDEST"
    },
    "3830": {
      "op": "DUP2"
    },
    "3831": {
      "op": "DUP8"
    },
    "3832": {
      "op": "ADD"
    },
    "3833": {
      "op": "SWAP2"
    },
    "3834": {
      "op": "POP"
    },
    "3835": {
      "op": "DUP8"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3838": {
      "op": "DUP4"
    },
    "3839": {
      "op": "ADD"
    },
    "3840": {
      "op": "SLT"
    },
    "3841": {
      "op": "PUSH2",
      "value": "0xF09"
    },
    "3844": {
      "op": "JUMPI"
    },
    "3845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3847": {
      "op": "DUP1"
    },
    "3848": {
      "op": "REVERT"
    },
    "3849": {
      "op": "JUMPDEST"
    },
    "3850": {
      "op": "DUP2"
    },
    "3851": {
      "op": "CALLDATALOAD"
    },
    "3852": {
      "op": "DUP2"
    },
    "3853": {
      "op": "DUP2"
    },
    "3854": {
      "op": "GT"
    },
    "3855": {
      "op": "ISZERO"
    },
    "3856": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "3859": {
      "op": "JUMPI"
    },
    "3860": {
      "op": "PUSH2",
      "value": "0xF1B"
    },
    "3863": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3866": {
      "jump": "i",
      "op": "JUMP"
    },
    "3867": {
      "op": "JUMPDEST"
    },
    "3868": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3870": {
      "op": "MLOAD"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3873": {
      "op": "DUP3"
    },
    "3874": {
      "op": "ADD"
    },
    "3875": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3877": {
      "op": "NOT"
    },
    "3878": {
      "op": "SWAP1"
    },
    "3879": {
      "op": "DUP2"
    },
    "3880": {
      "op": "AND"
    },
    "3881": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "AND"
    },
    "3885": {
      "op": "DUP2"
    },
    "3886": {
      "op": "ADD"
    },
    "3887": {
      "op": "SWAP1"
    },
    "3888": {
      "op": "DUP4"
    },
    "3889": {
      "op": "DUP3"
    },
    "3890": {
      "op": "GT"
    },
    "3891": {
      "op": "DUP2"
    },
    "3892": {
      "op": "DUP4"
    },
    "3893": {
      "op": "LT"
    },
    "3894": {
      "op": "OR"
    },
    "3895": {
      "op": "ISZERO"
    },
    "3896": {
      "op": "PUSH2",
      "value": "0xF43"
    },
    "3899": {
      "op": "JUMPI"
    },
    "3900": {
      "op": "PUSH2",
      "value": "0xF43"
    },
    "3903": {
      "op": "PUSH2",
      "value": "0xE8E"
    },
    "3906": {
      "jump": "i",
      "op": "JUMP"
    },
    "3907": {
      "op": "JUMPDEST"
    },
    "3908": {
      "op": "DUP2"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3911": {
      "op": "MSTORE"
    },
    "3912": {
      "op": "DUP3"
    },
    "3913": {
      "op": "DUP2"
    },
    "3914": {
      "op": "MSTORE"
    },
    "3915": {
      "op": "DUP11"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3918": {
      "op": "DUP5"
    },
    "3919": {
      "op": "DUP8"
    },
    "3920": {
      "op": "ADD"
    },
    "3921": {
      "op": "ADD"
    },
    "3922": {
      "op": "GT"
    },
    "3923": {
      "op": "ISZERO"
    },
    "3924": {
      "op": "PUSH2",
      "value": "0xF5C"
    },
    "3927": {
      "op": "JUMPI"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3930": {
      "op": "DUP1"
    },
    "3931": {
      "op": "REVERT"
    },
    "3932": {
      "op": "JUMPDEST"
    },
    "3933": {
      "op": "DUP3"
    },
    "3934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3936": {
      "op": "DUP7"
    },
    "3937": {
      "op": "ADD"
    },
    "3938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3940": {
      "op": "DUP4"
    },
    "3941": {
      "op": "ADD"
    },
    "3942": {
      "op": "CALLDATACOPY"
    },
    "3943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3947": {
      "op": "DUP5"
    },
    "3948": {
      "op": "DUP4"
    },
    "3949": {
      "op": "ADD"
    },
    "3950": {
      "op": "ADD"
    },
    "3951": {
      "op": "MSTORE"
    },
    "3952": {
      "op": "DUP1"
    },
    "3953": {
      "op": "SWAP6"
    },
    "3954": {
      "op": "POP"
    },
    "3955": {
      "op": "POP"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "op": "POP"
    },
    "3958": {
      "op": "POP"
    },
    "3959": {
      "op": "POP"
    },
    "3960": {
      "op": "SWAP3"
    },
    "3961": {
      "op": "SWAP6"
    },
    "3962": {
      "op": "SWAP2"
    },
    "3963": {
      "op": "SWAP5"
    },
    "3964": {
      "op": "POP"
    },
    "3965": {
      "op": "SWAP3"
    },
    "3966": {
      "op": "POP"
    },
    "3967": {
      "jump": "o",
      "op": "JUMP"
    },
    "3968": {
      "op": "JUMPDEST"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3971": {
      "op": "DUP1"
    },
    "3972": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3974": {
      "op": "DUP4"
    },
    "3975": {
      "op": "DUP6"
    },
    "3976": {
      "op": "SUB"
    },
    "3977": {
      "op": "SLT"
    },
    "3978": {
      "op": "ISZERO"
    },
    "3979": {
      "op": "PUSH2",
      "value": "0xF93"
    },
    "3982": {
      "op": "JUMPI"
    },
    "3983": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3985": {
      "op": "DUP1"
    },
    "3986": {
      "op": "REVERT"
    },
    "3987": {
      "op": "JUMPDEST"
    },
    "3988": {
      "op": "PUSH2",
      "value": "0xF9C"
    },
    "3991": {
      "op": "DUP4"
    },
    "3992": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "3995": {
      "jump": "i",
      "op": "JUMP"
    },
    "3996": {
      "op": "JUMPDEST"
    },
    "3997": {
      "op": "SWAP2"
    },
    "3998": {
      "op": "POP"
    },
    "3999": {
      "op": "PUSH2",
      "value": "0xFAA"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4004": {
      "op": "DUP5"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "PUSH2",
      "value": "0xDB5"
    },
    "4009": {
      "jump": "i",
      "op": "JUMP"
    },
    "4010": {
      "op": "JUMPDEST"
    },
    "4011": {
      "op": "SWAP1"
    },
    "4012": {
      "op": "POP"
    },
    "4013": {
      "op": "SWAP3"
    },
    "4014": {
      "op": "POP"
    },
    "4015": {
      "op": "SWAP3"
    },
    "4016": {
      "op": "SWAP1"
    },
    "4017": {
      "op": "POP"
    },
    "4018": {
      "jump": "o",
      "op": "JUMP"
    },
    "4019": {
      "op": "JUMPDEST"
    },
    "4020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4022": {
      "op": "DUP2"
    },
    "4023": {
      "op": "DUP2"
    },
    "4024": {
      "op": "SHR"
    },
    "4025": {
      "op": "SWAP1"
    },
    "4026": {
      "op": "DUP3"
    },
    "4027": {
      "op": "AND"
    },
    "4028": {
      "op": "DUP1"
    },
    "4029": {
      "op": "PUSH2",
      "value": "0xFC7"
    },
    "4032": {
      "op": "JUMPI"
    },
    "4033": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "4035": {
      "op": "DUP3"
    },
    "4036": {
      "op": "AND"
    },
    "4037": {
      "op": "SWAP2"
    },
    "4038": {
      "op": "POP"
    },
    "4039": {
      "op": "JUMPDEST"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4042": {
      "op": "DUP3"
    },
    "4043": {
      "op": "LT"
    },
    "4044": {
      "op": "DUP2"
    },
    "4045": {
      "op": "SUB"
    },
    "4046": {
      "op": "PUSH2",
      "value": "0xFE7"
    },
    "4049": {
      "op": "JUMPI"
    },
    "4050": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4055": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4057": {
      "op": "SHL"
    },
    "4058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4060": {
      "op": "MSTORE"
    },
    "4061": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4065": {
      "op": "MSTORE"
    },
    "4066": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4068": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4070": {
      "op": "REVERT"
    },
    "4071": {
      "op": "JUMPDEST"
    },
    "4072": {
      "op": "POP"
    },
    "4073": {
      "op": "SWAP2"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "op": "POP"
    },
    "4076": {
      "jump": "o",
      "op": "JUMP"
    },
    "4077": {
      "op": "JUMPDEST"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4080": {
      "op": "DUP1"
    },
    "4081": {
      "op": "DUP3"
    },
    "4082": {
      "op": "MSTORE"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "4085": {
      "op": "SWAP1"
    },
    "4086": {
      "op": "DUP3"
    },
    "4087": {
      "op": "ADD"
    },
    "4088": {
      "op": "MSTORE"
    },
    "4089": {
      "op": "PUSH32",
      "value": "0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4124": {
      "op": "DUP3"
    },
    "4125": {
      "op": "ADD"
    },
    "4126": {
      "op": "MSTORE"
    },
    "4127": {
      "op": "PUSH13",
      "value": "0x1C881BDC88185C1C1C9BDD9959"
    },
    "4141": {
      "op": "PUSH1",
      "value": "0x9A"
    },
    "4143": {
      "op": "SHL"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4146": {
      "op": "DUP3"
    },
    "4147": {
      "op": "ADD"
    },
    "4148": {
      "op": "MSTORE"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4151": {
      "op": "ADD"
    },
    "4152": {
      "op": "SWAP1"
    },
    "4153": {
      "jump": "o",
      "op": "JUMP"
    },
    "4154": {
      "op": "JUMPDEST"
    },
    "4155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4157": {
      "op": "DUP4"
    },
    "4158": {
      "op": "MLOAD"
    },
    "4159": {
      "op": "PUSH2",
      "value": "0x104C"
    },
    "4162": {
      "op": "DUP2"
    },
    "4163": {
      "op": "DUP5"
    },
    "4164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4166": {
      "op": "DUP9"
    },
    "4167": {
      "op": "ADD"
    },
    "4168": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "4171": {
      "jump": "i",
      "op": "JUMP"
    },
    "4172": {
      "op": "JUMPDEST"
    },
    "4173": {
      "op": "DUP4"
    },
    "4174": {
      "op": "MLOAD"
    },
    "4175": {
      "op": "SWAP1"
    },
    "4176": {
      "op": "DUP4"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "SWAP1"
    },
    "4179": {
      "op": "PUSH2",
      "value": "0x1060"
    },
    "4182": {
      "op": "DUP2"
    },
    "4183": {
      "op": "DUP4"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4186": {
      "op": "DUP9"
    },
    "4187": {
      "op": "ADD"
    },
    "4188": {
      "op": "PUSH2",
      "value": "0xD31"
    },
    "4191": {
      "jump": "i",
      "op": "JUMP"
    },
    "4192": {
      "op": "JUMPDEST"
    },
    "4193": {
      "op": "ADD"
    },
    "4194": {
      "op": "SWAP5"
    },
    "4195": {
      "op": "SWAP4"
    },
    "4196": {
      "op": "POP"
    },
    "4197": {
      "op": "POP"
    },
    "4198": {
      "op": "POP"
    },
    "4199": {
      "op": "POP"
    },
    "4200": {
      "jump": "o",
      "op": "JUMP"
    },
    "4201": {
      "op": "JUMPDEST"
    },
    "4202": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4204": {
      "op": "DUP1"
    },
    "4205": {
      "op": "DUP3"
    },
    "4206": {
      "op": "MSTORE"
    },
    "4207": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "4209": {
      "op": "SWAP1"
    },
    "4210": {
      "op": "DUP3"
    },
    "4211": {
      "op": "ADD"
    },
    "4212": {
      "op": "MSTORE"
    },
    "4213": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E736665722066726F6D20696E636F727265637420"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4248": {
      "op": "DUP3"
    },
    "4249": {
      "op": "ADD"
    },
    "4250": {
      "op": "MSTORE"
    },
    "4251": {
      "op": "PUSH5",
      "value": "0x37BBB732B9"
    },
    "4257": {
      "op": "PUSH1",
      "value": "0xD9"
    },
    "4259": {
      "op": "SHL"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4262": {
      "op": "DUP3"
    },
    "4263": {
      "op": "ADD"
    },
    "4264": {
      "op": "MSTORE"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4267": {
      "op": "ADD"
    },
    "4268": {
      "op": "SWAP1"
    },
    "4269": {
      "jump": "o",
      "op": "JUMP"
    },
    "4270": {
      "op": "JUMPDEST"
    },
    "4271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4273": {
      "op": "DUP1"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "MSTORE"
    },
    "4276": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4278": {
      "op": "SWAP1"
    },
    "4279": {
      "op": "DUP3"
    },
    "4280": {
      "op": "ADD"
    },
    "4281": {
      "op": "MSTORE"
    },
    "4282": {
      "op": "PUSH32",
      "value": "0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4317": {
      "op": "DUP3"
    },
    "4318": {
      "op": "ADD"
    },
    "4319": {
      "op": "MSTORE"
    },
    "4320": {
      "op": "PUSH18",
      "value": "0x31B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "4339": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4341": {
      "op": "SHL"
    },
    "4342": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "ADD"
    },
    "4346": {
      "op": "MSTORE"
    },
    "4347": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4349": {
      "op": "ADD"
    },
    "4350": {
      "op": "SWAP1"
    },
    "4351": {
      "jump": "o",
      "op": "JUMP"
    },
    "4352": {
      "op": "JUMPDEST"
    },
    "4353": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4360": {
      "op": "SHL"
    },
    "4361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4363": {
      "op": "MSTORE"
    },
    "4364": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4366": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4373": {
      "op": "REVERT"
    },
    "4374": {
      "op": "JUMPDEST"
    },
    "4375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4377": {
      "op": "DUP3"
    },
    "4378": {
      "op": "DUP3"
    },
    "4379": {
      "op": "LT"
    },
    "4380": {
      "op": "ISZERO"
    },
    "4381": {
      "op": "PUSH2",
      "value": "0x1128"
    },
    "4384": {
      "op": "JUMPI"
    },
    "4385": {
      "op": "PUSH2",
      "value": "0x1128"
    },
    "4388": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4391": {
      "jump": "i",
      "op": "JUMP"
    },
    "4392": {
      "op": "JUMPDEST"
    },
    "4393": {
      "op": "POP"
    },
    "4394": {
      "op": "SUB"
    },
    "4395": {
      "op": "SWAP1"
    },
    "4396": {
      "jump": "o",
      "op": "JUMP"
    },
    "4397": {
      "op": "JUMPDEST"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4400": {
      "op": "DUP3"
    },
    "4401": {
      "op": "NOT"
    },
    "4402": {
      "op": "DUP3"
    },
    "4403": {
      "op": "GT"
    },
    "4404": {
      "op": "ISZERO"
    },
    "4405": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4408": {
      "op": "JUMPI"
    },
    "4409": {
      "op": "PUSH2",
      "value": "0x1140"
    },
    "4412": {
      "op": "PUSH2",
      "value": "0x1100"
    },
    "4415": {
      "jump": "i",
      "op": "JUMP"
    },
    "4416": {
      "op": "JUMPDEST"
    },
    "4417": {
      "op": "POP"
    },
    "4418": {
      "op": "ADD"
    },
    "4419": {
      "op": "SWAP1"
    },
    "4420": {
      "jump": "o",
      "op": "JUMP"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4428": {
      "op": "SHL"
    },
    "4429": {
      "op": "SUB"
    },
    "4430": {
      "op": "DUP6"
    },
    "4431": {
      "op": "DUP2"
    },
    "4432": {
      "op": "AND"
    },
    "4433": {
      "op": "DUP3"
    },
    "4434": {
      "op": "MSTORE"
    },
    "4435": {
      "op": "DUP5"
    },
    "4436": {
      "op": "AND"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4439": {
      "op": "DUP3"
    },
    "4440": {
      "op": "ADD"
    },
    "4441": {
      "op": "MSTORE"
    },
    "4442": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4444": {
      "op": "DUP2"
    },
    "4445": {
      "op": "ADD"
    },
    "4446": {
      "op": "DUP4"
    },
    "4447": {
      "op": "SWAP1"
    },
    "4448": {
      "op": "MSTORE"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4453": {
      "op": "DUP3"
    },
    "4454": {
      "op": "ADD"
    },
    "4455": {
      "op": "DUP2"
    },
    "4456": {
      "op": "SWAP1"
    },
    "4457": {
      "op": "MSTORE"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4460": {
      "op": "SWAP1"
    },
    "4461": {
      "op": "PUSH2",
      "value": "0x1178"
    },
    "4464": {
      "op": "SWAP1"
    },
    "4465": {
      "op": "DUP4"
    },
    "4466": {
      "op": "ADD"
    },
    "4467": {
      "op": "DUP5"
    },
    "4468": {
      "op": "PUSH2",
      "value": "0xD5D"
    },
    "4471": {
      "jump": "i",
      "op": "JUMP"
    },
    "4472": {
      "op": "JUMPDEST"
    },
    "4473": {
      "op": "SWAP7"
    },
    "4474": {
      "op": "SWAP6"
    },
    "4475": {
      "op": "POP"
    },
    "4476": {
      "op": "POP"
    },
    "4477": {
      "op": "POP"
    },
    "4478": {
      "op": "POP"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "op": "POP"
    },
    "4481": {
      "jump": "o",
      "op": "JUMP"
    },
    "4482": {
      "op": "JUMPDEST"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4485": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4487": {
      "op": "DUP3"
    },
    "4488": {
      "op": "DUP5"
    },
    "4489": {
      "op": "SUB"
    },
    "4490": {
      "op": "SLT"
    },
    "4491": {
      "op": "ISZERO"
    },
    "4492": {
      "op": "PUSH2",
      "value": "0x1194"
    },
    "4495": {
      "op": "JUMPI"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4498": {
      "op": "DUP1"
    },
    "4499": {
      "op": "REVERT"
    },
    "4500": {
      "op": "JUMPDEST"
    },
    "4501": {
      "op": "DUP2"
    },
    "4502": {
      "op": "MLOAD"
    },
    "4503": {
      "op": "PUSH2",
      "value": "0x642"
    },
    "4506": {
      "op": "DUP2"
    },
    "4507": {
      "op": "PUSH2",
      "value": "0xCFE"
    },
    "4510": {
      "jump": "i",
      "op": "JUMP"
    }
  },
  "sha1": "5814826230b0a5a33c62879a332cab72eba2b415",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 tokenId\n    ) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(\n        address owner,\n        address operator,\n        bool approved\n    ) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256, /* firstTokenId */\n        uint256 batchSize\n    ) internal virtual {\n        if (batchSize > 1) {\n            if (from != address(0)) {\n                _balances[from] -= batchSize;\n            }\n            if (to != address(0)) {\n                _balances[to] += batchSize;\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 firstTokenId,\n        uint256 batchSize\n    ) internal virtual {}\n}\n",
  "sourceMap": "628:16327:3:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1456:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1479:17:3;;;;:7;;:17;;;;;:::i;:::-;;1390:113;;628:16327;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;628:16327:3;;;-1:-1:-1;628:16327:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:28;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:28;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:28;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:28:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:28;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;628:16327:3;;;;;;",
  "sourcePath": "C:/Users/shobh/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.8.0/contracts/token/ERC721/ERC721.sol",
  "type": "contract"
}